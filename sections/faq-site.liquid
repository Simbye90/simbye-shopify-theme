<!-- sections/faq.liquid -->
<!-- SIMBYE FAQ PAGE - FULLY CUSTOMIZABLE -->

<style>
/* CSS Variables */
:root {
  --faq-bg: #ffffff;
  --faq-text: #1a1a1a;
  --faq-text-secondary: #666666;
  --faq-primary: #009a61;
  --faq-primary-hover: #00824f;
  --faq-accent: #00d97e;
  --faq-border: rgba(0, 0, 0, 0.08);
  --faq-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.06);
  --faq-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
  --faq-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

[data-theme="dark"] {
  --faq-bg: #0a0a0a;
  --faq-text: #f5f5f5;
  --faq-text-secondary: #999999;
  --faq-primary: #00d97e;
  --faq-primary-hover: #009a61;
  --faq-accent: #00ff88;
  --faq-border: rgba(255, 255, 255, 0.08);
  --faq-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.3);
  --faq-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.4);
}

.shopify-section:has(.faq-page) {
  display: block !important;
  padding: 0 !important;
  margin: 0 !important;
  grid-template-columns: unset !important;
}

.faq-page {
  width: 100%;
  min-height: 100vh;
  padding: 60px 0 100px;
  background: var(--faq-bg);
}

.faq-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 40px;
}

.faq-header {
  text-align: center;
  margin-bottom: 60px;
}

.faq-title {
  font-size: clamp(36px, 5vw, 56px);
  font-weight: 700;
  color: var(--faq-text);
  margin: 0 0 16px 0;
  letter-spacing: -0.02em;
}

.faq-subtitle {
  font-size: 18px;
  color: var(--faq-text-secondary);
  margin: 0 0 40px 0;
}

.faq-search {
  position: relative;
  max-width: 600px;
  margin: 0 auto;
}

.faq-search-input {
  width: 100%;
  padding: 16px 50px 16px 20px;
  font-size: 16px;
  border: 2px solid var(--faq-border);
  border-radius: 12px;
  background: var(--faq-bg);
  color: var(--faq-text);
  transition: var(--faq-transition);
  font-family: inherit;
}

.faq-search-input:focus {
  outline: none;
  border-color: var(--faq-primary);
  box-shadow: 0 0 0 4px rgba(0, 154, 97, 0.1);
}

.faq-search-icon {
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
  width: 20px;
  height: 20px;
  color: var(--faq-text-secondary);
  pointer-events: none;
}

.faq-items {
  display: flex;
  flex-direction: column;
  gap: 16px;
  margin-top: 40px;
}

.faq-item {
  background: var(--faq-bg);
  border: 2px solid var(--faq-border);
  border-radius: 16px;
  overflow: hidden;
  transition: var(--faq-transition);
}

.faq-item:hover {
  border-color: var(--faq-primary);
  box-shadow: var(--faq-shadow-sm);
}

.faq-item.active {
  border-color: var(--faq-primary);
  box-shadow: var(--faq-shadow-md);
}

.faq-question {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 20px 24px;
  background: none;
  border: none;
  text-align: left;
  cursor: pointer;
  font-family: inherit;
  gap: 16px;
}

.faq-question-text {
  font-size: 18px;
  font-weight: 600;
  color: var(--faq-text);
  line-height: 1.4;
  flex: 1;
}

.faq-icon {
  width: 24px;
  height: 24px;
  color: var(--faq-primary);
  transition: transform var(--faq-transition);
  flex-shrink: 0;
}

.faq-item.active .faq-icon {
  transform: rotate(180deg);
}

.faq-answer {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.faq-answer-content {
  padding: 0 24px 24px;
  color: var(--faq-text-secondary);
  font-size: 16px;
  line-height: 1.7;
}

.faq-answer-content p {
  margin: 0 0 16px 0;
}

.faq-answer-content p:last-child {
  margin-bottom: 0;
}

.faq-answer-content a {
  color: var(--faq-primary);
  text-decoration: underline;
}

.faq-answer-content ul,
.faq-answer-content ol {
  margin: 16px 0;
  padding-left: 24px;
}

.faq-answer-content li {
  margin-bottom: 8px;
}

.no-results {
  text-align: center;
  padding: 60px 20px;
  display: none;
}

.no-results.active {
  display: block;
}

.no-results-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 24px;
  color: var(--faq-text-secondary);
  opacity: 0.3;
}

.no-results-title {
  font-size: 24px;
  font-weight: 700;
  color: var(--faq-text);
  margin: 0 0 8px 0;
}

.no-results-text {
  font-size: 16px;
  color: var(--faq-text-secondary);
}

@media (max-width: 768px) {
  .faq-page {
    padding: 40px 0 60px;
  }
  
  .faq-container {
    padding: 0 20px;
  }
  
  .faq-title {
    font-size: 32px;
  }
  
  .faq-subtitle {
    font-size: 16px;
  }
  
  .faq-question {
    padding: 16px 20px;
  }
  
  .faq-question-text {
    font-size: 16px;
  }
  
  .faq-answer-content {
    padding: 0 20px 20px;
    font-size: 15px;
  }
}
</style>

<section class="faq-page">
  <div class="faq-container">
    
    <div class="faq-header">
      <h1 class="faq-title">{{ section.settings.title }}</h1>
      <p class="faq-subtitle">{{ section.settings.subtitle }}</p>
      
      <div class="faq-search">
        <input 
          type="text" 
          class="faq-search-input" 
          id="faq-search"
          placeholder="{{ section.settings.search_placeholder }}"
        >
        <svg class="faq-search-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="11" cy="11" r="8"/>
          <path d="m21 21-4.35-4.35"/>
        </svg>
      </div>
    </div>
    
    <div class="faq-items">
      {% for block in section.blocks %}
        <div class="faq-item" data-search="{{ block.settings.question | downcase }} {{ block.settings.answer | strip_html | downcase }}" {{ block.shopify_attributes }}>
          <button class="faq-question" aria-expanded="false">
            <span class="faq-question-text">{{ block.settings.question }}</span>
            <svg class="faq-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="m6 9 6 6 6-6"/>
            </svg>
          </button>
          <div class="faq-answer">
            <div class="faq-answer-content">
              {{ block.settings.answer }}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
    
    <div class="no-results" id="no-results">
      <svg class="no-results-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="11" cy="11" r="8"/>
        <path d="m21 21-4.35-4.35"/>
      </svg>
      <h3 class="no-results-title">{{ section.settings.no_results_title }}</h3>
      <p class="no-results-text">{{ section.settings.no_results_text }}</p>
    </div>
    
  </div>
</section>

<script>
(function() {
  'use strict';
  
  const searchInput = document.getElementById('faq-search');
  const faqItems = document.querySelectorAll('.faq-item');
  const noResults = document.getElementById('no-results');
  
  function toggleFAQ(item) {
    const isActive = item.classList.contains('active');
    const answer = item.querySelector('.faq-answer');
    const answerContent = item.querySelector('.faq-answer-content');
    const button = item.querySelector('.faq-question');
    
    if (isActive) {
      item.classList.remove('active');
      answer.style.maxHeight = '0';
      button.setAttribute('aria-expanded', 'false');
    } else {
      item.classList.add('active');
      answer.style.maxHeight = answerContent.scrollHeight + 'px';
      button.setAttribute('aria-expanded', 'true');
    }
  }
  
  function handleSearch(query) {
    const searchTerm = query.toLowerCase().trim();
    let visibleCount = 0;
    
    if (searchTerm === '') {
      faqItems.forEach(item => {
        item.style.display = '';
      });
      noResults.classList.remove('active');
      return;
    }
    
    faqItems.forEach(item => {
      const searchData = item.getAttribute('data-search') || '';
      
      if (searchData.includes(searchTerm)) {
        item.style.display = '';
        visibleCount++;
      } else {
        item.style.display = 'none';
      }
    });
    
    if (visibleCount === 0) {
      noResults.classList.add('active');
    } else {
      noResults.classList.remove('active');
    }
  }
  
  faqItems.forEach(item => {
    const button = item.querySelector('.faq-question');
    button.addEventListener('click', () => toggleFAQ(item));
  });
  
  if (searchInput) {
    searchInput.addEventListener('input', function() {
      handleSearch(this.value);
    });
  }
  
  // Schema.org markup
  const faqData = [];
  faqItems.forEach(item => {
    const question = item.querySelector('.faq-question-text')?.textContent;
    const answer = item.querySelector('.faq-answer-content')?.textContent;
    
    if (question && answer) {
      faqData.push({
        "@type": "Question",
        "name": question.trim(),
        "acceptedAnswer": {
          "@type": "Answer",
          "text": answer.trim()
        }
      });
    }
  });
  
  if (faqData.length > 0) {
    const script = document.createElement('script');
    script.type = 'application/ld+json';
    script.textContent = JSON.stringify({
      "@context": "https://schema.org",
      "@type": "FAQPage",
      "mainEntity": faqData
    });
    document.head.appendChild(script);
  }
})();
</script>

{% schema %}
{
  "name": "FAQ Page",
  "settings": [
    {
      "type": "header",
      "content": "Page Settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Page Title",
      "default": "Frequently Asked Questions"
    },
    {
      "type": "textarea",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Find answers to common questions about our eSIM service"
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "label": "Search Placeholder",
      "default": "Search for answers..."
    },
    {
      "type": "header",
      "content": "No Results Messages"
    },
    {
      "type": "text",
      "id": "no_results_title",
      "label": "No Results Title",
      "default": "No results found"
    },
    {
      "type": "text",
      "id": "no_results_text",
      "label": "No Results Text",
      "default": "Try different keywords or browse all questions below"
    }
  ],
  "blocks": [
    {
      "type": "faq_item",
      "name": "FAQ Question",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question",
          "default": "What is eSIM?"
        },
        {
          "type": "richtext",
          "id": "answer",
          "label": "Answer",
          "default": "<p>An eSIM is a digital SIM card that allows you to activate a cellular plan without using a physical SIM card.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "FAQ Page",
      "settings": {
        "title": "Frequently Asked Questions",
        "subtitle": "Find answers to common questions about our eSIM service",
        "search_placeholder": "Search for answers...",
        "no_results_title": "No results found",
        "no_results_text": "Try different keywords or browse all questions below"
      },
      "blocks": [
        {
          "type": "faq_item",
          "settings": {
            "question": "What is eSIM?",
            "answer": "<p>An eSIM (embedded SIM) is a digital SIM card that allows you to activate a cellular plan without using a physical SIM card. It's built directly into your device.</p>"
          }
        },
        {
          "type": "faq_item",
          "settings": {
            "question": "How do I know if my phone supports eSIM?",
            "answer": "<p>Most modern smartphones from 2018 onwards support eSIM. You can check in your phone settings under Cellular or Mobile Data. Look for an option to add a cellular plan.</p>"
          }
        },
        {
          "type": "faq_item",
          "settings": {
            "question": "How long does it take to activate?",
            "answer": "<p>Activation is instant! Once you scan the QR code, your eSIM will be activated within seconds. You'll be connected as soon as you arrive in your destination country.</p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}