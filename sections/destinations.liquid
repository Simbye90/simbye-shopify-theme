<!-- sections/destinations.liquid -->
<!-- ENTERPRISE ESIM DESTINATIONS V4 - FULLY OPTIMIZED -->

<style>
/* CSS Variables for Theme */
:root {
  --dest-bg: #ffffff;
  --dest-card-bg: #ffffff;
  --dest-text: #1a1a1a;
  --dest-text-secondary: #666666;
  --dest-border: #e8e8e8;
  --dest-shadow: 0 2px 12px rgba(0, 0, 0, 0.06);
  --dest-shadow-hover: 0 8px 24px rgba(0, 0, 0, 0.12);
  --dest-primary: #009a61;
  --dest-primary-hover: #00824f;
  --dest-tab-bg: #f5f5f5;
  --dest-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Dark Mode Variables */
[data-theme="dark"] {
  --dest-bg: transparent;
  --dest-card-bg: #1a1a1a;
  --dest-text: #f5f5f5;
  --dest-text-secondary: #999999;
  --dest-border: #2a2a2a;
  --dest-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);
  --dest-shadow-hover: 0 8px 24px rgba(0, 0, 0, 0.6);
  --dest-primary: #00d97e;
  --dest-primary-hover: #009a61;
  --dest-tab-bg: rgba(255, 255, 255, 0.05);
}

/* Main Section Container - FULL WIDTH */
.esim-destinations {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  padding: 100px 0;
  background: var(--dest-bg);
  transition: var(--dest-transition);
}

/* Light Mode - Normal Background */
[data-theme="light"] .esim-destinations {
  background: #ffffff;
}

/* Dark Mode - Gradient */
[data-theme="dark"] .esim-destinations {
  background: linear-gradient(180deg,
    #051008 0%,
    #0a1510 20%,
    #0f1210 40%,
    #0a0a0a 70%,
    #0a0a0a 100%
  );
}

.esim-destinations-container {
  max-width: 1440px;
  margin: 0 auto;
  width: 100%;
  padding: 0 20px;
}

/* Tab Navigation - BIGGER TABS WITH 18PX FONT */
.dest-tabs {
  display: inline-flex;
  background: var(--dest-tab-bg);
  border-radius: 100px;
  padding: 8px;
  margin: 0 auto 60px;
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08), 0 6px 16px rgba(0, 0, 0, 0.08);
  gap: 6px;
}

@media (max-width: 640px) {
  .dest-tabs {
    left: 0;
    transform: none;
    display: flex;
  }
}

[data-theme="dark"] .dest-tabs {
  background: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.08);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.4), 0 6px 16px rgba(0, 0, 0, 0.4);
}

/* BIGGER TAB BUTTONS WITH 18PX FONT */
.dest-tab-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 58px;
  padding: 0 42px;
  background: transparent;
  color: var(--dest-text);
  border: 2px solid transparent;
  border-radius: 100px;
  font-size: 18px; /* 18px as requested */
  font-weight: 600;
  cursor: pointer;
  transition: var(--dest-transition);
  white-space: nowrap;
  outline: none;
  position: relative;
  min-width: 145px;
  text-align: center;
  opacity: 0.7;
  letter-spacing: 0.3px;
}

[data-theme="dark"] .dest-tab-btn {
  color: #b0b0b0;
}

.dest-tab-btn:hover:not(.active) {
  opacity: 1;
  background: rgba(0, 154, 97, 0.08);
  transform: translateY(-1px);
}

[data-theme="dark"] .dest-tab-btn:hover:not(.active) {
  background: rgba(0, 217, 126, 0.1);
  color: #e0e0e0;
}

.dest-tab-btn.active {
  background: var(--dest-primary) !important;
  color: white !important;
  opacity: 1;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.35);
  transform: scale(1.1);
}

[data-theme="dark"] .dest-tab-btn.active {
  background: #00d97e !important;
  color: #0a0a0a !important;
  box-shadow: 0 4px 12px rgba(0, 217, 126, 0.35);
}

/* Section Heading */
.dest-heading {
  font-size: clamp(48px, 6vw, 72px);
  font-weight: 700;
  text-align: center;
  margin: 0 0 72px 0;
  color: var(--dest-text);
  letter-spacing: -0.02em;
  line-height: 1.1;
  transition: var(--dest-transition);
  animation: fadeInUp 0.8s ease;
}

/* Countries Grid - BIGGER CARDS */
.dest-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 24px;
  margin-bottom: 72px;
  animation: fadeInUp 0.9s ease 0.1s both;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
}

/* Country Card - NEUES LAYOUT WIE IM SCREENSHOT */
.dest-card {
  background: var(--dest-card-bg);
  border-radius: 24px;
  padding: 24px;
  box-shadow: var(--dest-shadow);
  transition: var(--dest-transition);
  cursor: pointer;
  text-decoration: none;
  display: flex;
  flex-direction: column; /* Vertikal statt horizontal */
  position: relative;
  overflow: hidden;
  border: 2px solid var(--dest-border);
  min-height: 140px;
  height: auto;
}

[data-theme="dark"] .dest-card {
  background: rgba(26, 26, 26, 0.6);
  border-color: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(10px);
}

.dest-card:hover {
  transform: translateY(-6px) scale(1.02);
  box-shadow: var(--dest-shadow-hover);
  border-color: var(--dest-primary);
}

[data-theme="dark"] .dest-card:hover {
  border-color: #00d97e;
  background: rgba(26, 26, 26, 0.8);
}

.dest-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(0, 154, 97, 0.05), 
    transparent);
  transition: left 0.8s ease;
}

[data-theme="dark"] .dest-card::before {
  background: linear-gradient(90deg, 
    transparent, 
    rgba(0, 217, 126, 0.08), 
    transparent);
}

.dest-card:hover::before {
  left: 100%;
}

/* Country Info Section - OBEN */
.dest-card-info {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: auto; /* Push price section down */
}

/* Flag Container - KLEINER UND LINKS */
.dest-flag {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  overflow: hidden;
  flex-shrink: 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  position: relative;
  background: white;
  display: flex;
  align-items: center;
  justify-content: center;
}

[data-theme="dark"] .dest-flag {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
  background: #2a2a2a;
}

.dest-flag img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* Flag Emoji Fallback */
.dest-flag-emoji {
  font-size: 28px;
  line-height: 1;
}

/* Country Name - GRÖSSER AUF DESKTOP */
.dest-country {
  font-size: 22px; /* Erhöht von 20px */
  font-weight: 600;
  color: var(--dest-text);
  margin: 0;
  letter-spacing: -0.01em;
  white-space: normal;
  word-wrap: break-word;
  flex: 1;
}

/* Price Section - UNTEN */
.dest-price-section {
  display: flex;
  align-items: center;
  justify-content: space-between; /* Price left, arrow right */
  margin-top: 20px;
  padding-top: 16px;
  border-top: 1px solid var(--dest-border);
}

[data-theme="dark"] .dest-price-section {
  border-top-color: rgba(255, 255, 255, 0.08);
}

.dest-price-wrapper {
  text-align: left; /* Links ausrichten */
}

.dest-starting {
  font-size: 12px;
  color: var(--dest-text-secondary);
  display: inline; /* Inline statt inline-block */
  margin-right: 4px;
  font-weight: 400; /* Weniger bold */
  opacity: 0.7;
}

.dest-price {
  font-size: 20px;
  font-weight: 700;
  color: var(--dest-text);
  display: inline; /* Inline statt inline-block */
  letter-spacing: -0.02em;
  white-space: nowrap;
}

/* Arrow Icon - ANGEPASST */
.dest-arrow {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: var(--dest-primary);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--dest-transition);
  flex-shrink: 0;
}

.dest-card:hover .dest-arrow {
  transform: translateX(5px) scale(1.1);
  background: var(--dest-primary-hover);
}

.dest-arrow svg {
  width: 20px;
  height: 20px;
  color: white;
  stroke-width: 2.5;
}

/* Tab Content */
.dest-tab-content {
  display: none;
  opacity: 0;
  animation: tabFadeIn 0.6s ease forwards;
}

.dest-tab-content.active {
  display: block;
}

/* Badge for Popular - HÖHER POSITIONIERT */
.dest-badge {
  position: absolute;
  top: 10px;  /* Höher positioniert (war 16px) */
  right: 14px;
  background: var(--dest-primary);
  color: white;
  padding: 6px 14px;
  border-radius: 16px;
  font-size: 12px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.6px;
  z-index: 1;
  box-shadow: 0 2px 8px rgba(0, 154, 97, 0.3);
}

/* View All Button - BIGGER & SHOWS ALL ON SAME PAGE */
.dest-view-all-wrapper {
  text-align: center;
  margin-top: 60px;
  animation: fadeInUp 1s ease 0.2s both;
}

.dest-view-all {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  padding: 20px 60px;
  background: var(--dest-primary);
  color: white;
  border: none;
  border-radius: 60px;
  font-size: 17px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.8px;
  cursor: pointer;
  text-decoration: none;
  transition: var(--dest-transition);
  box-shadow: 0 6px 20px rgba(0, 154, 97, 0.25);
  position: relative;
  overflow: hidden;
}

.dest-view-all:hover {
  background: var(--dest-primary-hover);
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 8px 28px rgba(0, 154, 97, 0.35);
}

.dest-view-all::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.25);
  transform: translate(-50%, -50%);
  transition: width 0.6s ease, height 0.6s ease;
}

.dest-view-all:hover::before {
  width: 400px;
  height: 400px;
}

/* Button when showing all countries */
.dest-view-all.showing-all {
  background: #666;
}

.dest-view-all.showing-all:hover {
  background: #555;
}

[data-theme="dark"] .dest-view-all.showing-all {
  background: #444;
}

[data-theme="dark"] .dest-view-all.showing-all:hover {
  background: #555;
}

/* Arrow icon in button */
.dest-view-all-arrow {
  width: 24px;
  height: 24px;
  transition: var(--dest-transition);
}

.dest-view-all:hover .dest-view-all-arrow {
  transform: translateX(4px);
}

/* Loading State */
.dest-loading {
  text-align: center;
  padding: 100px 20px;
  color: var(--dest-text-secondary);
  grid-column: 1 / -1;
}

.dest-loading-spinner {
  width: 56px;
  height: 56px;
  border: 3px solid var(--dest-border);
  border-top-color: var(--dest-primary);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  margin: 0 auto 32px;
}

/* Empty State */
.dest-empty {
  grid-column: 1 / -1;
  text-align: center;
  padding: 80px 20px;
  color: var(--dest-text-secondary);
  font-size: 18px;
}

/* All Countries Section */
#all-countries-section {
  transition: opacity 0.3s ease, transform 0.3s ease;
  transform: translateY(20px);
  margin-top: 40px;
}

#all-countries-section.active {
  transform: translateY(0);
}

/* Animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes tabFadeIn {
  to {
    opacity: 1;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Responsive Design */
@media (max-width: 1400px) {
  .dest-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 1024px) {
  .dest-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
  }
  
  .dest-heading {
    font-size: 48px;
    margin-bottom: 56px;
  }
  
  .dest-tab-btn {
    height: 54px;
    padding: 0 36px;
    font-size: 17px;
  }

  .dest-card {
    padding: 22px;
  }

  .dest-country {
    font-size: 19px;
  }

  .dest-price {
    font-size: 19px;
  }
}

@media (max-width: 768px) {
  .esim-destinations {
    padding: 72px 0;
  }

  .esim-destinations-container {
    padding: 0 16px;
  }
  
  .dest-tabs {
    width: calc(100% - 32px);
    max-width: 400px;
    padding: 6px;
    gap: 4px;
    margin-bottom: 48px;
  }
  
  .dest-tab-btn {
    height: 50px;
    padding: 0 28px;
    font-size: 16px;
    min-width: 120px;
  }
  
  .dest-card {
    padding: 20px;
  }
  
  .dest-flag {
    width: 44px;
    height: 44px;
  }

  .dest-flag-emoji {
    font-size: 26px;
  }
  
  .dest-country {
    font-size: 19px;
  }

  .dest-price-section {
    margin-top: 16px;
    padding-top: 12px;
  }
  
  .dest-price {
    font-size: 18px;
  }

  .dest-arrow {
    width: 38px;
    height: 38px;
  }

  .dest-arrow svg {
    width: 18px;
    height: 18px;
  }
}

/* OPTIMIZED MOBILE - WIDER CARDS */
@media (max-width: 640px) {
  .esim-destinations {
    padding: 60px 0;
  }

  .esim-destinations-container {
    padding: 0 12px;
  }

  .dest-grid {
    grid-template-columns: 1fr;
    gap: 16px;
    margin-bottom: 48px;
  }
  
  .dest-heading {
    font-size: 36px;
    margin-bottom: 40px;
  }

  .dest-tabs {
    width: calc(100% - 24px);
    max-width: none;
    flex-direction: row;
    justify-content: center; /* Zentrieren */
    align-items: center;
    overflow-x: auto;
    padding: 5px;
    gap: 3px;
    border-radius: 60px;
    /* Remove any extra margins */
    margin-left: auto;
    margin-right: auto;
    left: auto;
    transform: none;
  }

  .dest-tab-btn {
    height: 48px;
    padding: 0 24px;
    font-size: 15px;
    min-width: 110px;
    flex: 1; /* Gleichmäßige Breite */
    max-width: 130px; /* Max Breite für Balance */
  }

  /* WIDER MOBILE CARDS - GRÖSSERE SCHRIFT */
  .dest-card {
    width: 100%;
    padding: 20px;
    min-height: 120px;
    border-radius: 20px;
    gap: 14px;
  }

  .dest-card-info {
    gap: 16px;
  }

  .dest-flag {
    width: 52px;
    height: 52px;
  }

  .dest-flag-emoji {
    font-size: 30px;
  }

  .dest-country {
    font-size: 22px; /* GRÖSSER - wie gewünscht */
    font-weight: 600;
  }

  .dest-price-section {
    margin-top: 18px;
    padding-top: 14px;
  }

  .dest-price-wrapper {
    text-align: left;
  }

  .dest-starting {
    font-size: 13px;
    margin-right: 5px;
  }

  .dest-price {
    font-size: 20px; /* Auch größer */
  }

  .dest-arrow {
    width: 42px;
    height: 42px;
  }

  .dest-arrow svg {
    width: 22px;
    height: 22px;
  }

  .dest-badge {
    top: 8px;  /* Noch höher auf Mobile */
    right: 10px;
    padding: 4px 10px;
    font-size: 10px;
  }

  .dest-view-all {
    width: calc(100% - 24px);
    max-width: 400px;
    padding: 18px 40px;
    font-size: 15px;
  }
}

@media (max-width: 480px) {
  .dest-heading {
    font-size: 36px; /* Auch etwas größer */
    margin-bottom: 40px;
    padding: 0 16px;
  }

  .dest-tabs {
    margin-bottom: 40px;
    display: flex;
    justify-content: center;
    width: calc(100% - 32px);
    padding: 10px;
  }

  .dest-tab-btn {
    height: 48px;
    padding: 0 22px;
    font-size: 15px; /* Etwas größer */
    min-width: 0;
    flex: 1;
    max-width: 120px;
    white-space: nowrap;
  }
  
  .dest-card {
    padding: 18px;
    min-height: 115px;
  }
  
  .dest-flag {
    width: 48px; /* Größer */
    height: 48px;
  }

  .dest-flag-emoji {
    font-size: 28px;
  }
  
  .dest-country {
    font-size: 20px; /* GRÖSSER wie gewünscht */
  }

  .dest-price-section {
    margin-top: 16px;
    padding-top: 12px;
  }

  .dest-starting {
    font-size: 12px; /* Größer */
  }
  
  .dest-price {
    font-size: 19px; /* Größer */
  }

  .dest-arrow {
    width: 38px; /* Größer */
    height: 38px;
  }

  .dest-arrow svg {
    width: 20px;
    height: 20px;
  }
}

/* Very Small Screens */
@media (max-width: 380px) {
  .dest-tab-btn {
    height: 46px;
    padding: 0 18px;
    font-size: 14px;
    min-width: 85px;
  }

  .dest-card {
    padding: 16px;
  }

  .dest-flag {
    width: 44px; /* Größer */
    height: 44px;
  }

  .dest-flag-emoji {
    font-size: 26px;
  }

  .dest-country {
    font-size: 19px; /* GRÖSSER */
  }

  .dest-price-section {
    margin-top: 14px;
    padding-top: 10px;
  }

  .dest-starting {
    font-size: 11px;
  }

  .dest-price {
    font-size: 18px; /* Größer */
  }

  .dest-arrow {
    width: 36px;
    height: 36px;
  }

  .dest-arrow svg {
    width: 18px;
    height: 18px;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* High Contrast Mode */
@media (prefers-contrast: high) {
  .dest-card {
    border-width: 3px;
  }
  
  .dest-tab-btn.active {
    outline: 3px solid var(--dest-primary);
    outline-offset: 3px;
  }
}

/* Print Styles */
@media print {
  .dest-tabs {
    display: none;
  }
  
  .dest-tab-content {
    display: block !important;
    opacity: 1 !important;
  }
  
  .dest-card {
    break-inside: avoid;
  }
}
</style>

<!-- Main Section -->
<section class="esim-destinations" id="esim-destinations">
  <div class="esim-destinations-container">
    
    <!-- Tab Navigation - NUR 3 TABS -->
    <div class="dest-tabs" role="tablist" aria-label="{{ 'destinations.tab_label' | t | default: 'Destination types' }}">
      {% for block in section.blocks %}
        {% if block.type == 'tab' %}
          <button 
            class="dest-tab-btn {% if forloop.first %}active{% endif %}" 
            role="tab"
            aria-selected="{% if forloop.first %}true{% else %}false{% endif %}"
            aria-controls="tab-{{ block.id }}"
            data-tab="{{ block.id }}"
            data-tab-type="{{ block.settings.tab_title | downcase }}"
            type="button"
          >
            {% case block.settings.tab_title %}
              {% when 'Country' %}
                {{ 'destinations.tab_country' | t | default: 'Country' }}
              {% when 'Regional' %}
                {{ 'destinations.tab_regional' | t | default: 'Regional' }}
              {% when 'Global' %}
                {{ 'destinations.tab_global' | t | default: 'Global' }}
              {% else %}
                {{ block.settings.tab_title }}
            {% endcase %}
          </button>
        {% endif %}
      {% endfor %}
    </div>
    
    <!-- Dynamic Heading -->
    <h2 class="dest-heading" id="dest-dynamic-heading">
      {% for block in section.blocks %}
        {% if block.type == 'tab' and forloop.first %}
          {% case block.settings.tab_title %}
            {% when 'Country' %}
              {{ 'destinations.heading_country' | t | default: 'Popular Countries' }}
            {% when 'Regional' %}
              {{ 'destinations.heading_regional' | t | default: 'Regional Packages' }}
            {% when 'Global' %}
              {{ 'destinations.heading_global' | t | default: 'Global Plans' }}
            {% else %}
              {{ 'destinations.heading_popular' | t | default: 'Popular Destinations' }}
          {% endcase %}
        {% endif %}
      {% endfor %}
    </h2>
    
    <!-- Tab Contents -->
    <div class="dest-tabs-content">
      {% for block in section.blocks %}
        {% if block.type == 'tab' %}
          <div 
            id="tab-{{ block.id }}" 
            class="dest-tab-content {% if forloop.first %}active{% endif %}"
            role="tabpanel"
            aria-labelledby="tab-btn-{{ block.id }}"
          >
            {% assign collection = collections[block.settings.collection] %}
            
            {% if collection.products.size > 0 %}
              <div class="dest-grid">
                {% assign product_limit = section.settings.products_limit | default: 20 %}
                {% for product in collection.products limit: product_limit %}
                  <a href="{{ product.url }}" class="dest-card">
                    {% if forloop.index <= 3 and section.settings.show_badges %}
                      <span class="dest-badge">{{ 'destinations.badge_popular' | t | default: 'Popular' }}</span>
                    {% endif %}
                    
                    <div class="dest-card-info">
                      <div class="dest-flag">
                        {% if product.featured_image %}
                          <img 
                            src="{{ product.featured_image | img_url: '96x96', crop: 'center' }}" 
                            alt="{{ product.title }} eSIM"
                            loading="lazy"
                            width="48"
                            height="48"
                          >
                        {% else %}
                          <div class="dest-flag-emoji">🌍</div>
                        {% endif %}
                      </div>
                      
                      <h3 class="dest-country">
                        {{ product.title | replace: 'eSIM', '' | replace: 'Esim', '' | strip }}
                      </h3>
                    </div>
                    
                    <div class="dest-price-section">
                      <div class="dest-price-wrapper">
                        <span class="dest-starting">{{ 'destinations.starting_at' | t | default: 'Ab' }}</span>
                        <span class="dest-price">{{ product.price | money }}</span>
                      </div>
                      
                      <div class="dest-arrow">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                          <path d="M9 18l6-6-6-6" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                      </div>
                    </div>
                  </a>
                {% endfor %}
              </div>
              
            {% else %}
              <div class="dest-empty">
                <p>{{ 'destinations.no_products' | t | default: 'No destinations available in this category.' }}</p>
              </div>
            {% endif %}
          </div>
        {% endif %}
      {% endfor %}
    </div>
    
    <!-- View All Countries Button - ZEIGT ALLE AUF GLEICHER SEITE -->
    {% if section.blocks.size > 0 %}
      <div class="dest-view-all-wrapper">
        <button 
          type="button"
          class="dest-view-all"
          id="dest-show-all-btn"
        >
          <span>{{ 'destinations.view_all_countries' | t | default: 'VIEW ALL 150+ COUNTRIES' }}</span>
          <svg class="dest-view-all-arrow" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M5 12h14M12 5l7 7-7 7" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
    {% endif %}
    
    <!-- Hidden Section für alle Länder -->
    <div id="all-countries-section" style="display: none;">
      {% if section.settings.all_countries_collection %}
        {% assign all_collection_handle = section.settings.all_countries_collection %}
        {% assign all_countries = collections[all_collection_handle] %}
        {% if all_countries %}
          <p style="text-align: center; margin-bottom: 24px; color: var(--dest-text-secondary); font-size: 14px;">
            {{ 'destinations.showing_countries' | t | default: 'Showing' }} {{ all_countries.products_count }} {{ 'destinations.countries' | t | default: 'countries' }}
          </p>
        {% endif %}
      {% endif %}
      <div class="dest-grid" id="all-countries-grid">
        {% comment %} Server-side rendering if collection is available {% endcomment %}
        {% if section.settings.all_countries_collection %}
          {% assign all_collection_handle = section.settings.all_countries_collection %}
          {% assign all_countries = collections[all_collection_handle] %}
          {% if all_countries and all_countries.products.size > 0 %}
            {% comment %} KEIN LIMIT - zeige ALLE Produkte {% endcomment %}
            {% for product in all_countries.products %}
              <a href="{{ product.url }}" class="dest-card">
                <div class="dest-card-info">
                  <div class="dest-flag">
                    {% if product.featured_image %}
                      <img 
                        src="{{ product.featured_image | img_url: '96x96', crop: 'center' }}" 
                        alt="{{ product.title }} eSIM"
                        loading="lazy"
                        width="48"
                        height="48"
                      >
                    {% else %}
                      <div class="dest-flag-emoji">🌍</div>
                    {% endif %}
                  </div>
                  
                  <h3 class="dest-country">
                    {{ product.title | replace: 'eSIM', '' | replace: 'Esim', '' | strip }}
                  </h3>
                </div>
                
                <div class="dest-price-section">
                  <div class="dest-price-wrapper">
                    <span class="dest-starting">{{ 'destinations.starting_at' | t | default: 'Ab' }}</span>
                    <span class="dest-price">{{ product.price | money }}</span>
                  </div>
                  
                  <div class="dest-arrow">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                      <path d="M9 18l6-6-6-6" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </div>
                </div>
              </a>
            {% endfor %}
          {% endif %}
        {% endif %}
      </div>
    </div>
    
  </div>
</section>

<script>
(function() {
  'use strict';
  
  // Cache DOM elements
  const tabButtons = document.querySelectorAll('.dest-tab-btn');
  const tabContents = document.querySelectorAll('.dest-tab-content');
  const heading = document.getElementById('dest-dynamic-heading');
  const showAllBtn = document.getElementById('dest-show-all-btn');
  const allCountriesSection = document.getElementById('all-countries-section');
  const allCountriesGrid = document.getElementById('all-countries-grid');
  
  // State
  let currentTab = null;
  let allCountriesLoaded = false;
  let allCountriesVisible = false;
  
  // Initialize
  function init() {
    if (!tabButtons.length) return;
    
    // Tab click handlers
    tabButtons.forEach(button => {
      button.addEventListener('click', handleTabClick);
    });
    
    // Show All Countries button handler
    if (showAllBtn) {
      showAllBtn.addEventListener('click', handleShowAllCountries);
    }
    
    // Keyboard navigation
    tabButtons.forEach((button, index) => {
      button.addEventListener('keydown', (e) => {
        handleKeyboardNav(e, index);
      });
    });
    
    // Smooth animation on scroll
    animateOnScroll();
  }
  
  // Handle tab click
  function handleTabClick(e) {
    const button = e.currentTarget;
    const tabId = button.dataset.tab;
    const tabType = button.dataset.tabType; // Get tab type from data attribute
    
    // Hide all countries section if visible
    if (allCountriesVisible) {
      hideAllCountries();
    }
    
    // Don't do anything if same tab
    if (currentTab === tabId) return;
    
    // Update active states
    tabButtons.forEach(btn => {
      btn.classList.remove('active');
      btn.setAttribute('aria-selected', 'false');
    });
    
    tabContents.forEach(content => {
      content.classList.remove('active');
    });
    
    // Set new active
    button.classList.add('active');
    button.setAttribute('aria-selected', 'true');
    
    const activeContent = document.getElementById(`tab-${tabId}`);
    if (activeContent) {
      activeContent.classList.add('active');
    }
    
    // Update heading based on tab type
    if (heading && tabType) {
      let newHeading = '';
      
      // Change heading based on tab type
      switch(tabType) {
        case 'country':
          newHeading = '{{ 'destinations.heading_country' | t | default: 'Popular Countries' }}';
          break;
        case 'regional':
          newHeading = '{{ 'destinations.heading_regional' | t | default: 'Regional Packages' }}';
          break;
        case 'global':
          newHeading = '{{ 'destinations.heading_global' | t | default: 'Global Plans' }}';
          break;
        default:
          newHeading = '{{ 'destinations.heading_popular' | t | default: 'Popular Destinations' }}';
      }
      
      updateHeading(newHeading);
    }
    
    currentTab = tabId;
  }
  
  // Handle Show All Countries
  function handleShowAllCountries() {
    if (!allCountriesVisible) {
      // Hide tabs content
      tabContents.forEach(content => {
        content.style.display = 'none';
      });
      
      // Remove active from tabs
      tabButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.setAttribute('aria-selected', 'false');
      });
      
      // Show all countries section
      allCountriesSection.style.display = 'block';
      allCountriesSection.style.opacity = '0';
      
      // Load all countries if not already loaded
      if (!allCountriesLoaded) {
        loadAllCountries();
      }
      
      // Animate in
      setTimeout(() => {
        allCountriesSection.style.opacity = '1';
        allCountriesSection.style.transform = 'translateY(0)';
        // Animate cards if already loaded
        if (allCountriesLoaded) {
          animateCards();
        }
      }, 10);
      
      // Update heading
      updateHeading('{{ 'destinations.heading_all' | t | default: 'All Countries' }}');
      
      // Change button text to "Show Less"
      showAllBtn.querySelector('span').textContent = '{{ 'destinations.show_less' | t | default: 'SHOW LESS' }}';
      showAllBtn.classList.add('showing-all');
      
      // Smooth scroll to section
      document.getElementById('esim-destinations').scrollIntoView({ 
        behavior: 'smooth', 
        block: 'start' 
      });
      
      allCountriesVisible = true;
    } else {
      hideAllCountries();
    }
  }
  
  // Hide all countries and show tabs again
  function hideAllCountries() {
    // Hide all countries
    allCountriesSection.style.opacity = '0';
    
    setTimeout(() => {
      allCountriesSection.style.display = 'none';
      
      // Show tabs content again
      tabContents.forEach(content => {
        content.style.display = '';
      });
      
      // Activate first tab
      if (tabButtons[0]) {
        tabButtons[0].click();
      }
    }, 300);
    
    // Reset button
    showAllBtn.querySelector('span').textContent = '{{ 'destinations.view_all_countries' | t | default: 'VIEW ALL 150+ COUNTRIES' }}';
    showAllBtn.classList.remove('showing-all');
    
    allCountriesVisible = false;
  }
  
  // Load all countries from collection
  function loadAllCountries() {
    // Check if products are already rendered server-side
    const existingCards = allCountriesGrid.querySelectorAll('.dest-card');
    if (existingCards.length > 0) {
      // Products already rendered by Liquid
      console.log(`Loaded ${existingCards.length} countries from server`);
      allCountriesLoaded = true;
      return;
    }
    
    // Get collection from SECTION settings
    {% if section.settings.all_countries_collection %}
      const collectionHandle = '{{ section.settings.all_countries_collection }}';
      
      // Show loading state
      allCountriesGrid.innerHTML = '<div class="dest-loading"><div class="dest-loading-spinner"></div><p>Loading all countries...</p></div>';
      
      // Fetch via AJAX as fallback - OHNE LIMIT für alle Produkte
      fetch(`/collections/${collectionHandle}.json`)
        .then(response => response.json())
        .then(data => {
          if (data.collection && data.collection.products && data.collection.products.length > 0) {
            console.log(`Loading ${data.collection.products.length} countries via AJAX`);
            renderAllCountries(data.collection.products);
            allCountriesLoaded = true;
          } else {
            // Try alternative endpoint with higher limit
            return fetch(`/collections/${collectionHandle}/products.json?limit=999`);
          }
        })
        .then(response => {
          if (response) return response.json();
        })
        .then(data => {
          if (data && data.products && data.products.length > 0) {
            console.log(`Loading ${data.products.length} countries via AJAX (alternative)`);
            renderAllCountries(data.products);
            allCountriesLoaded = true;
          }
        })
        .catch(error => {
          console.error('Error loading countries:', error);
          allCountriesGrid.innerHTML = '<div class="dest-empty"><p>Error loading countries. Please try again.</p></div>';
        });
    {% else %}
      allCountriesGrid.innerHTML = '<div class="dest-empty"><p>Please select an "All Countries Collection" in the section settings.</p></div>';
      allCountriesLoaded = true;
    {% endif %}
  }
  
  // Render products from Liquid data
  function renderAllCountriesFromLiquid(products) {
    let html = '';
    
    products.forEach(product => {
      const title = product.title.replace('eSIM', '').replace('Esim', '').trim();
      
      html += `
        <a href="${product.url}" class="dest-card">
          <div class="dest-card-info">
            <div class="dest-flag">
              ${product.featured_image 
                ? `<img src="${product.featured_image}" alt="${product.title} eSIM" loading="lazy" width="72" height="72">` 
                : '<div class="dest-flag-emoji">🌍</div>'}
            </div>
            <h3 class="dest-country">${title}</h3>
          </div>
          <div class="dest-price-section">
            <div class="dest-price-wrapper">
              <span class="dest-starting">{{ 'destinations.starting_at' | t | default: 'Starting at' }}</span>
              <span class="dest-price">${product.price}</span>
            </div>
            <div class="dest-arrow">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M9 18l6-6-6-6" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
        </a>
      `;
    });
    
    allCountriesGrid.innerHTML = html;
    animateCards();
  }
  
  // Animate cards function
  function animateCards() {
    const cards = allCountriesGrid.querySelectorAll('.dest-card');
    cards.forEach((card, index) => {
      card.style.opacity = '0';
      card.style.transform = 'translateY(20px)';
      setTimeout(() => {
        card.style.opacity = '1';
        card.style.transform = 'translateY(0)';
      }, Math.min(index * 20, 1000));
    });
  }
  
  // Render all countries in grid (AJAX fallback)
  function renderAllCountries(products) {
    let html = '';
    
    products.forEach(product => {
      const price = new Intl.NumberFormat('{{ shop.locale }}', {
        style: 'currency',
        currency: '{{ shop.currency }}'
      }).format(product.variants[0].price);
      
      const title = product.title.replace('eSIM', '').replace('Esim', '').trim();
      const imageUrl = product.featured_image || '';
      
      html += `
        <a href="/products/${product.handle}" class="dest-card">
          <div class="dest-card-info">
            <div class="dest-flag">
              ${imageUrl 
                ? `<img src="${imageUrl}" alt="${product.title} eSIM" loading="lazy" width="48" height="48">` 
                : '<div class="dest-flag-emoji">🌍</div>'}
            </div>
            <h3 class="dest-country">${title}</h3>
          </div>
          <div class="dest-price-section">
            <div class="dest-price-wrapper">
              <span class="dest-starting">{{ 'destinations.starting_at' | t | default: 'Ab' }}</span>
              <span class="dest-price">${price}</span>
            </div>
            <div class="dest-arrow">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M9 18l6-6-6-6" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
        </a>
      `;
    });
    
    allCountriesGrid.innerHTML = html;
    animateCards();
  }
  
  // Update heading with animation
  function updateHeading(text) {
    if (!heading || !text) return;
    
    heading.style.opacity = '0';
    heading.style.transform = 'translateY(-10px)';
    
    setTimeout(() => {
      heading.textContent = text;
      heading.style.opacity = '1';
      heading.style.transform = 'translateY(0)';
    }, 200);
  }
  
  // Keyboard navigation
  function handleKeyboardNav(e, currentIndex) {
    let newIndex = currentIndex;
    
    switch(e.key) {
      case 'ArrowLeft':
        e.preventDefault();
        newIndex = currentIndex > 0 ? currentIndex - 1 : tabButtons.length - 1;
        break;
      case 'ArrowRight':
        e.preventDefault();
        newIndex = currentIndex < tabButtons.length - 1 ? currentIndex + 1 : 0;
        break;
      case 'Home':
        e.preventDefault();
        newIndex = 0;
        break;
      case 'End':
        e.preventDefault();
        newIndex = tabButtons.length - 1;
        break;
      default:
        return;
    }
    
    tabButtons[newIndex].focus();
    tabButtons[newIndex].click();
  }
  
  // Animate cards on scroll
  function animateOnScroll() {
    if ('IntersectionObserver' in window) {
      const cards = document.querySelectorAll('.dest-card');
      
      const cardObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.style.opacity = '1';
              entry.target.style.transform = 'translateY(0)';
            }, index * 50);
          }
        });
      }, {
        threshold: 0.1,
        rootMargin: '50px'
      });
      
      cards.forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        cardObserver.observe(card);
      });
    }
  }
  
  // Initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
})();
</script>

{% schema %}
{
  "name": "eSIM Destinations",
  "class": "esim-destinations-section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_badges",
      "label": "Show Popular Badges",
      "default": true,
      "info": "Shows 'Popular' badge on first 3 items in each tab"
    },
    {
      "type": "range",
      "id": "products_limit",
      "label": "Products per tab",
      "min": 12,
      "max": 48,
      "step": 4,
      "default": 20
    },
    {
      "type": "collection",
      "id": "all_countries_collection",
      "label": "All Countries Collection",
      "info": "Collection for 'View All' button - shows all 150+ countries"
    }
  ],
  "blocks": [
    {
      "name": "Tab",
      "type": "tab",
      "limit": 3,
      "settings": [
        {
          "type": "select",
          "id": "tab_title",
          "label": "Tab Type",
          "options": [
            { "value": "Country", "label": "Country" },
            { "value": "Regional", "label": "Regional" },
            { "value": "Global", "label": "Global" }
          ],
          "default": "Country"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection",
          "info": "Products from this collection will be shown"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "eSIM Destinations",
      "blocks": [
        {
          "type": "tab",
          "settings": {
            "tab_title": "Country"
          }
        },
        {
          "type": "tab",
          "settings": {
            "tab_title": "Regional"
          }
        },
        {
          "type": "tab",
          "settings": {
            "tab_title": "Global"
          }
        }
      ]
    }
  ]
}
{% endschema %}

<!-- LOCALE KEYS NEEDED -->
{% comment %}
Add these to your locales/[language].json files:

{
  "destinations": {
    "tab_label": "Destination types",
    "tab_country": "Country",
    "tab_regional": "Regional",
    "tab_global": "Global",
    "heading_popular": "Popular Destinations",
    "heading_country": "Popular Countries",
    "heading_regional": "Regional Packages",
    "heading_global": "Global Plans",
    "heading_all": "All Countries",
    "starting_at": "starting at",
    "badge_popular": "Popular",
    "flag_alt": "flag",
    "no_products": "No destinations available in this category.",
    "view_all_countries": "VIEW ALL 150+ COUNTRIES",
    "show_less": "SHOW LESS",
    "showing_countries": "Showing",
    "countries": "countries"
  }
}

For German (de.json):
{
  "destinations": {
    "tab_label": "Reisezieltypen",
    "tab_country": "Länder",
    "tab_regional": "Regional",
    "tab_global": "Global",
    "heading_popular": "Beliebte Reiseziele",
    "heading_country": "Beliebte Länder",
    "heading_regional": "Regionale Pakete",
    "heading_global": "Globale Tarife",
    "heading_all": "Alle Länder",
    "starting_at": "Ab",
    "badge_popular": "Beliebt",
    "flag_alt": "Flagge",
    "no_products": "Keine Ziele in dieser Kategorie verfügbar.",
    "view_all_countries": "ALLE 150+ LÄNDER ANZEIGEN",
    "show_less": "WENIGER ANZEIGEN",
    "showing_countries": "Zeige",
    "countries": "Länder"
  }
}
{% endcomment %}