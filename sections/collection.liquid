<!-- sections/collection.liquid -->
<!-- SIMBYE ENTERPRISE COLLECTION PAGE - WIE DESTINATIONS SECTION -->

<style>
/* ============================================
   ENTERPRISE COLLECTION PAGE
   IDENTISCH MIT DESTINATIONS SECTION STYLE
   ============================================ */

/* CSS Variables - IDENTISCH MIT DESTINATIONS */
:root {
  --coll-primary: #009a61;
  --coll-primary-hover: #00824f;
  --coll-accent: #00d97e;
  --coll-text: #1a1a1a;
  --coll-text-secondary: #666666;
  --coll-bg: #ffffff;
  --coll-card-bg: #ffffff;
  --coll-border: rgba(0, 0, 0, 0.08);
  --coll-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
  --coll-shadow-hover: 0 12px 32px rgba(0, 154, 97, 0.15);
  --coll-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Dark Mode */
[data-theme="dark"] {
  --coll-text: #f5f5f5;
  --coll-text-secondary: #999999;
  --coll-bg: transparent;
  --coll-card-bg: rgba(26, 26, 26, 0.6);
  --coll-border: rgba(255, 255, 255, 0.08);
  --coll-primary: #00d97e;
  --coll-primary-hover: #009a61;
  --coll-accent: #00ff88;
  --coll-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  --coll-shadow-hover: 0 12px 32px rgba(0, 217, 126, 0.15);
}

/* Kill Shopify Grid */
.shopify-section:has(.collection-enterprise) {
  display: block !important;
  padding: 0 !important;
  margin: 0 !important;
  grid-template-columns: unset !important;
  max-width: 100% !important;
  width: 100% !important;
}

/* Main Section */
.collection-enterprise {
  width: 100%;
  padding: 80px 0 100px 0;
  background: var(--coll-bg);
  position: relative;
  overflow: hidden;
  transition: var(--coll-transition);
}

[data-theme="light"] .collection-enterprise {
  background: #ffffff;
}

[data-theme="dark"] .collection-enterprise {
  background: #0a0a0a;
}

/* Container */
.collection-container {
  max-width: 1440px;
  margin: 0 auto;
  padding: 0 40px;
  position: relative;
  z-index: 1;
}

/* Header mit Suchbalken */
.collection-header {
  text-align: center;
  margin-bottom: 60px;
  animation: fadeInUp 0.8s ease;
}

.collection-title {
  font-size: clamp(48px, 6vw, 72px);
  font-weight: 700;
  color: var(--coll-text);
  margin: 0 0 20px 0;
  letter-spacing: -0.02em;
  line-height: 1.1;
}

.collection-description {
  font-size: 20px;
  color: var(--coll-text-secondary);
  margin: 0 0 40px 0;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  line-height: 1.5;
}

/* SEARCH BAR - WIE HERO SECTION */
.collection-search {
  max-width: 600px;
  margin: 0 auto 48px auto;
  position: relative;
}

.search-container {
  display: flex;
  align-items: center;
  background: var(--coll-card-bg);
  border-radius: 100px;
  box-shadow: var(--coll-shadow);
  overflow: hidden;
  height: 60px;
  border: 2px solid var(--coll-border);
  transition: var(--coll-transition);
}

.search-container:focus-within {
  box-shadow: 0 8px 32px rgba(0, 154, 97, 0.2);
  border-color: rgba(0, 154, 97, 0.3);
}

[data-theme="dark"] .search-container {
  background: rgba(26, 26, 26, 0.8);
  border-color: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(10px);
}

.search-icon {
  width: 24px;
  height: 24px;
  margin-left: 24px;
  color: var(--coll-text-secondary);
  flex-shrink: 0;
}

.search-input {
  flex: 1;
  border: none;
  background: transparent;
  padding: 0 20px;
  font-size: 16px;
  color: var(--coll-text);
  outline: none;
  font-family: inherit;
}

.search-input::placeholder {
  color: var(--coll-text-secondary);
}

[data-theme="dark"] .search-input {
  color: #f5f5f5;
}

.search-button {
  padding: 0 32px;
  height: 100%;
  background: linear-gradient(135deg, var(--coll-primary), var(--coll-accent));
  color: white;
  border: none;
  font-weight: 700;
  font-size: 15px;
  cursor: pointer;
  transition: var(--coll-transition);
  white-space: nowrap;
}

.search-button:hover {
  background: linear-gradient(135deg, var(--coll-primary-hover), var(--coll-primary));
}

/* SEARCH RESULTS DROPDOWN */
.search-results {
  position: absolute;
  top: calc(100% + 8px);
  left: 0;
  right: 0;
  background: var(--coll-card-bg);
  border-radius: 20px;
  box-shadow: var(--coll-shadow-hover);
  max-height: 400px;
  overflow-y: auto;
  z-index: 100;
  border: 2px solid var(--coll-border);
}

[data-theme="dark"] .search-results {
  background: rgba(26, 26, 26, 0.95);
  border-color: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(10px);
}

.search-result-item {
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 16px 20px;
  border-bottom: 1px solid var(--coll-border);
  cursor: pointer;
  text-decoration: none;
  transition: var(--coll-transition);
}

.search-result-item:last-child {
  border-bottom: none;
}

.search-result-item:hover {
  background: rgba(0, 154, 97, 0.05);
}

[data-theme="dark"] .search-result-item:hover {
  background: rgba(0, 217, 126, 0.05);
}

.search-result-image {
  width: 48px;
  height: 48px;
  border-radius: 8px;
  object-fit: cover;
  flex-shrink: 0;
}

.search-result-info {
  flex: 1;
}

.search-result-title {
  font-size: 16px;
  font-weight: 600;
  color: var(--coll-text);
  margin: 0 0 4px 0;
}

.search-result-price {
  font-size: 14px;
  font-weight: 700;
  color: var(--coll-primary);
}

[data-theme="dark"] .search-result-price {
  color: var(--coll-accent);
}

.search-empty {
  padding: 32px 20px;
  text-align: center;
  color: var(--coll-text-secondary);
  font-size: 14px;
}

.search-loading {
  padding: 24px;
  text-align: center;
  color: var(--coll-text-secondary);
}

/* Products Count */
.products-count {
  text-align: center;
  font-size: 16px;
  color: var(--coll-text-secondary);
  margin-bottom: 32px;
  font-weight: 500;
}

/* PRODUCT GRID - IDENTISCH MIT DESTINATIONS */
.collection-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 24px;
  margin-bottom: 72px;
  animation: fadeInUp 0.9s ease 0.2s both;
}

/* PRODUCT CARD - IDENTISCH MIT DESTINATIONS CARD */
.product-card {
  background: var(--coll-card-bg);
  border-radius: 24px;
  padding: 24px;
  box-shadow: var(--coll-shadow);
  transition: var(--coll-transition);
  cursor: pointer;
  text-decoration: none;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
  border: 2px solid var(--coll-border);
  min-height: 140px;
}

[data-theme="dark"] .product-card {
  background: rgba(26, 26, 26, 0.6);
  border-color: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(10px);
}

.product-card:hover {
  transform: translateY(-6px) scale(1.02);
  box-shadow: var(--coll-shadow-hover);
  border-color: var(--coll-primary);
}

[data-theme="dark"] .product-card:hover {
  border-color: #00d97e;
  background: rgba(26, 26, 26, 0.8);
}

.product-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(0, 154, 97, 0.05), 
    transparent);
  transition: left 0.8s ease;
}

[data-theme="dark"] .product-card::before {
  background: linear-gradient(90deg, 
    transparent, 
    rgba(0, 217, 126, 0.05), 
    transparent);
}

.product-card:hover::before {
  left: 100%;
}

/* Popular Badge */
.popular-badge {
  position: absolute;
  top: 12px;
  right: 12px;
  background: linear-gradient(135deg, #ff7e50, #ff9a76);
  color: white;
  padding: 4px 12px;
  border-radius: 100px;
  font-size: 11px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 4px 12px rgba(255, 126, 80, 0.3);
  z-index: 2;
}

/* Product Info */
.product-info {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 16px;
}

.product-flag {
  width: 48px;
  height: 48px;
  border-radius: 12px;
  object-fit: cover;
  flex-shrink: 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.product-flag-emoji {
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 28px;
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.1), rgba(0, 217, 126, 0.05));
  border-radius: 12px;
  flex-shrink: 0;
}

[data-theme="dark"] .product-flag-emoji {
  background: linear-gradient(135deg, rgba(0, 217, 126, 0.15), rgba(0, 154, 97, 0.1));
}

.product-name {
  font-size: 20px;
  font-weight: 700;
  color: var(--coll-text);
  margin: 0;
  line-height: 1.3;
  flex: 1;
}

/* Price Section */
.product-price-section {
  margin-top: auto;
  padding-top: 16px;
  border-top: 1px solid var(--coll-border);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.product-price-wrapper {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.product-starting {
  font-size: 12px;
  color: var(--coll-text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 600;
}

.product-price {
  font-size: 24px;
  font-weight: 800;
  color: var(--coll-primary);
  line-height: 1;
}

[data-theme="dark"] .product-price {
  color: var(--coll-accent);
}

.product-arrow {
  width: 44px;
  height: 44px;
  border-radius: 50%;
  background: linear-gradient(135deg, var(--coll-primary), var(--coll-accent));
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  transition: var(--coll-transition);
}

.product-card:hover .product-arrow {
  transform: scale(1.1) rotate(5deg);
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.3);
}

.product-arrow svg {
  width: 24px;
  height: 24px;
  color: white;
  stroke-width: 3;
}

/* Empty State */
.collection-empty {
  text-align: center;
  padding: 80px 20px;
  animation: fadeInUp 0.8s ease;
}

.empty-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 24px;
  color: var(--coll-text-secondary);
  opacity: 0.3;
}

.empty-title {
  font-size: 28px;
  font-weight: 700;
  color: var(--coll-text);
  margin: 0 0 12px 0;
}

.empty-text {
  font-size: 16px;
  color: var(--coll-text-secondary);
  margin: 0 0 32px 0;
}

.empty-btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 16px 32px;
  background: linear-gradient(135deg, var(--coll-primary), var(--coll-accent));
  color: white;
  border-radius: 100px;
  text-decoration: none;
  font-weight: 700;
  transition: var(--coll-transition);
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.25);
}

.empty-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.35);
}

/* Pagination */
.collection-pagination {
  display: flex;
  justify-content: center;
  gap: 12px;
  margin-top: 60px;
  animation: fadeInUp 0.9s ease 0.3s both;
}

.pagination-item {
  min-width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 12px;
  background: var(--coll-card-bg);
  border: 2px solid var(--coll-border);
  color: var(--coll-text);
  text-decoration: none;
  font-weight: 600;
  transition: var(--coll-transition);
  padding: 0 16px;
}

[data-theme="dark"] .pagination-item {
  background: rgba(26, 26, 26, 0.6);
  border-color: rgba(255, 255, 255, 0.08);
}

.pagination-item:hover:not(.active):not(.disabled) {
  border-color: var(--coll-primary);
  transform: translateY(-2px);
}

.pagination-item.active {
  background: linear-gradient(135deg, var(--coll-primary), var(--coll-accent));
  color: white;
  border-color: transparent;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.3);
}

.pagination-item.disabled {
  opacity: 0.3;
  cursor: not-allowed;
}

/* Animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive Design */
@media (max-width: 1400px) {
  .collection-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 1024px) {
  .collection-container {
    padding: 0 30px;
  }
  
  .collection-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
  }
  
  .collection-title {
    font-size: 48px;
  }
  
  .tag-btn {
    padding: 14px 28px;
    font-size: 17px;
  }
}

@media (max-width: 768px) {
  .collection-enterprise {
    padding: 60px 0 80px 0;
  }
  
  .collection-container {
    padding: 0 20px;
  }
  
  .collection-title {
    font-size: 36px;
    margin-bottom: 16px;
  }
  
  .collection-description {
    font-size: 16px;
    margin-bottom: 32px;
  }
  
  .collection-search {
    margin-bottom: 32px;
  }
  
  .search-container {
    height: 54px;
  }
  
  .search-icon {
    width: 20px;
    height: 20px;
    margin-left: 20px;
  }
  
  .search-input {
    font-size: 15px;
    padding: 0 16px;
  }
  
  .search-button {
    padding: 0 24px;
    font-size: 14px;
  }
  
  .collection-tags {
    width: calc(100% - 40px);
    max-width: 500px;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    margin-bottom: 40px;
  }
  
  .collection-tags::-webkit-scrollbar {
    display: none;
  }
  
  .tag-btn {
    padding: 12px 24px;
    font-size: 16px;
  }
  
  .collection-grid {
    gap: 16px;
  }
  
  .product-card {
    padding: 20px;
  }
  
  .product-flag,
  .product-flag-emoji {
    width: 44px;
    height: 44px;
  }
  
  .product-flag-emoji {
    font-size: 26px;
  }
  
  .product-name {
    font-size: 18px;
  }
  
  .product-price {
    font-size: 20px;
  }
  
  .product-arrow {
    width: 40px;
    height: 40px;
  }
  
  .product-arrow svg {
    width: 20px;
    height: 20px;
  }
}

@media (max-width: 640px) {
  .collection-grid {
    grid-template-columns: 1fr;
  }
  
  .collection-enterprise {
    padding: 48px 0 60px 0;
  }
  
  .collection-title {
    font-size: 32px;
  }
}

@media (max-width: 480px) {
  .collection-container {
    padding: 0 16px;
  }
  
  .collection-search {
    margin-bottom: 28px;
  }
  
  .search-container {
    height: 52px;
  }
  
  .tag-btn {
    padding: 10px 20px;
    font-size: 15px;
  }
  
  .product-card {
    padding: 18px;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
</style>

<!-- Main Section -->
<section class="collection-enterprise">
  <div class="collection-container">
    
    <!-- Header -->
    <div class="collection-header">
      <h1 class="collection-title">{{ collection.title }}</h1>
      
      {% if collection.description != blank %}
        <div class="collection-description">
          {{ collection.description }}
        </div>
      {% endif %}
      
      <!-- Search Bar -->
      <div class="collection-search">
        <div class="search-container" id="collectionSearch">
          <svg class="search-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"/>
            <path d="m21 21-4.35-4.35"/>
          </svg>
          
          <input 
            type="search" 
            id="searchInput"
            class="search-input"
            placeholder="Search products..."
            autocomplete="off"
          >
          
          <button type="button" class="search-button" id="searchButton">
            Search
          </button>
        </div>
        
        <!-- Search Results Dropdown -->
        <div class="search-results" id="searchResults" style="display: none;"></div>
      </div>
    </div>
    
    <!-- Products Count -->
    {% if collection.products_count > 0 %}
      <p class="products-count">
        Showing {{ collection.products_count }} 
        {% if collection.products_count == 1 %}product{% else %}products{% endif %}
      </p>
    {% endif %}
    
    <!-- Products Grid -->
    {% paginate collection.products by 20 %}
      {% if collection.products.size > 0 %}
        <div class="collection-grid">
          {% for product in collection.products %}
            <a href="{{ product.url }}" class="product-card">
              
              {% comment %} Popular Badge für 3. Produkt {% endcomment %}
              {% if forloop.index == 3 %}
                <span class="popular-badge">Popular</span>
              {% endif %}
              
              <div class="product-info">
                {% comment %} Flag Image {% endcomment %}
                <div class="product-flag-wrapper">
                  {% if product.featured_image %}
                    <img 
                      src="{{ product.featured_image | image_url: width: 96 }}" 
                      alt="{{ product.title }}"
                      class="product-flag"
                      loading="lazy"
                      width="48"
                      height="48"
                    >
                  {% else %}
                    <div class="product-flag-emoji">🌍</div>
                  {% endif %}
                </div>
                
                {% comment %} Product Name {% endcomment %}
                <h3 class="product-name">
                  {{ product.title | replace: 'eSIM', '' | replace: 'Esim', '' | strip }}
                </h3>
              </div>
              
              {% comment %} Price Section {% endcomment %}
              <div class="product-price-section">
                <div class="product-price-wrapper">
                  <span class="product-starting">Starting at</span>
                  <span class="product-price">{{ product.price | money }}</span>
                </div>
                
                <div class="product-arrow">
                  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M9 18l6-6-6-6" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </div>
              </div>
            </a>
          {% endfor %}
        </div>
        
        <!-- Pagination -->
        {% if paginate.pages > 1 %}
          <div class="collection-pagination">
            {% if paginate.previous %}
              <a href="{{ paginate.previous.url }}" class="pagination-item">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M15 18l-6-6 6-6"/>
                </svg>
              </a>
            {% else %}
              <span class="pagination-item disabled">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M15 18l-6-6 6-6"/>
                </svg>
              </span>
            {% endif %}
            
            {% for part in paginate.parts %}
              {% if part.is_link %}
                <a href="{{ part.url }}" class="pagination-item">
                  {{ part.title }}
                </a>
              {% else %}
                {% if part.title == paginate.current_page %}
                  <span class="pagination-item active">{{ part.title }}</span>
                {% else %}
                  <span class="pagination-item">{{ part.title }}</span>
                {% endif %}
              {% endif %}
            {% endfor %}
            
            {% if paginate.next %}
              <a href="{{ paginate.next.url }}" class="pagination-item">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M9 18l6-6-6-6"/>
                </svg>
              </a>
            {% else %}
              <span class="pagination-item disabled">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M9 18l6-6-6-6"/>
                </svg>
              </span>
            {% endif %}
          </div>
        {% endif %}
        
      {% else %}
        <!-- Empty State -->
        <div class="collection-empty">
          <svg class="empty-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"/>
            <path d="M16 16s-1.5-2-4-2-4 2-4 2"/>
            <line x1="9" y1="9" x2="9.01" y2="9"/>
            <line x1="15" y1="9" x2="15.01" y2="9"/>
          </svg>
          
          <h2 class="empty-title">No products found</h2>
          <p class="empty-text">
            {% if search.terms %}
              No results for "{{ search.terms }}". Try different keywords.
            {% else %}
              This collection is currently empty.
            {% endif %}
          </p>
          
          <a href="{{ routes.all_products_collection_url }}" class="empty-btn">
            <span>Browse All Products</span>
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
          </a>
        </div>
      {% endif %}
    {% endpaginate %}
    
  </div>
</section>

<!-- SEO: Structured Data -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": {{ collection.title | json }},
  "description": {{ collection.description | strip_html | json }},
  "url": "{{ shop.url }}{{ collection.url }}",
  "numberOfItems": {{ collection.products_count }},
  "itemListElement": [
    {% for product in collection.products limit: 20 %}
      {
        "@type": "ListItem",
        "position": {{ forloop.index }},
        "item": {
          "@type": "Product",
          "name": {{ product.title | json }},
          "url": "{{ shop.url }}{{ product.url }}",
          "image": "{{ product.featured_image | image_url: width: 800 }}",
          "offers": {
            "@type": "Offer",
            "price": "{{ product.price | money_without_currency | remove: ',' }}",
            "priceCurrency": "{{ cart.currency.iso_code }}",
            "availability": "{% if product.available %}https://schema.org/InStock{% else %}https://schema.org/OutOfStock{% endif %}"
          }
        }
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ]
}
</script>

<!-- Search JavaScript - SHOPIFY PREDICTIVE SEARCH API -->
<script>
(function() {
  'use strict';
  
  const searchInput = document.getElementById('searchInput');
  const searchButton = document.getElementById('searchButton');
  const searchResults = document.getElementById('searchResults');
  
  let searchTimeout = null;
  let currentRequest = null;
  
  // Search products via Shopify API
  function searchProducts(query) {
    if (!query || query.length < 2) {
      searchResults.style.display = 'none';
      return;
    }
    
    // Cancel previous request
    if (currentRequest) {
      currentRequest.abort();
    }
    
    // Show loading
    searchResults.innerHTML = '<div class="search-loading">Searching...</div>';
    searchResults.style.display = 'block';
    
    // Create new request
    currentRequest = new XMLHttpRequest();
    const url = `/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=6`;
    
    currentRequest.open('GET', url, true);
    currentRequest.setRequestHeader('Content-Type', 'application/json');
    
    currentRequest.onload = function() {
      if (currentRequest.status === 200) {
        try {
          const data = JSON.parse(currentRequest.responseText);
          displayResults(data.resources.results.products || []);
        } catch(e) {
          console.error('Search error:', e);
          searchResults.innerHTML = '<div class="search-empty">Search failed</div>';
        }
      } else {
        searchResults.innerHTML = '<div class="search-empty">Search failed</div>';
      }
      currentRequest = null;
    };
    
    currentRequest.onerror = function() {
      searchResults.innerHTML = '<div class="search-empty">Search failed</div>';
      currentRequest = null;
    };
    
    currentRequest.send();
  }
  
  // Display search results
  function displayResults(products) {
    if (!products || products.length === 0) {
      searchResults.innerHTML = '<div class="search-empty">No products found</div>';
      searchResults.style.display = 'block';
      return;
    }
    
    let html = '';
    products.forEach(product => {
      // Get image URL - handle different formats
      let imageUrl = '';
      if (product.image) {
        imageUrl = typeof product.image === 'string' ? product.image : product.image.url || product.image.src;
      } else if (product.featured_image) {
        imageUrl = typeof product.featured_image === 'string' ? product.featured_image : product.featured_image.url || product.featured_image.src;
      }
      
      // Ensure image has proper size parameter
      if (imageUrl && !imageUrl.includes('_small') && !imageUrl.includes('_compact')) {
        imageUrl = imageUrl.replace(/\.(jpg|jpeg|png|webp)/i, '_small.$1');
      }
      
      // Get price
      const price = product.price_min ? '€' + (product.price_min / 100).toFixed(2) : 
                   product.price ? '€' + (product.price / 100).toFixed(2) : 
                   'Price not available';
      
      html += `
        <a href="${product.url}" class="search-result-item">
          ${imageUrl 
            ? `<img src="${imageUrl}" class="search-result-image" alt="${product.title}" loading="lazy" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
               <div class="search-result-image" style="display: none; align-items: center; justify-content: center; font-size: 24px; background: rgba(0, 154, 97, 0.1); border-radius: 8px;">🌍</div>`
            : `<div class="search-result-image" style="display: flex; align-items: center; justify-content: center; font-size: 24px; background: rgba(0, 154, 97, 0.1); border-radius: 8px;">🌍</div>`
          }
          <div class="search-result-info">
            <h4 class="search-result-title">${product.title.replace('eSIM', '').replace('Esim', '').trim()}</h4>
            <p class="search-result-price">${price}</p>
          </div>
        </a>
      `;
    });
    
    searchResults.innerHTML = html;
    searchResults.style.display = 'block';
  }
  
  // Event listeners
  if (searchInput) {
    searchInput.addEventListener('input', function(e) {
      clearTimeout(searchTimeout);
      const query = e.target.value.trim();
      
      if (query.length === 0) {
        searchResults.style.display = 'none';
        return;
      }
      
      // Wait 300ms after last keystroke
      searchTimeout = setTimeout(() => {
        searchProducts(query);
      }, 300);
    });
    
    searchInput.addEventListener('focus', function() {
      if (searchInput.value.trim().length >= 2) {
        searchProducts(searchInput.value.trim());
      }
    });
  }
  
  if (searchButton) {
    searchButton.addEventListener('click', function() {
      const query = searchInput.value.trim();
      if (query) {
        searchProducts(query);
      }
    });
  }
  
  // Close results when clicking outside
  document.addEventListener('click', function(e) {
    const searchContainer = document.getElementById('collectionSearch');
    if (searchContainer && !searchContainer.contains(e.target) && !searchResults.contains(e.target)) {
      searchResults.style.display = 'none';
    }
  });
  
  // Close on Escape
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      searchResults.style.display = 'none';
      searchInput.blur();
    }
  });
  
  // Enter key to search
  if (searchInput) {
    searchInput.addEventListener('keydown', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        const query = searchInput.value.trim();
        if (query) {
          // Redirect to full search page
          window.location.href = `/search?q=${encodeURIComponent(query)}`;
        }
      }
    });
  }
})();
</script>

{% schema %}
{
  "name": "Collection Page",
  "settings": [
    {
      "type": "header",
      "content": "Collection Settings"
    },
    {
      "type": "paragraph",
      "content": "This section displays your collection products in an enterprise grid layout similar to the Destinations section."
    }
  ]
}
{% endschema %}