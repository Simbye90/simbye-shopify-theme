<!-- sections/search.liquid -->
<!-- SIMBYE ENTERPRISE SEARCH - PRODUCTS ONLY -->

<style>
/* CSS Variables */
:root {
  --search-primary: #009a61;
  --search-primary-hover: #00824f;
  --search-accent: #00d97e;
  --search-text: #1a1a1a;
  --search-text-secondary: #666666;
  --search-bg: #ffffff;
  --search-card-bg: #ffffff;
  --search-border: rgba(0, 0, 0, 0.08);
  --search-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.06);
  --search-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
  --search-shadow-lg: 0 12px 32px rgba(0, 154, 97, 0.15);
  --search-radius: 24px;
  --search-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Dark Mode */
[data-theme="dark"] {
  --search-text: #f5f5f5;
  --search-text-secondary: #999999;
  --search-bg: #0a0a0a;
  --search-card-bg: rgba(26, 26, 26, 0.8);
  --search-border: rgba(255, 255, 255, 0.08);
  --search-primary: #00d97e;
  --search-primary-hover: #009a61;
  --search-accent: #00ff88;
  --search-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.3);
  --search-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.4);
  --search-shadow-lg: 0 12px 32px rgba(0, 217, 126, 0.2);
}

/* Kill Shopify Grid */
.shopify-section:has(.search-enterprise) {
  display: block !important;
  padding: 0 !important;
  margin: 0 !important;
  grid-template-columns: unset !important;
}

/* Main Section */
.search-enterprise {
  width: 100%;
  min-height: 100vh;
  padding: 120px 0 80px 0;
  background: var(--search-bg);
  position: relative;
}

[data-theme="dark"] .search-enterprise {
  background: #0a0a0a;
}

/* Container */
.search-container {
  max-width: 1440px;
  margin: 0 auto;
  padding: 0 40px;
}

/* Search Header */
.search-header {
  text-align: center;
  margin-bottom: 60px;
}

.search-title {
  font-size: clamp(36px, 5vw, 56px);
  font-weight: 700;
  color: var(--search-text);
  margin: 0 0 32px 0;
  letter-spacing: -0.02em;
}

/* Search Form */
.search-form {
  max-width: 680px;
  margin: 0 auto;
  position: relative;
}

.search-input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  background: white;
  border: 2px solid var(--search-border);
  border-radius: 16px;
  padding: 4px;
  box-shadow: var(--search-shadow-md);
  transition: var(--search-transition);
}

.search-input-wrapper:focus-within {
  border-color: var(--search-primary);
  box-shadow: var(--search-shadow-lg);
}

[data-theme="dark"] .search-input-wrapper {
  background: rgba(26, 26, 26, 0.8);
  border-color: rgba(255, 255, 255, 0.08);
}

.search-icon {
  width: 24px;
  height: 24px;
  margin: 0 16px;
  color: var(--search-text-secondary);
  flex-shrink: 0;
}

.search-input {
  flex: 1;
  border: none;
  padding: 16px 8px;
  font-size: 18px;
  font-weight: 500;
  background: transparent;
  color: var(--search-text);
  outline: none;
}

.search-input::placeholder {
  color: var(--search-text-secondary);
  font-weight: 400;
}

.search-submit {
  padding: 14px 32px;
  background: var(--search-primary);
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: var(--search-transition);
  white-space: nowrap;
}

.search-submit:hover {
  background: var(--search-primary-hover);
  transform: translateY(-1px);
}

/* Search Suggestions */
.search-suggestions {
  position: absolute;
  top: calc(100% + 8px);
  left: 0;
  right: 0;
  background: white;
  border: 1px solid var(--search-border);
  border-radius: 16px;
  box-shadow: var(--search-shadow-lg);
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: var(--search-transition);
  z-index: 100;
  max-height: 400px;
  overflow-y: auto;
}

.search-suggestions.active {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

[data-theme="dark"] .search-suggestions {
  background: #1a1a1a;
  border-color: rgba(255, 255, 255, 0.08);
}

.suggestion-item {
  display: flex;
  align-items: center;
  gap: 16px;
  padding: 12px 16px;
  color: var(--search-text);
  text-decoration: none;
  border-bottom: 1px solid var(--search-border);
  transition: var(--search-transition);
  cursor: pointer;
}

.suggestion-item:hover {
  background: rgba(0, 154, 97, 0.08);
}

.suggestion-item:last-child {
  border-bottom: none;
}

.suggestion-image {
  width: 48px;
  height: 48px;
  border-radius: 8px;
  object-fit: cover;
  flex-shrink: 0;
}

.suggestion-info {
  flex: 1;
  min-width: 0;
}

.suggestion-title {
  font-size: 15px;
  font-weight: 600;
  color: var(--search-text);
  margin: 0 0 4px 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.suggestion-price {
  font-size: 14px;
  font-weight: 700;
  color: var(--search-primary);
}

/* Results Info */
.search-results-info {
  text-align: center;
  margin: 40px 0;
  font-size: 18px;
  color: var(--search-text-secondary);
}

.search-results-info strong {
  color: var(--search-primary);
  font-weight: 700;
}

/* No Results */
.search-no-results {
  text-align: center;
  padding: 80px 20px;
}

.no-results-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 24px auto;
  color: var(--search-text-secondary);
  opacity: 0.5;
}

.no-results-title {
  font-size: 28px;
  font-weight: 700;
  color: var(--search-text);
  margin: 0 0 12px 0;
}

.no-results-text {
  font-size: 16px;
  color: var(--search-text-secondary);
  margin: 0;
}

/* Product Grid */
.search-products-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 32px;
  margin-bottom: 60px;
}

/* Product Card */
.search-product-card {
  background: var(--search-card-bg);
  border: 2px solid var(--search-border);
  border-radius: var(--search-radius);
  padding: 20px;
  text-decoration: none;
  transition: var(--search-transition);
  position: relative;
  overflow: hidden;
}

.search-product-card:hover {
  border-color: var(--search-primary);
  transform: translateY(-4px);
  box-shadow: var(--search-shadow-lg);
}

[data-theme="dark"] .search-product-card {
  background: var(--search-card-bg);
  border-color: rgba(255, 255, 255, 0.08);
}

.product-image-wrapper {
  position: relative;
  aspect-ratio: 1;
  border-radius: 16px;
  overflow: hidden;
  margin-bottom: 16px;
  background: rgba(0, 0, 0, 0.02);
}

[data-theme="dark"] .product-image-wrapper {
  background: rgba(255, 255, 255, 0.02);
}

.product-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.4s ease;
}

.search-product-card:hover .product-image {
  transform: scale(1.05);
}

.product-info {
  display: flex;
  align-items: flex-start;
  gap: 12px;
  margin-bottom: 12px;
}

.product-flag {
  width: 40px;
  height: 40px;
  border-radius: 8px;
  object-fit: cover;
  flex-shrink: 0;
}

.product-title {
  font-size: 18px;
  font-weight: 700;
  color: var(--search-text);
  margin: 0;
  line-height: 1.3;
  flex: 1;
}

.product-price {
  font-size: 24px;
  font-weight: 800;
  color: var(--search-primary);
  margin: 8px 0 0 0;
}

[data-theme="dark"] .product-price {
  color: var(--search-accent);
}

/* Pagination */
.search-pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  margin-top: 60px;
}

.pagination-item {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: 44px;
  height: 44px;
  padding: 0 16px;
  background: var(--search-card-bg);
  border: 1px solid var(--search-border);
  border-radius: 12px;
  color: var(--search-text);
  text-decoration: none;
  font-weight: 600;
  transition: var(--search-transition);
}

.pagination-item:hover {
  border-color: var(--search-primary);
  background: rgba(0, 154, 97, 0.08);
  color: var(--search-primary);
}

.pagination-item.active {
  background: var(--search-primary);
  border-color: var(--search-primary);
  color: white;
}

.pagination-item.disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* Responsive */
@media (max-width: 1024px) {
  .search-products-grid {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    gap: 24px;
  }
}

@media (max-width: 768px) {
  .search-enterprise {
    padding: 100px 0 60px 0;
  }
  
  .search-container {
    padding: 0 20px;
  }
  
  .search-header {
    margin-bottom: 40px;
  }
  
  .search-title {
    font-size: 32px;
  }
  
  .search-input {
    font-size: 16px;
  }
  
  .search-submit {
    padding: 12px 24px;
    font-size: 15px;
  }
  
  .search-products-grid {
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: 16px;
  }
  
  .search-product-card {
    padding: 12px;
  }
  
  .product-title {
    font-size: 16px;
  }
  
  .product-price {
    font-size: 20px;
  }
}
</style>

<section class="search-enterprise">
  <div class="search-container">
    
    <!-- Header -->
    <div class="search-header">
      <h1 class="search-title">Search Products</h1>
      
      <!-- Search Form -->
      <form action="{{ routes.search_url }}" method="get" role="search" class="search-form" id="search-form">
        <div class="search-input-wrapper">
          <svg class="search-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"/>
            <path d="m21 21-4.35-4.35"/>
          </svg>
          
          <input
            type="search"
            name="q"
            id="search-input"
            value="{{ search.terms | escape }}"
            placeholder="Search for eSIM destinations..."
            class="search-input"
            autocomplete="off"
          >
          
          <button type="submit" class="search-submit">Search</button>
        </div>
        
        <!-- Live Suggestions -->
        <div class="search-suggestions" id="search-suggestions"></div>
      </form>
    </div>
    
    {% if search.performed %}
      {% comment %} Filter nur Produkte {% endcomment %}
      {% assign product_results = search.results | where: 'object_type', 'product' %}
      
      {% if product_results.size == 0 %}
        <!-- No Results -->
        <div class="search-no-results">
          <svg class="no-results-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"/>
            <path d="m21 21-4.35-4.35"/>
            <line x1="11" y1="8" x2="11" y2="14"/>
            <line x1="11" y1="16" x2="11" y2="16"/>
          </svg>
          <h2 class="no-results-title">No products found</h2>
          <p class="no-results-text">
            We couldn't find any eSIM products matching "{{ search.terms | escape }}". 
            Try searching for a country name or region.
          </p>
        </div>
      {% else %}
        <!-- Results Info -->
        <div class="search-results-info">
          Found <strong>{{ product_results.size }} product{% if product_results.size != 1 %}s{% endif %}</strong> 
          for "{{ search.terms | escape }}"
        </div>
        
        <!-- Products Grid -->
        {% paginate product_results by 12 %}
          <div class="search-products-grid">
            {% for product in product_results %}
              <a href="{{ product.url }}" class="search-product-card">
                <div class="product-image-wrapper">
                  {% if product.images[1] %}
                    <img 
                      src="{{ product.images[1] | image_url: width: 400 }}" 
                      alt="{{ product.title }}"
                      class="product-image"
                      loading="lazy"
                    >
                  {% elsif product.featured_image %}
                    <img 
                      src="{{ product.featured_image | image_url: width: 400 }}" 
                      alt="{{ product.title }}"
                      class="product-image"
                      loading="lazy"
                    >
                  {% endif %}
                </div>
                
                <div class="product-info">
                  {% if product.featured_image %}
                    <img 
                      src="{{ product.featured_image | image_url: width: 80 }}" 
                      alt="{{ product.title }}"
                      class="product-flag"
                    >
                  {% endif %}
                  
                  <h3 class="product-title">{{ product.title }}</h3>
                </div>
                
                {% if product.price %}
                  <p class="product-price">
                    {{ product.price | money_without_trailing_zeros }}
                  </p>
                {% endif %}
              </a>
            {% endfor %}
          </div>
          
          <!-- Pagination -->
          {% if paginate.pages > 1 %}
            <div class="search-pagination">
              {% if paginate.previous %}
                <a href="{{ paginate.previous.url }}" class="pagination-item">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M15 18l-6-6 6-6"/>
                  </svg>
                </a>
              {% else %}
                <span class="pagination-item disabled">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M15 18l-6-6 6-6"/>
                  </svg>
                </span>
              {% endif %}
              
              {% for part in paginate.parts %}
                {% if part.is_link %}
                  <a href="{{ part.url }}" class="pagination-item">{{ part.title }}</a>
                {% else %}
                  {% if part.title == paginate.current_page %}
                    <span class="pagination-item active">{{ part.title }}</span>
                  {% else %}
                    <span class="pagination-item">{{ part.title }}</span>
                  {% endif %}
                {% endif %}
              {% endfor %}
              
              {% if paginate.next %}
                <a href="{{ paginate.next.url }}" class="pagination-item">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M9 18l6-6-6-6"/>
                  </svg>
                </a>
              {% else %}
                <span class="pagination-item disabled">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M9 18l6-6-6-6"/>
                  </svg>
                </span>
              {% endif %}
            </div>
          {% endif %}
        {% endpaginate %}
      {% endif %}
    {% endif %}
    
  </div>
</section>

<script>
(function() {
  'use strict';
  
  const searchInput = document.getElementById('search-input');
  const suggestions = document.getElementById('search-suggestions');
  let debounceTimer;
  
  if (!searchInput || !suggestions) return;
  
  searchInput.addEventListener('input', function() {
    clearTimeout(debounceTimer);
    const query = this.value.trim();
    
    if (query.length < 2) {
      hideSuggestions();
      return;
    }
    
    debounceTimer = setTimeout(() => {
      fetchSuggestions(query);
    }, 300);
  });
  
  function fetchSuggestions(query) {
    fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=5`)
      .then(response => response.json())
      .then(data => {
        if (data.resources && data.resources.results && data.resources.results.products) {
          displaySuggestions(data.resources.results.products);
        }
      })
      .catch(error => {
        console.error('Search suggestions error:', error);
      });
  }
  
  function displaySuggestions(products) {
    if (products.length === 0) {
      hideSuggestions();
      return;
    }
    
    let html = '';
    products.forEach(product => {
      const image = product.image || '';
      const price = product.price ? formatMoney(product.price) : '';
      
      html += `
        <a href="${product.url}" class="suggestion-item">
          ${image ? `<img src="${image}" alt="${product.title}" class="suggestion-image">` : ''}
          <div class="suggestion-info">
            <h4 class="suggestion-title">${product.title}</h4>
            ${price ? `<p class="suggestion-price">${price}</p>` : ''}
          </div>
        </a>
      `;
    });
    
    suggestions.innerHTML = html;
    showSuggestions();
  }
  
  function formatMoney(cents) {
    return (cents / 100).toFixed(2) + ' €';
  }
  
  function showSuggestions() {
    suggestions.classList.add('active');
  }
  
  function hideSuggestions() {
    suggestions.classList.remove('active');
  }
  
  document.addEventListener('click', function(e) {
    if (!searchInput.contains(e.target) && !suggestions.contains(e.target)) {
      hideSuggestions();
    }
  });
  
  searchInput.addEventListener('focus', function() {
    if (suggestions.innerHTML && searchInput.value.length >= 2) {
      showSuggestions();
    }
  });
})();
</script>

{% schema %}
{
  "name": "Search",
  "settings": []
}
{% endschema %}