<!-- sections/product-enterprise.liquid -->
<style>
/* ENTERPRISE PRODUCT PAGE V2 - SIMBYE ESIM */
:root {
  --product-primary: #009a61;
  --product-primary-dark: #00824f;
  --product-accent: #00d97e;
  --product-text: #1a1a1a;
  --product-text-secondary: #666;
  --product-bg: #ffffff;
  --product-card-bg: #ffffff;
  --product-border: rgba(0, 0, 0, 0.06);
  --product-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.04);
  --product-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
  --product-shadow-lg: 0 16px 48px rgba(0, 154, 97, 0.12);
  --product-radius: 24px;
  --product-radius-sm: 16px;
  --product-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Dark Mode */
[data-theme="dark"] {
  --product-text: #ffffff;
  --product-text-secondary: #a0a0a0;
  --product-bg: #040404;
  --product-card-bg: rgba(255, 255, 255, 0.03);
  --product-border: rgba(255, 255, 255, 0.08);
  --product-primary: #00d97e;
  --product-primary-dark: #00c571;
  --product-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.2);
  --product-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.3);
  --product-shadow-lg: 0 16px 48px rgba(0, 217, 126, 0.15);
}

/* Section Base */
.product-enterprise {
  width: 100%;
  background: var(--product-bg);
  position: relative;
  overflow: hidden;
  padding-top: 80px;
}

/* Hero Section */
.product-hero {
  max-width: 1440px;
  margin: 0 auto;
  padding: 0 40px 80px;
}

.hero-container {
  display: grid;
  grid-template-columns: 1.2fr 1fr;
  gap: 60px;
  align-items: center;
}

/* Hero Image (LEFT) */
.hero-image-section {
  order: 1;
  position: relative;
  animation: fadeInLeft 0.8s ease;
}

@keyframes fadeInLeft {
  from { opacity: 0; transform: translateX(-30px); }
  to { opacity: 1; transform: translateX(0); }
}

.hero-image-wrapper {
  position: relative;
  border-radius: var(--product-radius);
  overflow: hidden;
  box-shadow: var(--product-shadow-lg);
  aspect-ratio: 16/10;
  background: var(--product-card-bg);
}

.hero-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.hero-badge {
  position: absolute;
  top: 24px;
  left: 24px;
  background: var(--product-primary);
  color: white;
  padding: 8px 16px;
  border-radius: 100px;
  font-weight: 700;
  font-size: 14px;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

/* Hero Info (RIGHT) */
.hero-info-section {
  order: 2;
  animation: fadeInRight 0.8s ease 0.1s both;
}

@keyframes fadeInRight {
  from { opacity: 0; transform: translateX(30px); }
  to { opacity: 1; transform: translateX(0); }
}

.product-title-wrapper {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 20px;
}

.product-flag {
  width: 56px;
  height: 42px;
  border-radius: 12px;
  object-fit: cover;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.product-title {
  font-size: clamp(36px, 4vw, 48px);
  font-weight: 800;
  line-height: 1.1;
  color: var(--product-text);
  margin: 0;
  letter-spacing: -0.02em;
}

.country-badge {
  background: var(--product-primary);
  color: white;
  padding: 6px 16px;
  border-radius: 12px;
  display: inline-block;
  margin-left: 12px;
}

.price-range {
  display: inline-flex;
  align-items: baseline;
  gap: 8px;
  background: linear-gradient(135deg, var(--product-primary), var(--product-accent));
  color: white;
  padding: 12px 24px;
  border-radius: 100px;
  font-size: 24px;
  font-weight: 700;
  margin-bottom: 24px;
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.25);
}

.price-from {
  font-size: 14px;
  opacity: 0.9;
}

.hero-subtitle {
  font-size: 18px;
  color: var(--product-text-secondary);
  line-height: 1.6;
  margin-bottom: 32px;
}

.hero-features {
  display: flex;
  flex-direction: column;
  gap: 16px;
  margin-bottom: 32px;
}

.hero-feature {
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 16px;
  color: var(--product-text);
}

.hero-feature svg {
  width: 24px;
  height: 24px;
  color: var(--product-primary);
  flex-shrink: 0;
}

/* Trust Badges */
.trust-badges {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
}

.trust-badge {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background: var(--product-card-bg);
  border: 1px solid var(--product-border);
  border-radius: 100px;
  font-size: 14px;
  font-weight: 600;
  color: var(--product-text);
}

.trust-badge svg {
  width: 20px;
  height: 20px;
  color: var(--product-primary);
}

/* Product Selection Section */
.product-selection {
  max-width: 1440px;
  margin: 0 auto;
  padding: 0 40px 80px;
}

/* Tab System for Variants */
.variant-tabs {
  display: flex;
  gap: 4px;
  background: var(--product-card-bg);
  padding: 4px;
  border-radius: var(--product-radius-sm);
  border: 1px solid var(--product-border);
  margin-bottom: 40px;
  box-shadow: var(--product-shadow-sm);
}

.variant-tab {
  flex: 1;
  padding: 16px 32px;
  background: transparent;
  border: none;
  border-radius: 12px;
  font-size: 18px;
  font-weight: 600;
  color: var(--product-text-secondary);
  cursor: pointer;
  transition: var(--product-transition);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  font-family: inherit;
}

.variant-tab:hover {
  background: rgba(0, 154, 97, 0.05);
  color: var(--product-text);
}

.variant-tab.active {
  background: var(--product-primary);
  color: white;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.3);
}

.variant-tab svg {
  width: 20px;
  height: 20px;
}

/* Fair Use Notice */
.fair-use-notice {
  background: linear-gradient(135deg, 
    rgba(0, 154, 97, 0.05) 0%, 
    rgba(0, 217, 126, 0.05) 100%);
  border: 2px solid var(--product-primary);
  border-radius: var(--product-radius-sm);
  padding: 24px;
  margin-bottom: 32px;
  display: none;
  animation: slideDown 0.3s ease;
}

.fair-use-notice.active {
  display: block;
}

@keyframes slideDown {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

.fair-use-header {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 12px;
}

.fair-use-title {
  font-size: 18px;
  font-weight: 700;
  color: var(--product-primary);
  margin: 0;
}

.fair-use-text {
  font-size: 15px;
  color: var(--product-text-secondary);
  line-height: 1.6;
  margin: 0;
}

/* Selection Grid */
.selection-grid {
  display: grid;
  grid-template-columns: 1.5fr 1fr;
  gap: 40px;
}

/* Plans Container */
.plans-container {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.variant-group {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

/* Plan Card */
.plan-card {
  position: relative;
  background: var(--product-card-bg);
  border: 2px solid var(--product-border);
  border-radius: var(--product-radius-sm);
  padding: 24px;
  cursor: pointer;
  transition: var(--product-transition);
}

.plan-card:hover {
  border-color: var(--product-primary);
  transform: translateY(-2px);
  box-shadow: var(--product-shadow-md);
}

.plan-card.selected {
  border-color: var(--product-primary);
  background: linear-gradient(135deg, 
    rgba(0, 154, 97, 0.03) 0%, 
    rgba(0, 217, 126, 0.03) 100%);
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.15);
}

.plan-card input[type="radio"] {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.plan-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.plan-info {
  flex: 1;
}

.plan-name {
  font-size: 20px;
  font-weight: 700;
  color: var(--product-text);
  margin-bottom: 4px;
}

.plan-validity {
  font-size: 14px;
  color: var(--product-text-secondary);
}

.plan-price-wrapper {
  text-align: right;
}

.plan-price {
  font-size: 28px;
  font-weight: 700;
  color: var(--product-primary);
}

.plan-price-old {
  font-size: 18px;
  color: var(--product-text-secondary);
  text-decoration: line-through;
  display: block;
  margin-bottom: 4px;
}

/* Popular Badge */
.popular-badge {
  position: absolute;
  top: -10px;
  right: 20px;
  background: linear-gradient(135deg, #ff7e50, #ff9a76);
  color: white;
  padding: 4px 12px;
  border-radius: 100px;
  font-size: 11px;
  font-weight: 700;
  text-transform: uppercase;
  box-shadow: 0 4px 12px rgba(255, 126, 80, 0.3);
}

/* Free Badge */
.free-badge {
  position: absolute;
  top: 50%;
  right: 24px;
  transform: translateY(-50%);
  background: var(--product-accent);
  color: white;
  padding: 6px 16px;
  border-radius: 100px;
  font-weight: 700;
  font-size: 14px;
  box-shadow: 0 4px 12px rgba(0, 217, 126, 0.3);
}

/* Login Overlay */
.login-overlay {
  position: absolute;
  inset: 0;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--product-radius-sm);
  z-index: 10;
}

[data-theme="dark"] .login-overlay {
  background: rgba(0, 0, 0, 0.95);
}

.login-button {
  background: var(--product-primary);
  color: white;
  padding: 14px 28px;
  border-radius: 100px;
  font-weight: 700;
  font-size: 16px;
  text-decoration: none;
  transition: var(--product-transition);
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.25);
}

.login-button:hover {
  background: var(--product-primary-dark);
  transform: translateY(-2px);
  box-shadow: 0 12px 32px rgba(0, 154, 97, 0.35);
}

/* Purchase Box */
.purchase-box {
  position: sticky;
  top: 100px;
  background: var(--product-card-bg);
  border: 1px solid var(--product-border);
  border-radius: var(--product-radius);
  padding: 32px;
  box-shadow: var(--product-shadow-md);
}

.purchase-title {
  font-size: 24px;
  font-weight: 700;
  color: var(--product-text);
  margin-bottom: 24px;
}

.summary-box {
  background: linear-gradient(135deg, 
    rgba(0, 154, 97, 0.05) 0%, 
    rgba(0, 217, 126, 0.05) 100%);
  border-radius: 12px;
  padding: 20px;
  margin-bottom: 24px;
}

.summary-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 0;
}

.summary-row:not(:last-child) {
  border-bottom: 1px solid var(--product-border);
}

.summary-label {
  font-size: 14px;
  color: var(--product-text-secondary);
}

.summary-value {
  font-size: 16px;
  font-weight: 600;
  color: var(--product-text);
}

.summary-row:last-child .summary-label,
.summary-row:last-child .summary-value {
  font-size: 18px;
  font-weight: 700;
  color: var(--product-primary);
}

/* Checkout Button */
.checkout-form {
  margin-bottom: 20px;
}

.checkout-button {
  width: 100%;
  background: linear-gradient(135deg, var(--product-primary), var(--product-accent));
  color: white;
  border: none;
  border-radius: 12px;
  padding: 18px;
  font-size: 18px;
  font-weight: 700;
  cursor: pointer;
  transition: var(--product-transition);
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.25);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
}

.checkout-button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 12px 32px rgba(0, 154, 97, 0.35);
}

.checkout-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.checkout-button svg {
  width: 20px;
  height: 20px;
}

/* Payment Methods */
.payment-methods {
  display: flex;
  justify-content: center;
  gap: 8px;
  padding-top: 20px;
  border-top: 1px solid var(--product-border);
}

.payment-method {
  height: 24px;
  opacity: 0.7;
  transition: var(--product-transition);
}

.payment-method:hover {
  opacity: 1;
  transform: scale(1.05);
}

/* Features Section */
.features-section {
  max-width: 1440px;
  margin: 0 auto;
  padding: 80px 40px;
  border-top: 1px solid var(--product-border);
}

.features-title {
  font-size: clamp(32px, 4vw, 40px);
  font-weight: 700;
  text-align: center;
  margin-bottom: 48px;
  color: var(--product-text);
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 32px;
}

.feature-card {
  text-align: center;
  padding: 40px 24px;
  background: var(--product-card-bg);
  border: 1px solid var(--product-border);
  border-radius: var(--product-radius);
  transition: var(--product-transition);
  animation: fadeInUp 0.8s ease both;
  animation-delay: calc(var(--index) * 0.1s);
}

.feature-card:nth-child(1) { --index: 0; }
.feature-card:nth-child(2) { --index: 1; }
.feature-card:nth-child(3) { --index: 2; }

@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}

.feature-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--product-shadow-md);
  border-color: var(--product-primary);
}

.feature-icon {
  width: 72px;
  height: 72px;
  background: linear-gradient(135deg, var(--product-primary), var(--product-accent));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 24px;
  color: white;
}

.feature-icon svg {
  width: 36px;
  height: 36px;
}

.feature-name {
  font-size: 22px;
  font-weight: 700;
  margin-bottom: 12px;
  color: var(--product-text);
}

.feature-desc {
  font-size: 15px;
  color: var(--product-text-secondary);
  line-height: 1.6;
}

/* Mobile Sticky Cart */
.mobile-sticky {
  display: none;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: var(--product-bg);
  border-top: 1px solid var(--product-border);
  padding: 16px;
  z-index: 1000;
  transform: translateY(100%);
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 -8px 24px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
}

.mobile-sticky.active {
  transform: translateY(0);
}

.sticky-container {
  max-width: 500px;
  margin: 0 auto;
  display: flex;
  align-items: center;
  gap: 16px;
}

.sticky-info {
  flex: 1;
}

.sticky-title {
  font-size: 14px;
  color: var(--product-text-secondary);
  margin-bottom: 4px;
}

.sticky-price {
  font-size: 20px;
  font-weight: 700;
  color: var(--product-primary);
}

.sticky-button {
  background: var(--product-primary);
  color: white;
  border: none;
  border-radius: 12px;
  padding: 14px 24px;
  font-size: 16px;
  font-weight: 700;
  white-space: nowrap;
  transition: var(--product-transition);
  cursor: pointer;
}

.sticky-button:active {
  transform: scale(0.98);
}

/* Responsive */
@media (max-width: 1024px) {
  .hero-container {
    grid-template-columns: 1fr;
    gap: 40px;
  }
  
  .hero-image-section {
    order: 1;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .hero-info-section {
    order: 2;
    text-align: center;
  }
  
  .product-title-wrapper {
    justify-content: center;
  }
  
  .trust-badges {
    justify-content: center;
  }
  
  .selection-grid {
    grid-template-columns: 1fr;
    gap: 32px;
  }
  
  .purchase-box {
    position: static;
  }
  
  .features-grid {
    grid-template-columns: 1fr;
    gap: 24px;
  }
}

@media (max-width: 768px) {
  .product-enterprise {
    padding-top: 40px;
  }
  
  .product-hero,
  .product-selection,
  .features-section {
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .product-title {
    font-size: 32px;
  }
  
  .price-range {
    font-size: 20px;
    padding: 10px 20px;
  }
  
  .hero-subtitle {
    font-size: 16px;
  }
  
  .variant-tabs {
    gap: 2px;
    padding: 2px;
  }
  
  .variant-tab {
    padding: 12px 16px;
    font-size: 15px;
  }
  
  .variant-tab svg {
    width: 18px;
    height: 18px;
  }
  
  .plan-card {
    padding: 20px;
  }
  
  .plan-name {
    font-size: 18px;
  }
  
  .plan-price {
    font-size: 24px;
  }
  
  .purchase-box {
    padding: 24px 20px;
    border-radius: 16px 16px 0 0;
    margin: 0 -20px;
  }
  
  .mobile-sticky {
    display: block;
  }
  
  .feature-card {
    padding: 32px 20px;
  }
  
  .features-title {
    font-size: 28px;
    margin-bottom: 32px;
  }
}
</style>

<section class="product-enterprise" data-section-id="{{ section.id }}">
  <!-- Hero Section -->
  <div class="product-hero">
    <div class="hero-container">
      <!-- Image Section (LEFT) -->
      <div class="hero-image-section">
        <div class="hero-image-wrapper">
          {% if product.images[1] %}
            <img src="{{ product.images[1] | img_url: '800x500' }}" 
                 alt="{{ product.title }}" 
                 class="hero-image"
                 loading="eager"
                 width="800"
                 height="500">
          {% else %}
            <img src="{{ product.featured_image | img_url: '800x500' }}" 
                 alt="{{ product.title }}" 
                 class="hero-image"
                 loading="eager"
                 width="800"
                 height="500">
          {% endif %}
          <span class="hero-badge">{{ product.metafields.custom.badge | default: 'Premium eSIM' }}</span>
        </div>
      </div>
      
      <!-- Info Section (RIGHT) -->
      <div class="hero-info-section">
        <div class="product-title-wrapper">
          {% if product.images[0] %}
            <img src="{{ product.images[0] | img_url: '112x84' }}" 
                 alt="{{ product.title }}" 
                 class="product-flag"
                 width="56"
                 height="42">
          {% endif %}
          <h1 class="product-title">
            eSIM <span class="country-badge">{{ product.title }}</span>
          </h1>
        </div>
        
        <div class="price-range">
          <span class="price-from">{{ 'product.price_from' | t }}</span>
          <span>{{ product.price_min | money }} - {{ product.price_max | money }}</span>
        </div>
        
        <p class="hero-subtitle">
          {{ 'product.hero_subtitle' | t: country: product.title }}
        </p>
        
        <div class="hero-features">
          <div class="hero-feature">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <span>{{ 'product.instant_delivery' | t }}</span>
          </div>
          <div class="hero-feature">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0"/>
            </svg>
            <span>{{ 'product.premium_network' | t }}</span>
          </div>
          <div class="hero-feature">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
            </svg>
            <span>{{ 'product.whatsapp_support' | t }}</span>
          </div>
        </div>
        
        <div class="trust-badges">
          <div class="trust-badge">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <span>{{ 'product.money_back' | t }}</span>
          </div>
          <div class="trust-badge">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
            </svg>
            <span>{{ 'product.secure_payment' | t }}</span>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Product Selection -->
  <div class="product-selection">
    <!-- Check for Unlimited variants -->
    {% assign has_unlimited = false %}
    {% assign normal_variants = "" | split: "," %}
    {% assign unlimited_variants = "" | split: "," %}
    {% assign has_free = false %}
    
    {% for variant in product.variants %}
      {% if variant.sku contains 'daily' or variant.sku contains 'Daily' %}
        {% assign has_unlimited = true %}
        {% assign unlimited_variants = unlimited_variants | push: variant %}
      {% else %}
        {% assign normal_variants = normal_variants | push: variant %}
        {% if variant.price == 0 %}
          {% assign has_free = true %}
        {% endif %}
      {% endif %}
    {% endfor %}
    
    <!-- Tab System only if unlimited exists -->
    {% if has_unlimited %}
      <div class="variant-tabs">
        <button class="variant-tab active" data-tab="normal">
          <svg viewBox="0 0 24 24" fill="currentColor">
            <path d="M3 5a2 2 0 012-2h10a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2V5z"/>
          </svg>
          <span>{{ 'product.data_plans' | t }}</span>
        </button>
        <button class="variant-tab" data-tab="unlimited">
          <svg viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2a10 10 0 100 20 10 10 0 000-20zm1 5a1 1 0 10-2 0v5.586l-2.707 2.707a1 1 0 001.414 1.414l3-3A1 1 0 0013 13V7z"/>
          </svg>
          <span>{{ 'product.unlimited_daily' | t }}</span>
        </button>
      </div>
      
      <!-- Fair Use Notice -->
      <div class="fair-use-notice" id="fair-use-notice">
        <div class="fair-use-header">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
          </svg>
          <h3 class="fair-use-title">{{ 'product.fair_use_title' | t }}</h3>
        </div>
        <p class="fair-use-text">{{ 'product.fair_use_text' | t }}</p>
      </div>
    {% endif %}
    
    <!-- Selection Grid -->
    <div class="selection-grid">
      <!-- Plans Container -->
      <div class="plans-container">
        <!-- Normal Variants -->
        <div class="variant-group" id="normal-variants" style="display: block;">
          {% for variant in normal_variants %}
            {% assign is_free = false %}
            {% if variant.price == 0 %}
              {% assign is_free = true %}
            {% endif %}
            
            <div class="plan-card {% if forloop.first %}selected{% endif %}" data-variant-id="{{ variant.id }}" data-is-free="{{ is_free }}">
              <input type="radio" 
                     name="variant" 
                     value="{{ variant.id }}"
                     data-price="{{ variant.price | money }}"
                     data-title="{{ variant.title }}"
                     {% if forloop.first %}checked{% endif %}>
              
              <div class="plan-content">
                <div class="plan-info">
                  <div class="plan-name">{{ variant.title }}</div>
                  <div class="plan-validity">
                    {{ 'product.valid_for' | t }}
                    {% assign title_parts = variant.title | split: " " %}
                    {% assign days_index = title_parts.size | minus: 2 %}
                    {{ title_parts[days_index] }}
                    {{ 'product.days' | t }}
                  </div>
                </div>
                <div class="plan-price-wrapper">
                  {% if variant.compare_at_price > variant.price %}
                    <span class="plan-price-old">{{ variant.compare_at_price | money }}</span>
                  {% endif %}
                  <span class="plan-price">{{ variant.price | money }}</span>
                </div>
              </div>
              
              {% if forloop.index == 3 %}
                <span class="popular-badge">{{ 'product.popular' | t }}</span>
              {% endif %}
              
              {% if is_free %}
                <span class="free-badge" id="free-badge-{{ variant.id }}">{{ 'product.free' | t }}</span>
                {% unless customer %}
                  <div class="login-overlay" id="login-overlay-{{ variant.id }}">
                    <a href="/account/login" class="login-button">{{ 'product.login_for_free' | t }}</a>
                  </div>
                {% endunless %}
              {% endif %}
            </div>
          {% endfor %}
        </div>
        
        <!-- Unlimited Variants -->
        {% if has_unlimited %}
          <div class="variant-group" id="unlimited-variants" style="display: none;">
            {% for variant in unlimited_variants %}
              <div class="plan-card" data-variant-id="{{ variant.id }}">
                <input type="radio" 
                       name="variant" 
                       value="{{ variant.id }}"
                       data-price="{{ variant.price | money }}"
                       data-title="{{ variant.title }}">
                
                <div class="plan-content">
                  <div class="plan-info">
                    <div class="plan-name">{{ 'product.unlimited_plan' | t }}</div>
                    <div class="plan-validity">
                      {% assign sku_parts = variant.sku | split: "_" %}
                      {% assign days = sku_parts.last %}
                      {{ 'product.gb_per_day_for' | t: days: days }}
                    </div>
                  </div>
                  <div class="plan-price-wrapper">
                    {% if variant.compare_at_price > variant.price %}
                      <span class="plan-price-old">{{ variant.compare_at_price | money }}</span>
                    {% endif %}
                    <span class="plan-price">{{ variant.price | money }}</span>
                  </div>
                </div>
              </div>
            {% endfor %}
          </div>
        {% endif %}
      </div>
      
      <!-- Purchase Box -->
      <div class="purchase-box">
        <h3 class="purchase-title">{{ 'product.your_selection' | t }}</h3>
        
        <div class="summary-box">
          <div class="summary-row">
            <span class="summary-label">{{ product.title }} eSIM</span>
            <span class="summary-value" id="selected-variant">-</span>
          </div>
          <div class="summary-row">
            <span class="summary-label">{{ 'product.network' | t }}</span>
            <span class="summary-value">{{ product.metafields.custom.plantyp | default: '4G/5G' }}</span>
          </div>
          <div class="summary-row">
            <span class="summary-label">{{ 'product.activation' | t }}</span>
            <span class="summary-value">{{ 'product.instant' | t }}</span>
          </div>
          <div class="summary-row">
            <span class="summary-label">{{ 'product.total' | t }}</span>
            <span class="summary-value" id="total-price">-</span>
          </div>
        </div>
        
        <form action="/cart/add" method="post" class="checkout-form" id="product-form">
          <input type="hidden" name="id" id="variant-input" value="">
          <button type="submit" class="checkout-button">
            <svg viewBox="0 0 24 24" fill="currentColor">
              <path d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17M17 13v8m0-8L17 21m0 0a2 2 0 11-4 0 2 2 0 014 0zm-10 0a2 2 0 11-4 0 2 2 0 014 0z"/>
            </svg>
            <span>{{ 'product.buy_now' | t }}</span>
          </button>
        </form>
        
        <div class="payment-methods">
          {% assign payment_types = 'visa,master,apple_pay,google_pay,paypal' | split: ',' %}
          {% for type in payment_types %}
            {{ type | payment_type_svg_tag: class: 'payment-method' }}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  
  <!-- Features Section -->
  <div class="features-section">
    <h2 class="features-title">{{ 'product.why_choose' | t: product: product.title }}</h2>
    
    <div class="features-grid">
      <div class="feature-card">
        <div class="feature-icon">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
          </svg>
        </div>
        <h3 class="feature-name">{{ 'product.feature_instant_title' | t }}</h3>
        <p class="feature-desc">{{ 'product.feature_instant_desc' | t }}</p>
      </div>
      
      <div class="feature-card">
        <div class="feature-icon">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
        <h3 class="feature-name">{{ 'product.feature_network_title' | t }}</h3>
        <p class="feature-desc">{{ 'product.feature_network_desc' | t }}</p>
      </div>
      
      <div class="feature-card">
        <div class="feature-icon">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z"/>
          </svg>
        </div>
        <h3 class="feature-name">{{ 'product.feature_support_title' | t }}</h3>
        <p class="feature-desc">{{ 'product.feature_support_desc' | t }}</p>
      </div>
    </div>
  </div>
  
  <!-- Mobile Sticky Cart -->
  <div class="mobile-sticky" id="mobile-sticky">
    <div class="sticky-container">
      <div class="sticky-info">
        <div class="sticky-title" id="sticky-title">-</div>
        <div class="sticky-price" id="sticky-price">-</div>
      </div>
      <button class="sticky-button" id="sticky-button">{{ 'product.buy_now' | t }}</button>
    </div>
  </div>
</section>

<script>
(function() {
  'use strict';
  
  // Elements
  const section = document.querySelector('.product-enterprise');
  const variantTabs = section.querySelectorAll('.variant-tab');
  const normalGroup = section.querySelector('#normal-variants');
  const unlimitedGroup = section.querySelector('#unlimited-variants');
  const fairUseNotice = section.querySelector('#fair-use-notice');
  const planCards = section.querySelectorAll('.plan-card');
  const variantInput = section.querySelector('#variant-input');
  const selectedVariantText = section.querySelector('#selected-variant');
  const totalPriceText = section.querySelector('#total-price');
  const productForm = section.querySelector('#product-form');
  const checkoutButton = section.querySelector('.checkout-button');
  
  // Mobile Sticky
  const mobileSticky = section.querySelector('#mobile-sticky');
  const stickyTitle = section.querySelector('#sticky-title');
  const stickyPrice = section.querySelector('#sticky-price');
  const stickyButton = section.querySelector('#sticky-button');
  
  // State
  let currentVariant = null;
  let isCustomerLoggedIn = {{ customer.id | default: 'null' }} !== null;
  let hasPurchasedFreeVariant = false;
  
  // Check if customer has purchased free variant
  if (isCustomerLoggedIn) {
    const purchasedFree = getCookie('purchased_free_esim');
    if (purchasedFree === 'true') {
      hasPurchasedFreeVariant = true;
    }
  }
  
  // Tab Switching
  if (variantTabs.length > 0) {
    variantTabs.forEach(tab => {
      tab.addEventListener('click', function() {
        variantTabs.forEach(t => t.classList.remove('active'));
        this.classList.add('active');
        
        const tabType = this.dataset.tab;
        
        if (tabType === 'unlimited') {
          if (normalGroup) normalGroup.style.display = 'none';
          if (unlimitedGroup) unlimitedGroup.style.display = 'block';
          if (fairUseNotice) fairUseNotice.classList.add('active');
        } else {
          if (normalGroup) normalGroup.style.display = 'block';
          if (unlimitedGroup) unlimitedGroup.style.display = 'none';
          if (fairUseNotice) fairUseNotice.classList.remove('active');
        }
        
        // Select first variant in active tab
        const activeGroup = tabType === 'unlimited' ? unlimitedGroup : normalGroup;
        const firstCard = activeGroup?.querySelector('.plan-card');
        if (firstCard) {
          selectPlan(firstCard);
        }
      });
    });
  }
  
  // Plan Selection
  function selectPlan(card) {
    // Remove selected from all
    planCards.forEach(c => c.classList.remove('selected'));
    
    // Add selected to clicked
    card.classList.add('selected');
    
    // Get radio input
    const radio = card.querySelector('input[type="radio"]');
    if (radio) {
      radio.checked = true;
      currentVariant = {
        id: radio.value,
        price: radio.dataset.price,
        title: radio.dataset.title
      };
      
      // Update UI
      variantInput.value = currentVariant.id;
      selectedVariantText.textContent = currentVariant.title;
      totalPriceText.textContent = currentVariant.price;
      
      // Update sticky
      if (mobileSticky) {
        stickyTitle.textContent = currentVariant.title;
        stickyPrice.textContent = currentVariant.price;
      }
    }
  }
  
  // Add click listeners to plan cards
  planCards.forEach(card => {
    card.addEventListener('click', function(e) {
      // Check if it's a free variant and user not logged in
      const isFree = this.dataset.isFree === 'true';
      
      if (isFree && !isCustomerLoggedIn) {
        e.preventDefault();
        saveReturnUrl();
        window.location.href = '/account/login';
        return;
      }
      
      if (isFree && hasPurchasedFreeVariant) {
        e.preventDefault();
        alert('{{ "product.already_purchased_free" | t }}');
        return;
      }
      
      selectPlan(this);
    });
  });
  
  // Direct Checkout
  productForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    if (!currentVariant) {
      alert('{{ "product.select_variant" | t }}');
      return;
    }
    
    // Disable button
    checkoutButton.disabled = true;
    
    // Clear cart and add product
    fetch('/cart/clear.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    })
    .then(() => fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        id: currentVariant.id,
        quantity: 1
      })
    }))
    .then(() => {
      // Set cookie if free variant
      const selectedCard = section.querySelector('.plan-card.selected');
      if (selectedCard?.dataset.isFree === 'true') {
        setCookie('purchased_free_esim', 'true', 365);
      }
      
      window.location.href = '/checkout';
    })
    .catch(error => {
      console.error('Error:', error);
      checkoutButton.disabled = false;
    });
  });
  
  // Mobile Sticky Cart
  let scrollThreshold = 500;
  
  function handleScroll() {
    if (!mobileSticky) return;
    
    const scrolled = window.scrollY > scrollThreshold;
    const nearBottom = (window.innerHeight + window.scrollY) >= (document.body.offsetHeight - 100);
    
    if (scrolled && !nearBottom) {
      mobileSticky.classList.add('active');
    } else {
      mobileSticky.classList.remove('active');
    }
  }
  
  // Throttled scroll
  let ticking = false;
  window.addEventListener('scroll', function() {
    if (!ticking) {
      window.requestAnimationFrame(function() {
        handleScroll();
        ticking = false;
      });
      ticking = true;
    }
  });
  
  // Sticky button click
  if (stickyButton) {
    stickyButton.addEventListener('click', function() {
      productForm.dispatchEvent(new Event('submit'));
    });
  }
  
  // Helper Functions
  function setCookie(name, value, days) {
    const date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
    document.cookie = name + '=' + value + '; expires=' + date.toUTCString() + '; path=/';
  }
  
  function getCookie(name) {
    const nameEQ = name + '=';
    const cookies = document.cookie.split(';');
    for (let i = 0; i < cookies.length; i++) {
      let c = cookies[i].trim();
      if (c.indexOf(nameEQ) === 0) {
        return c.substring(nameEQ.length);
      }
    }
    return null;
  }
  
  function saveReturnUrl() {
    const currentUrl = window.location.pathname + window.location.search;
    localStorage.setItem('return_to_product', currentUrl);
    sessionStorage.setItem('return_to_product', currentUrl);
    setCookie('return_to_product', currentUrl, 1);
  }
  
  // Initialize
  const firstCard = section.querySelector('.plan-card');
  if (firstCard) {
    selectPlan(firstCard);
  }
})();
</script>

{% schema %}
{
  "name": "Product Enterprise",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_features",
      "label": "Show Features Section",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_mobile",
      "label": "Enable Mobile Sticky Cart",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Product Enterprise"
    }
  ]
}
{% endschema %}