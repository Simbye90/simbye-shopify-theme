<!-- templates/customers/account.liquid -->
<!-- SIMBYE ACCOUNT - FINAL VERSION -->

<style>
:root {
  --account-primary: #009a61;
  --account-primary-hover: #00824f;
  --account-text: #1a1a1a;
  --account-text-secondary: #666666;
  --account-bg: #ffffff;
  --account-bg-secondary: #f8f9fa;
  --account-card-bg: #ffffff;
  --account-border: rgba(0, 0, 0, 0.08);
  --account-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.06);
  --account-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
  --account-gradient: linear-gradient(135deg, #009a61 0%, #00d97e 100%);
  --account-radius: 24px;
  --account-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

[data-theme="dark"] {
  --account-text: #f5f5f5;
  --account-text-secondary: #b0b0b0;
  --account-bg: #0a0a0a;
  --account-bg-secondary: #141414;
  --account-card-bg: #1a1a1a;
  --account-border: rgba(255, 255, 255, 0.08);
}

.account-enterprise {
  width: 100%;
  min-height: 100vh;
  background: var(--account-bg);
  padding: 40px 0 80px 0;
  font-family: system-ui, -apple-system, sans-serif;
}

.account-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 20px;
}

.account-header {
  text-align: center;
  margin-bottom: 48px;
}

.account-title {
  font-size: 42px;
  font-weight: 800;
  color: var(--account-text);
  margin: 0 0 12px 0;
}

.account-subtitle {
  font-size: 18px;
  color: var(--account-text-secondary);
  margin: 0;
}

.account-tabs {
  display: flex;
  gap: 4px;
  background: rgba(0, 154, 97, 0.05);
  padding: 4px;
  border-radius: 12px;
  border: 1px solid rgba(0, 154, 97, 0.1);
  margin-bottom: 48px;
}

.tab-btn {
  flex: 1;
  padding: 16px 32px;
  background: transparent;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 600;
  color: var(--account-text-secondary);
  cursor: pointer;
  transition: var(--account-transition);
  font-family: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.tab-btn:hover {
  background: rgba(0, 154, 97, 0.08);
  color: var(--account-text);
}

.tab-btn.active {
  background: var(--account-primary);
  color: white;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.3);
}

.tab-icon {
  width: 20px;
  height: 20px;
}

.tab-content {
  display: none;
}

.tab-content.active {
  display: block;
}

.esims-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  gap: 24px;
  margin-bottom: 32px;
}

.esim-card {
  background: var(--account-card-bg);
  border: 2px solid var(--account-border);
  border-radius: var(--account-radius);
  padding: 28px;
  transition: var(--account-transition);
  position: relative;
}

.esim-card:hover {
  transform: translateY(-2px);
  box-shadow: var(--account-shadow-md);
  border-color: var(--account-primary);
}

.esim-header {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 24px;
}

.esim-flag {
  width: 64px;
  height: 48px;
  border-radius: 12px;
  object-fit: cover;
  box-shadow: var(--account-shadow-md);
  border: 2px solid var(--account-border);
}

.esim-info h3 {
  font-size: 22px;
  font-weight: 700;
  color: var(--account-text);
  margin: 0 0 4px 0;
}

.esim-plan {
  font-size: 14px;
  color: var(--account-text-secondary);
  font-weight: 500;
}

.usage-meter {
  margin-bottom: 20px;
}

.usage-header {
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
}

.usage-label {
  font-size: 14px;
  color: var(--account-text-secondary);
  font-weight: 500;
}

.usage-value {
  font-size: 14px;
  font-weight: 700;
  color: var(--account-text);
}

.usage-bar {
  height: 10px;
  background: var(--account-bg-secondary);
  border-radius: 100px;
  overflow: hidden;
}

.usage-fill {
  height: 100%;
  background: var(--account-gradient);
  border-radius: 100px;
  transition: width 1s ease;
}

.esim-details {
  margin-bottom: 20px;
}

.detail-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 0;
  border-bottom: 1px solid var(--account-border);
  font-size: 14px;
}

.detail-row:last-child {
  border-bottom: none;
}

.detail-label {
  color: var(--account-text-secondary);
  font-weight: 500;
}

.detail-value {
  color: var(--account-text);
  font-weight: 600;
}

.esim-actions {
  display: flex;
  gap: 12px;
}

.btn {
  flex: 1;
  padding: 14px 20px;
  border-radius: 12px;
  font-size: 14px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  transition: var(--account-transition);
  border: none;
  text-decoration: none;
  font-family: inherit;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  white-space: nowrap;
}

.btn-primary {
  background: var(--account-gradient);
  color: white;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.25);
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 20px rgba(0, 154, 97, 0.3);
}

.btn-secondary {
  background: transparent;
  color: var(--account-primary);
  border: 2px solid var(--account-primary);
}

.btn-secondary:hover {
  background: var(--account-primary);
  color: white;
}

.loading-spinner {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: white;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.empty-state {
  text-align: center;
  padding: 80px 20px;
  grid-column: 1/-1;
}

.empty-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 24px;
  color: var(--account-text-secondary);
  opacity: 0.3;
}

.empty-title {
  font-size: 28px;
  font-weight: 700;
  color: var(--account-text);
  margin: 0 0 12px 0;
}

.empty-text {
  font-size: 16px;
  color: var(--account-text-secondary);
  margin: 0 0 32px 0;
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  z-index: 10000;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(10px);
}

.modal.active {
  display: flex;
}

.modal-content {
  background: var(--account-card-bg);
  border-radius: var(--account-radius);
  padding: 40px;
  max-width: 500px;
  width: 90%;
  position: relative;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  max-height: 80vh;
  overflow-y: auto;
}

.modal-close {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 40px;
  height: 40px;
  background: rgba(0, 0, 0, 0.05);
  border: none;
  border-radius: 50%;
  font-size: 24px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--account-text);
}

.modal-close:hover {
  background: rgba(255, 59, 48, 0.1);
  transform: rotate(90deg);
}

@media (max-width: 768px) {
  .account-title {
    font-size: 32px;
  }
  
  .tab-icon {
    display: none;
  }
  
  .esims-grid {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  
  .esim-actions {
    flex-direction: column;
  }
}
</style>

<div class="account-enterprise">
  <div class="account-container">
    
    <div class="account-header">
      <h1 class="account-title">
        Welcome back, {{ customer.first_name | default: customer.email | split: '@' | first }}!
      </h1>
      <p class="account-subtitle">Manage your eSIMs and travel data from one place</p>
    </div>
    
    <div class="account-tabs">
      <button class="tab-btn active" onclick="switchTab('esims')">
        <svg class="tab-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
        </svg>
        <span>My eSIMs</span>
      </button>
      
      <button class="tab-btn" onclick="switchTab('orders')">
        <svg class="tab-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"/>
        </svg>
        <span>Order History</span>
      </button>
    </div>
    
    <div id="esims-tab" class="tab-content active">
      
      <div class="esims-grid" id="esimsGrid">
        
        {% for order in customer.orders %}
          
          <div class="esim-card" data-order="{{ order.name | remove: '#' }}" id="card-{{ order.id }}">
            
            <div class="esim-header">
              <div class="esim-flag" style="background: var(--account-gradient); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;">
                {{ order.name | remove: 'Order ' | remove: '#' | truncate: 4, '' }}
              </div>
              <div class="esim-info">
                <h3>Order {{ order.name }}</h3>
                <div class="esim-plan">{{ order.created_at | date: '%b %d, %Y' }}</div>
              </div>
            </div>
            
            <div class="loading-details" style="display: none; padding: 20px; text-align: center;">
              <div class="loading-spinner" style="width: 30px; height: 30px; border-width: 3px; margin: 0 auto;"></div>
              <p style="margin-top: 10px; color: var(--account-text-secondary); font-size: 14px;">Loading eSIM...</p>
            </div>
            
            <div class="esim-details-container" style="display: none;"></div>
            
            <div class="esim-actions">
              <button 
                class="btn btn-primary" 
                onclick="loadEsimDetails('{{ order.name | remove: '#' }}', '{{ order.id }}')"
                id="btn-{{ order.id }}"
              >
                View eSIM
              </button>
              
              <a 
                href="/pages/check-esim?order_number={{ order.name | remove: '#' }}" 
                class="btn btn-secondary"
                target="_blank"
              >
                Check Page
              </a>
            </div>
            
          </div>
          
        {% endfor %}
        
        {% if customer.orders.size == 0 %}
          <div class="empty-state">
            <svg class="empty-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
            </svg>
            <h3 class="empty-title">No Orders Yet</h3>
            <p class="empty-text">Start your journey with a Simbye eSIM</p>
            <a href="/" class="btn btn-primary">Buy Your First eSIM</a>
          </div>
        {% endif %}
        
      </div>
      
    </div>
    
    <div id="orders-tab" class="tab-content">
      <div style="padding: 40px; text-align: center;">
        <h2 style="color: var(--account-text); margin-bottom: 20px;">Order History</h2>
        <p style="color: var(--account-text-secondary);">View your eSIMs in the My eSIMs tab</p>
      </div>
    </div>
    
  </div>
</div>

<!-- QR Modal -->
<div class="modal" id="qrModal">
  <div class="modal-content">
    <button class="modal-close" onclick="closeQR()">×</button>
    <h2 style="font-size: 24px; font-weight: 700; color: var(--account-text); margin: 0 0 24px 0;" id="qrTitle">
      eSIM QR Code
    </h2>
    <div style="background: white; padding: 24px; border-radius: 16px; margin-bottom: 24px;">
      <img id="qrImage" src="" alt="QR Code" style="width: 100%; height: auto; display: block;">
    </div>
    <button onclick="downloadQR()" style="width: 100%; padding: 16px; background: var(--account-gradient); color: white; border: none; border-radius: 12px; font-size: 16px; font-weight: 700; cursor: pointer;">
      Download QR Code
    </button>
  </div>
</div>

<script>
// Load jQuery if not available
if (typeof jQuery === 'undefined') {
  var script = document.createElement('script');
  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js';
  document.head.appendChild(script);
}

// Load eSIM details for single order
function loadEsimDetails(orderNumber, orderId) {
  const $ = jQuery || window.$;
  if (!$) {
    console.error('jQuery not loaded');
    return;
  }
  
  const card = document.getElementById('card-' + orderId);
  const btn = document.getElementById('btn-' + orderId);
  const loadingDiv = card.querySelector('.loading-details');
  const detailsContainer = card.querySelector('.esim-details-container');
  
  // Show loading
  loadingDiv.style.display = 'block';
  btn.disabled = true;
  btn.innerHTML = '<span class="loading-spinner"></span> Loading...';
  
  const customerEmail = '{{ customer.email }}';
  
  // Try with email first
  $.ajax({
    url: `https://simbye.com/apps/topup/info/${orderNumber}/${customerEmail}`,
    method: 'GET',
    headers: { 'Accept': 'application/json' },
    timeout: 15000,
    success: function(data) {
      handleEsimData(data, card, btn, loadingDiv, detailsContainer, orderNumber);
    },
    error: function() {
      // Try without email
      $.ajax({
        url: `https://simbye.com/apps/topup/info/${orderNumber}`,
        method: 'GET',
        headers: { 'Accept': 'application/json' },
        timeout: 15000,
        success: function(data) {
          handleEsimData(data, card, btn, loadingDiv, detailsContainer, orderNumber);
        },
        error: function() {
          loadingDiv.style.display = 'none';
          detailsContainer.innerHTML = '<p style="text-align: center; color: #ff3b30; padding: 20px;">Could not load eSIM. Use "Check Page" button.</p>';
          detailsContainer.style.display = 'block';
          btn.style.display = 'none';
        }
      });
    }
  });
}

function handleEsimData(data, card, btn, loadingDiv, detailsContainer, orderNumber) {
  loadingDiv.style.display = 'none';
  
  if (data?.data?.obj?.esimList?.length > 0) {
    const esimData = data.data.obj.esimList[0];
    
    let detailsHTML = '';
    
    // QR Code
    if (esimData.qrCodeUrl) {
      detailsHTML += `
        <div style="text-align: center; margin: 20px 0;">
          <img src="${esimData.qrCodeUrl}" alt="QR Code" 
               style="width: 180px; height: 180px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); cursor: pointer;"
               onclick="showQR('${esimData.qrCodeUrl}', 'eSIM ${orderNumber}')">
        </div>
      `;
    }
    
    // Data Usage
    if (esimData.totalVolume) {
      const totalGB = (esimData.totalVolume / 1073741824).toFixed(2);
      const usedGB = (esimData.orderUsage / 1073741824).toFixed(2);
      const usagePercent = Math.min(100, Math.round((esimData.orderUsage / esimData.totalVolume) * 100));
      
      detailsHTML += `
        <div class="usage-meter">
          <div class="usage-header">
            <span class="usage-label">Data Usage</span>
            <span class="usage-value">${usedGB}GB / ${totalGB}GB</span>
          </div>
          <div class="usage-bar">
            <div class="usage-fill" style="width: ${usagePercent}%"></div>
          </div>
        </div>
      `;
    }
    
    // Details
    detailsHTML += '<div class="esim-details">';
    
    if (esimData.packageList?.[0]) {
      detailsHTML += `
        <div class="detail-row">
          <span class="detail-label">Package</span>
          <span class="detail-value">${esimData.packageList[0].packageName}</span>
        </div>
      `;
    }
    
    if (esimData.iccid) {
      detailsHTML += `
        <div class="detail-row">
          <span class="detail-label">ICCID</span>
          <span class="detail-value">${esimData.iccid}</span>
        </div>
      `;
    }
    
    if (esimData.expiredTime) {
      const expiry = new Date(esimData.expiredTime);
      detailsHTML += `
        <div class="detail-row">
          <span class="detail-label">Expires</span>
          <span class="detail-value">${expiry.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</span>
        </div>
      `;
    }
    
    detailsHTML += '</div>';
    
    detailsContainer.innerHTML = detailsHTML;
    detailsContainer.style.display = 'block';
    
    // Update button
    if (esimData.qrCodeUrl) {
      btn.innerHTML = 'Download QR';
      btn.disabled = false;
      btn.onclick = function() {
        const link = document.createElement('a');
        link.href = esimData.qrCodeUrl;
        link.download = `esim-${orderNumber}.png`;
        link.click();
      };
    } else {
      btn.style.display = 'none';
    }
  } else {
    detailsContainer.innerHTML = '<p style="text-align: center; color: var(--account-text-secondary); padding: 20px;">No eSIM data found.</p>';
    detailsContainer.style.display = 'block';
    btn.style.display = 'none';
  }
}

function switchTab(tabName) {
  document.querySelectorAll('.tab-content').forEach(content => {
    content.classList.remove('active');
  });
  
  document.querySelectorAll('.tab-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  document.getElementById(tabName + '-tab').classList.add('active');
  event.target.closest('.tab-btn').classList.add('active');
}

function showQR(qrUrl, title) {
  document.getElementById('qrImage').src = qrUrl;
  document.getElementById('qrTitle').textContent = title;
  document.getElementById('qrModal').classList.add('active');
  document.getElementById('qrModal').dataset.qrUrl = qrUrl;
  document.getElementById('qrModal').dataset.title = title;
  document.body.style.overflow = 'hidden';
}

function closeQR() {
  document.getElementById('qrModal').classList.remove('active');
  document.body.style.overflow = '';
}

function downloadQR() {
  const modal = document.getElementById('qrModal');
  const qrUrl = modal.dataset.qrUrl;
  const title = (modal.dataset.title || 'esim-qr').toLowerCase().replace(/[^a-z0-9]/g, '-');
  
  if (qrUrl) {
    const link = document.createElement('a');
    link.href = qrUrl;
    link.download = title + '-qr.png';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }
}

document.addEventListener('click', function(e) {
  if (e.target.classList.contains('modal')) {
    closeQR();
  }
});

document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeQR();
  }
});
</script>