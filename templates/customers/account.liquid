<!-- templates/customers/account.liquid -->
<!-- SIMBYE SHOPIFY ACCOUNT PAGE - REAL FUNCTIONAL VERSION -->

<style>
/* ============================================
   SIMBYE ACCOUNT PAGE - PRODUCTION READY
   100% Shopify Compatible
   ============================================ */

/* CSS Variables */
:root {
  --account-primary: #009a61;
  --account-primary-hover: #00824f;
  --account-accent: #00d97e;
  --account-text: #1a1a1a;
  --account-text-secondary: #666666;
  --account-bg: #ffffff;
  --account-card-bg: #ffffff;
  --account-border: rgba(0, 0, 0, 0.08);
  --account-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.06);
  --account-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
  --account-shadow-lg: 0 12px 32px rgba(0, 154, 97, 0.15);
  --account-gradient: linear-gradient(135deg, #009a61 0%, #00d97e 100%);
  --account-radius: 24px;
  --account-radius-sm: 16px;
  --account-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Dark Mode */
[data-theme="dark"] {
  --account-text: #f5f5f5;
  --account-text-secondary: #999999;
  --account-bg: #0a0a0a;
  --account-card-bg: #1a1a1a;
  --account-border: rgba(255, 255, 255, 0.08);
  --account-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.3);
  --account-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.4);
  --account-shadow-lg: 0 12px 32px rgba(0, 217, 126, 0.15);
}

/* Kill Shopify Grid */
.shopify-section:has(.account-page) {
  display: block !important;
  padding: 0 !important;
  margin: 0 !important;
  grid-template-columns: unset !important;
}

/* Main Layout */
.account-page {
  width: 100%;
  min-height: 100vh;
  background: var(--account-bg);
  padding: 40px 0 80px 0;
  font-family: system-ui, -apple-system, sans-serif;
}

[data-theme="dark"] .account-page {
  background: #0a0a0a;
}

.account-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

/* Header with Welcome */
.account-header {
  text-align: center;
  margin-bottom: 48px;
  animation: fadeInUp 0.6s ease;
}

.account-welcome {
  font-size: 36px;
  font-weight: 700;
  color: var(--account-text);
  margin: 0 0 12px 0;
  letter-spacing: -0.02em;
}

.account-email {
  font-size: 16px;
  color: var(--account-text-secondary);
  margin: 0 0 24px 0;
}

.logout-link {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  color: #ff3b30;
  text-decoration: none;
  font-size: 14px;
  font-weight: 600;
  transition: var(--account-transition);
}

.logout-link:hover {
  opacity: 0.8;
}

/* Tab Navigation */
.account-tabs {
  display: flex;
  gap: 4px;
  background: rgba(0, 154, 97, 0.05);
  padding: 4px;
  border-radius: var(--account-radius-sm);
  border: 1px solid rgba(0, 154, 97, 0.1);
  margin-bottom: 48px;
  box-shadow: var(--account-shadow-sm);
  overflow-x: auto;
  scrollbar-width: none;
}

.account-tabs::-webkit-scrollbar {
  display: none;
}

[data-theme="dark"] .account-tabs {
  background: rgba(0, 217, 126, 0.05);
  border-color: rgba(0, 217, 126, 0.1);
}

.tab-btn {
  flex: 1;
  padding: 16px 24px;
  background: transparent;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 600;
  color: var(--account-text-secondary);
  cursor: pointer;
  transition: var(--account-transition);
  font-family: inherit;
  white-space: nowrap;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.tab-btn:hover {
  background: rgba(0, 154, 97, 0.08);
  color: var(--account-text);
}

.tab-btn.active {
  background: var(--account-primary);
  color: white;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.3);
}

[data-theme="dark"] .tab-btn.active {
  color: #0a0a0a;
}

.tab-icon {
  width: 20px;
  height: 20px;
}

/* Tab Content */
.tab-content {
  display: none;
  animation: fadeIn 0.4s ease;
}

.tab-content.active {
  display: block;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* My eSIMs Section */
.esims-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
  gap: 24px;
  margin-bottom: 32px;
}

.esim-card {
  background: var(--account-card-bg);
  border: 2px solid var(--account-border);
  border-radius: var(--account-radius);
  padding: 28px 24px;
  box-shadow: var(--account-shadow-md);
  transition: var(--account-transition);
  position: relative;
}

[data-theme="dark"] .esim-card {
  background: var(--account-card-bg);
  border-color: rgba(255, 255, 255, 0.08);
}

.esim-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--account-shadow-lg);
  border-color: var(--account-primary);
}

/* eSIM Status Badge */
.esim-status {
  position: absolute;
  top: 20px;
  right: 20px;
  padding: 6px 16px;
  border-radius: 100px;
  font-size: 11px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.status-active {
  background: rgba(0, 217, 126, 0.1);
  color: #00d97e;
  border: 1px solid rgba(0, 217, 126, 0.3);
}

.status-expired {
  background: rgba(255, 59, 48, 0.1);
  color: #ff3b30;
  border: 1px solid rgba(255, 59, 48, 0.3);
}

.status-expiring {
  background: rgba(255, 154, 0, 0.1);
  color: #ff9a00;
  border: 1px solid rgba(255, 154, 0, 0.3);
}

/* eSIM Header */
.esim-header {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 24px;
  padding-right: 80px;
}

.esim-flag {
  width: 56px;
  height: 42px;
  border-radius: 12px;
  object-fit: cover;
  box-shadow: var(--account-shadow-sm);
  border: 2px solid var(--account-border);
}

.esim-info h3 {
  font-size: 22px;
  font-weight: 700;
  color: var(--account-text);
  margin: 0 0 4px 0;
}

.esim-plan {
  font-size: 14px;
  color: var(--account-text-secondary);
}

/* eSIM Details */
.esim-details {
  margin-bottom: 20px;
}

.detail-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
  border-bottom: 1px solid var(--account-border);
  font-size: 14px;
}

.detail-row:last-child {
  border-bottom: none;
}

.detail-label {
  color: var(--account-text-secondary);
  font-weight: 500;
}

.detail-value {
  color: var(--account-text);
  font-weight: 600;
}

/* eSIM Actions */
.esim-actions {
  display: flex;
  gap: 12px;
}

.btn {
  flex: 1;
  padding: 14px 20px;
  border-radius: 12px;
  font-size: 14px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  transition: var(--account-transition);
  border: none;
  text-decoration: none;
  font-family: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.btn-primary {
  background: var(--account-gradient);
  color: white;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.25);
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: var(--account-shadow-lg);
}

.btn-secondary {
  background: transparent;
  color: var(--account-primary);
  border: 2px solid var(--account-primary);
}

.btn-secondary:hover {
  background: var(--account-primary);
  color: white;
}

[data-theme="dark"] .btn-secondary:hover {
  color: #0a0a0a;
}

/* Orders Table */
.orders-container {
  background: var(--account-card-bg);
  border: 2px solid var(--account-border);
  border-radius: var(--account-radius);
  overflow: hidden;
  box-shadow: var(--account-shadow-md);
}

[data-theme="dark"] .orders-container {
  background: var(--account-card-bg);
  border-color: rgba(255, 255, 255, 0.08);
}

.orders-table {
  width: 100%;
  border-collapse: collapse;
}

.orders-table thead {
  background: rgba(0, 154, 97, 0.05);
}

[data-theme="dark"] .orders-table thead {
  background: rgba(0, 217, 126, 0.05);
}

.orders-table th {
  padding: 20px 24px;
  text-align: left;
  font-size: 13px;
  font-weight: 700;
  color: var(--account-text);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.orders-table td {
  padding: 20px 24px;
  border-top: 1px solid var(--account-border);
  font-size: 15px;
  color: var(--account-text);
}

.order-number {
  color: var(--account-primary);
  font-weight: 700;
  text-decoration: none;
  transition: var(--account-transition);
}

.order-number:hover {
  color: var(--account-primary-hover);
  text-decoration: underline;
}

.order-status {
  display: inline-block;
  padding: 6px 14px;
  border-radius: 100px;
  font-size: 11px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.3px;
}

.status-paid {
  background: rgba(0, 217, 126, 0.1);
  color: #00d97e;
  border: 1px solid rgba(0, 217, 126, 0.3);
}

.status-pending {
  background: rgba(255, 154, 0, 0.1);
  color: #ff9a00;
  border: 1px solid rgba(255, 154, 0, 0.3);
}

.status-fulfilled {
  background: rgba(0, 122, 255, 0.1);
  color: #007aff;
  border: 1px solid rgba(0, 122, 255, 0.3);
}

/* Settings Form */
.settings-card {
  background: var(--account-card-bg);
  border: 2px solid var(--account-border);
  border-radius: var(--account-radius);
  padding: 40px;
  box-shadow: var(--account-shadow-md);
  max-width: 800px;
  margin: 0 auto 32px;
}

[data-theme="dark"] .settings-card {
  background: var(--account-card-bg);
  border-color: rgba(255, 255, 255, 0.08);
}

.settings-title {
  font-size: 24px;
  font-weight: 700;
  color: var(--account-text);
  margin: 0 0 32px 0;
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  margin-bottom: 24px;
}

.form-group {
  margin-bottom: 24px;
}

.form-label {
  display: block;
  font-size: 14px;
  font-weight: 600;
  color: var(--account-text);
  margin-bottom: 8px;
}

.form-input {
  width: 100%;
  padding: 14px 16px;
  background: var(--account-bg);
  border: 2px solid var(--account-border);
  border-radius: 12px;
  font-size: 15px;
  color: var(--account-text);
  transition: var(--account-transition);
  font-family: inherit;
}

.form-input:focus {
  outline: none;
  border-color: var(--account-primary);
  box-shadow: 0 0 0 3px rgba(0, 154, 97, 0.1);
}

.form-input:read-only {
  background: rgba(0, 0, 0, 0.02);
  cursor: not-allowed;
  color: var(--account-text-secondary);
}

[data-theme="dark"] .form-input {
  background: rgba(255, 255, 255, 0.05);
}

.form-actions {
  display: flex;
  gap: 12px;
  padding-top: 12px;
  border-top: 1px solid var(--account-border);
}

/* Empty State */
.empty-state {
  text-align: center;
  padding: 80px 20px;
}

.empty-icon {
  width: 80px;
  height: 80px;
  margin: 0 auto 24px;
  color: var(--account-text-secondary);
  opacity: 0.5;
}

.empty-title {
  font-size: 24px;
  font-weight: 700;
  color: var(--account-text);
  margin: 0 0 12px 0;
}

.empty-text {
  font-size: 16px;
  color: var(--account-text-secondary);
  margin: 0 0 32px 0;
}

/* QR Modal */
.qr-modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  z-index: 10000;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(10px);
}

.qr-modal.active {
  display: flex;
}

.qr-content {
  background: var(--account-card-bg);
  border-radius: var(--account-radius);
  padding: 40px;
  max-width: 500px;
  width: 90%;
  position: relative;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  animation: modalSlideUp 0.4s ease;
}

[data-theme="dark"] .qr-content {
  background: #1a1a1a;
  border: 2px solid rgba(255, 255, 255, 0.1);
}

@keyframes modalSlideUp {
  from {
    opacity: 0;
    transform: translateY(40px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.qr-close {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 40px;
  height: 40px;
  background: rgba(0, 0, 0, 0.05);
  border: none;
  border-radius: 50%;
  font-size: 24px;
  cursor: pointer;
  transition: var(--account-transition);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--account-text);
}

.qr-close:hover {
  background: rgba(255, 59, 48, 0.1);
  color: #ff3b30;
  transform: rotate(90deg);
}

.qr-title {
  font-size: 24px;
  font-weight: 700;
  color: var(--account-text);
  margin: 0 0 24px 0;
}

.qr-image-wrapper {
  background: white;
  padding: 24px;
  border-radius: 16px;
  margin-bottom: 24px;
  box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);
}

.qr-image {
  width: 100%;
  height: auto;
  display: block;
}

.qr-download {
  width: 100%;
  padding: 16px;
  background: var(--account-gradient);
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 700;
  cursor: pointer;
  transition: var(--account-transition);
  font-family: inherit;
}

.qr-download:hover {
  transform: translateY(-2px);
  box-shadow: var(--account-shadow-lg);
}

/* Mobile */
@media (max-width: 768px) {
  .account-container {
    padding: 0 16px;
  }
  
  .account-welcome {
    font-size: 28px;
  }
  
  .account-tabs {
    gap: 2px;
    padding: 3px;
    margin-bottom: 32px;
  }
  
  .tab-btn {
    padding: 14px 16px;
    font-size: 14px;
    min-width: 100px;
  }
  
  .tab-icon {
    display: none;
  }
  
  .esims-grid {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  
  .esim-actions {
    flex-direction: column;
  }
  
  .orders-container {
    overflow-x: auto;
  }
  
  .orders-table {
    min-width: 600px;
  }
  
  .form-row {
    grid-template-columns: 1fr;
  }
  
  .settings-card {
    padding: 28px 24px;
  }
  
  .form-actions {
    flex-direction: column;
  }
}
</style>

<div class="account-page">
  <div class="account-container">
    
    <!-- Account Header -->
    <div class="account-header">
      <h1 class="account-welcome">
        {{ 'customer.account.welcome' | t | default: 'Welcome back' }}, 
        {{ customer.first_name | default: customer.email | split: '@' | first }}!
      </h1>
      <p class="account-email">{{ customer.email }}</p>
      <a href="{{ routes.account_logout_url }}" class="logout-link">
        <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
        </svg>
        {{ 'customer.log_out' | t | default: 'Log out' }}
      </a>
    </div>
    
    <!-- Tab Navigation -->
    <div class="account-tabs">
      <button class="tab-btn active" onclick="switchTab('esims')">
        <svg class="tab-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
        </svg>
        <span>My eSIMs</span>
      </button>
      
      <button class="tab-btn" onclick="switchTab('orders')">
        <svg class="tab-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"/>
        </svg>
        <span>Orders</span>
      </button>
      
      <button class="tab-btn" onclick="switchTab('account')">
        <svg class="tab-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
        </svg>
        <span>Account Info</span>
      </button>
    </div>
    
    <!-- My eSIMs Tab -->
    <div id="esims-tab" class="tab-content active">
      
      {% assign has_esims = false %}
      {% assign esim_count = 0 %}
      
      <div class="esims-grid">
        
        {% for order in customer.orders %}
          {% assign orderMeta = order.metafields.Simbye.esimaccess_details %}
          
          {% if orderMeta %}
            {% for esimData in orderMeta %}
              {% assign has_esims = true %}
              {% assign esim_count = esim_count | plus: 1 %}
              
              {% for package in esimData.packageList %}
                {% for line_item in order.line_items %}
                  {% for variant in line_item.product.variants %}
                    {% if variant.metafields.custom.package_code == package.packageCode %}
                      
                      <!-- Calculate Status -->
                      {% assign status = 'active' %}
                      {% assign status_text = 'Active' %}
                      {% if esimData.expiredTime %}
                        {% assign expiry_timestamp = esimData.expiredTime | date: '%s' | times: 1 %}
                        {% assign now_timestamp = 'now' | date: '%s' | times: 1 %}
                        {% assign days_left = expiry_timestamp | minus: now_timestamp | divided_by: 86400 %}
                        
                        {% if days_left < 0 %}
                          {% assign status = 'expired' %}
                          {% assign status_text = 'Expired' %}
                        {% elsif days_left <= 3 %}
                          {% assign status = 'expiring' %}
                          {% assign status_text = 'Expiring Soon' %}
                        {% endif %}
                      {% endif %}
                      
                      <!-- eSIM Card -->
                      <div class="esim-card">
                        <div class="esim-status status-{{ status }}">{{ status_text }}</div>
                        
                        <div class="esim-header">
                          {% if line_item.product.featured_image %}
                            <img 
                              src="{{ line_item.product.featured_image | image_url: width: 112 }}" 
                              alt="{{ line_item.product.title }}"
                              class="esim-flag"
                              loading="lazy"
                            >
                          {% endif %}
                          <div class="esim-info">
                            <h3>{{ line_item.product.title | split: ' - ' | first | replace: 'eSIM', '' | strip }}</h3>
                            <div class="esim-plan">{{ variant.title }}</div>
                          </div>
                        </div>
                        
                        <div class="esim-details">
                          <div class="detail-row">
                            <span class="detail-label">Data</span>
                            <span class="detail-value">{{ variant.metafields.custom.data_ | default: variant.title }}</span>
                          </div>
                          
                          <div class="detail-row">
                            <span class="detail-label">Order</span>
                            <span class="detail-value">{{ order.name }}</span>
                          </div>
                          
                          <div class="detail-row">
                            <span class="detail-label">Purchased</span>
                            <span class="detail-value">{{ order.created_at | date: '%b %d, %Y' }}</span>
                          </div>
                          
                          {% if esimData.expiredTime %}
                            <div class="detail-row">
                              <span class="detail-label">Expires</span>
                              <span class="detail-value">
                                {{ esimData.expiredTime | date: '%b %d, %Y' }}
                                {% if days_left >= 0 %}
                                  ({{ days_left }} days)
                                {% endif %}
                              </span>
                            </div>
                          {% endif %}
                        </div>
                        
                        <div class="esim-actions">
                          <button 
                            class="btn btn-primary" 
                            onclick="showQR('{{ esimData.qrCodeUrl }}', '{{ line_item.product.title | escape }}')"
                          >
                            <svg width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"/>
                            </svg>
                            View QR Code
                          </button>
                          
                          {% if esimData.shortUrl %}
                            <a href="{{ esimData.shortUrl }}" class="btn btn-secondary" target="_blank">
                              <svg width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                              </svg>
                              Details
                            </a>
                          {% endif %}
                        </div>
                      </div>
                      
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% endfor %}
            {% endfor %}
          {% endif %}
        {% endfor %}
        
      </div>
      
      {% unless has_esims %}
        <div class="empty-state">
          <svg class="empty-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
          </svg>
          <h3 class="empty-title">{{ 'customer.orders.none' | t | default: 'No eSIMs Yet' }}</h3>
          <p class="empty-text">Start your journey with a Simbye eSIM</p>
          <a href="{{ routes.root_url }}" class="btn btn-primary">
            <svg width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
            </svg>
            Buy Your First eSIM
          </a>
        </div>
      {% endunless %}
    </div>
    
    <!-- Orders Tab -->
    <div id="orders-tab" class="tab-content">
      
      {% if customer.orders.size > 0 %}
        <div class="orders-container">
          <table class="orders-table">
            <thead>
              <tr>
                <th>{{ 'customer.orders.order_number' | t | default: 'Order' }}</th>
                <th>{{ 'customer.orders.date' | t | default: 'Date' }}</th>
                <th>{{ 'customer.orders.payment_status' | t | default: 'Payment' }}</th>
                <th>{{ 'customer.orders.fulfillment_status' | t | default: 'Status' }}</th>
                <th>{{ 'customer.orders.total' | t | default: 'Total' }}</th>
              </tr>
            </thead>
            <tbody>
              {% paginate customer.orders by 20 %}
                {% for order in customer.orders %}
                  <tr>
                    <td>
                      <a href="{{ order.customer_url }}" class="order-number">
                        {{ order.name }}
                      </a>
                    </td>
                    <td>{{ order.created_at | date: '%b %d, %Y' }}</td>
                    <td>
                      <span class="order-status status-{{ order.financial_status | handleize }}">
                        {{ order.financial_status_label }}
                      </span>
                    </td>
                    <td>
                      <span class="order-status status-{{ order.fulfillment_status | handleize | default: 'unfulfilled' }}">
                        {{ order.fulfillment_status_label | default: 'Processing' }}
                      </span>
                    </td>
                    <td><strong>{{ order.total_price | money }}</strong></td>
                  </tr>
                {% endfor %}
              {% endpaginate %}
            </tbody>
          </table>
        </div>
      {% else %}
        <div class="empty-state">
          <svg class="empty-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"/>
          </svg>
          <h3 class="empty-title">{{ 'customer.orders.none' | t | default: 'No Orders Yet' }}</h3>
          <p class="empty-text">You haven't placed any orders yet</p>
          <a href="{{ routes.root_url }}" class="btn btn-primary">Start Shopping</a>
        </div>
      {% endif %}
      
    </div>
    
    <!-- Account Info Tab -->
    <div id="account-tab" class="tab-content">
      <div class="settings-card">
        <h2 class="settings-title">{{ 'customer.account.details' | t | default: 'Account Details' }}</h2>
        
        <form method="post" action="{{ routes.account_url }}" accept-charset="UTF-8">
          <input type="hidden" name="form_type" value="customer">
          <input type="hidden" name="utf8" value="✓">
          
          <div class="form-row">
            <div class="form-group">
              <label class="form-label" for="first_name">
                {{ 'customer.account.first_name' | t | default: 'First Name' }}
              </label>
              <input 
                type="text" 
                id="first_name" 
                name="customer[first_name]" 
                value="{{ customer.first_name }}"
                class="form-input"
              >
            </div>
            
            <div class="form-group">
              <label class="form-label" for="last_name">
                {{ 'customer.account.last_name' | t | default: 'Last Name' }}
              </label>
              <input 
                type="text" 
                id="last_name" 
                name="customer[last_name]" 
                value="{{ customer.last_name }}"
                class="form-input"
              >
            </div>
          </div>
          
          <div class="form-group">
            <label class="form-label" for="email">
              {{ 'customer.account.email' | t | default: 'Email' }}
            </label>
            <input 
              type="email" 
              id="email" 
              value="{{ customer.email }}"
              class="form-input"
              readonly
            >
          </div>
          
          <div class="form-group">
            <label class="form-label" for="phone">
              {{ 'customer.account.phone' | t | default: 'Phone (Optional)' }}
            </label>
            <input 
              type="tel" 
              id="phone" 
              name="customer[phone]" 
              value="{{ customer.phone }}"
              class="form-input"
              placeholder="+49 123 456789"
            >
          </div>
          
          <div class="form-actions">
            <button type="submit" class="btn btn-primary">
              {{ 'customer.account.submit' | t | default: 'Save Changes' }}
            </button>
            <a href="{{ routes.account_login_url }}#recover" class="btn btn-secondary">
              {{ 'customer.account.reset_password' | t | default: 'Change Password' }}
            </a>
          </div>
        </form>
      </div>
    </div>
    
  </div>
</div>

<!-- QR Modal -->
<div class="qr-modal" id="qrModal">
  <div class="qr-content">
    <button class="qr-close" onclick="closeQR()">×</button>
    <h2 class="qr-title" id="qrTitle">eSIM QR Code</h2>
    <div class="qr-image-wrapper">
      <img id="qrImage" src="" alt="QR Code" class="qr-image">
    </div>
    <button class="qr-download" onclick="downloadQR()">
      Download QR Code
    </button>
  </div>
</div>

<script>
// Tab Switching
function switchTab(tabName) {
  // Hide all tabs
  document.querySelectorAll('.tab-content').forEach(content => {
    content.classList.remove('active');
  });
  
  // Remove active from all buttons
  document.querySelectorAll('.tab-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // Show selected tab
  document.getElementById(tabName + '-tab').classList.add('active');
  
  // Mark button as active
  event.target.closest('.tab-btn').classList.add('active');
}

// QR Modal
function showQR(qrUrl, title) {
  const modal = document.getElementById('qrModal');
  const qrImage = document.getElementById('qrImage');
  const qrTitle = document.getElementById('qrTitle');
  
  qrImage.src = qrUrl;
  qrTitle.textContent = title + ' QR Code';
  modal.classList.add('active');
  modal.dataset.qrUrl = qrUrl;
  modal.dataset.title = title;
  
  document.body.style.overflow = 'hidden';
}

function closeQR() {
  document.getElementById('qrModal').classList.remove('active');
  document.body.style.overflow = '';
}

function downloadQR() {
  const modal = document.getElementById('qrModal');
  const qrUrl = modal.dataset.qrUrl;
  const title = (modal.dataset.title || 'esim-qr').toLowerCase().replace(/[^a-z0-9]/g, '-');
  
  if (qrUrl) {
    const link = document.createElement('a');
    link.href = qrUrl;
    link.download = title + '-qr.png';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }
}

// Close modal on outside click
document.addEventListener('click', function(e) {
  const modal = document.getElementById('qrModal');
  if (e.target === modal) {
    closeQR();
  }
});

// Close modal on ESC
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeQR();
  }
});
</script>