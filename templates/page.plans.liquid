
  <!-- jQuery LADEN - WICHTIG! -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  
<!-- templates/page.check-esim.liquid -->
<!-- SIMBYE CHECK ESIM - ENTERPRISE VERSION 2.0 -->

<style>
/* =========================================================
   ENTERPRISE UI v3.0 — Visual Refresh (Style/Layout only)
   - Beibehalt aller IDs/Klassen für vorhandene JS-Logik
   - Voll responsiv, Dark Mode, A11y-Fokus
   ========================================================= */

:root{
  /* Brand */
  --brand:#009a61;
  --brand-dark:#00824f;
  --brand-accent:#00d97e;
  --brand-glow:#00ff88;

  /* Text & Surfaces (Light) */
  --text:#0a0a0a;
  --text-2:#50565c;
  --text-3:#7a828a;
  --bg:#ffffff;
  --bg-soft:#f6fbf8;
  --card:#ffffff;

  /* Lines & Shadows */
  --line:rgba(0,0,0,.06);
  --line-2:rgba(0,0,0,.04);
  --ring:rgba(0,154,97,.15);
  --shadow-sm:0 2px 10px rgba(0,0,0,.06);
  --shadow-md:0 10px 30px rgba(0,0,0,.08);
  --shadow-lg:0 24px 64px rgba(0,0,0,.12);

  /* Radii & Motion */
  --r-xs:10px;
  --r-sm:14px;
  --r-md:20px;
  --r-lg:28px;
  --r-pill:999px;

  --t-fast:160ms cubic-bezier(.4,0,.2,1);
  --t-base:260ms cubic-bezier(.4,0,.2,1);

  /* Gradients */
  --g-brand:linear-gradient(135deg,var(--brand),var(--brand-accent));
  --g-soft:linear-gradient(180deg,rgba(0,154,97,.03),transparent 60%);
  --g-page:radial-gradient(1200px 600px at 10% -10%, rgba(0,217,126,.12), transparent 40%),
           radial-gradient(1200px 600px at 90% -10%, rgba(0,154,97,.10), transparent 40%),
           linear-gradient(180deg,#fff 0%, #f7fffb 100%);
}

[data-theme="dark"]{
  --text:#f5f7f6;
  --text-2:#c8d1cb;
  --text-3:#8c948f;
  --bg:#0a0f0d;
  --bg-soft:#0f1714;
  --card:#121c18;

  --line:rgba(255,255,255,.08);
  --line-2:rgba(255,255,255,.06);
  --ring:rgba(0,255,136,.18);
  --shadow-sm:0 8px 22px rgba(0,0,0,.35);
  --shadow-md:0 16px 38px rgba(0,0,0,.45);
  --shadow-lg:0 24px 64px rgba(0,0,0,.55);

  --g-brand:linear-gradient(135deg,#00d97e,#00ff88);
  --g-soft:linear-gradient(180deg,rgba(0,255,136,.06),transparent 60%);
  --g-page:radial-gradient(1200px 600px at 10% -10%, rgba(0,255,136,.10), transparent 40%),
           radial-gradient(1200px 600px at 90% -10%, rgba(0,217,126,.10), transparent 40%),
           linear-gradient(180deg,#0a0f0d 0%, #0d1612 100%);
}

/* Base Reset */
*,*::before,*::after{box-sizing:border-box}
html,body{height:100%}
body{margin:0;color:var(--text);background:var(--bg);font:500 16px/1.5 ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial}
img{max-width:100%;display:block}

/* Prevent horizontal scroll */
html,body{overflow-x:hidden}

/* Shopify wrapper strip */
.shopify-section:has(.check-page){
  display:block !important; padding:0 !important; margin:0 !important; max-width:none !important; overflow-x:hidden !important;
}

/* ---------- Page Shell ---------- */
.check-page{
  min-height:100vh;
  background:var(--g-page);
  padding:72px 20px 96px;
  position:relative;
  isolation:isolate;
}
.check-page::after{
  content:"";
  position:absolute; inset:0; pointer-events:none; z-index:-1;
  background:radial-gradient(800px 300px at 50% 0, rgba(0,154,97,.08), transparent 60%);
}

.check-container{
  width:min(960px,100%);
  margin:0 auto;
}

/* ---------- Elevated Card ---------- */
.card{
  background:var(--card);
  border-radius:var(--r-lg);
  border:1px solid var(--line-2);
  box-shadow:var(--shadow-lg);
  overflow:hidden;
}

/* ---------- Search Card ---------- */
#searchCard.search-card{
  composes: card;
  padding:40px 40px 32px;
  position:relative;
}
#searchCard .search-title{
  font-weight:900; letter-spacing:-.02em;
  margin:0 0 20px;
  font-size:36px;
  background:var(--g-brand);
  -webkit-background-clip:text; background-clip:text; -webkit-text-fill-color:transparent;
  text-align:center;
}
.search-sub{
  text-align:center; color:var(--text-2); margin-bottom:28px; font-size:15px;
}

.search-form{
  display:grid; grid-template-columns:1fr auto; gap:12px;
  align-items:center; background:var(--bg); padding:10px; border-radius:var(--r-pill);
  border:1px solid var(--line); box-shadow:inset 0 1px 0 rgba(255,255,255,.06);
  transition:border var(--t-fast), box-shadow var(--t-fast);
}
.search-form:focus-within{ border-color:var(--brand); box-shadow:0 0 0 6px var(--ring); }

.search-input{
  border:0; outline:none; background:transparent; padding:12px 16px 12px 18px;
  font-size:16px; color:var(--text);
}
.search-input::placeholder{color:var(--text-3)}

.search-btn{
  border:0; cursor:pointer; padding:14px 26px; border-radius:var(--r-pill);
  font-weight:800; letter-spacing:.02em; color:#fff;
  background:var(--g-brand); box-shadow:0 10px 24px rgba(0,154,97,.25);
  transition:transform var(--t-fast), box-shadow var(--t-fast), opacity var(--t-fast);
}
.search-btn:hover:not(:disabled){ transform:translateY(-1px); box-shadow:0 16px 36px rgba(0,154,97,.35); }
.search-btn:active:not(:disabled){ transform:translateY(0); }
.search-btn:disabled{ opacity:.5; cursor:not-allowed; }

/* Inline message */
.message{ margin-top:16px; padding:12px 14px; border-radius:var(--r-sm); font-weight:600; display:none; }
.message.show{ display:block; animation:fadeIn .2s ease-out; }
.message.error{ background:linear-gradient(180deg,#ffe5e5, #ffd7d7); color:#9b1c1c; border:1px solid rgba(155,28,28,.25); }
.message.success{ background:linear-gradient(180deg,#e5fff3,#d3ffe9); color:#0b5c3d; border:1px solid rgba(11,92,61,.25); }
[data-theme="dark"] .message.error{ background:linear-gradient(180deg,rgba(255,59,59,.12),rgba(255,59,59,.08)); color:#ff9f9f; }
[data-theme="dark"] .message.success{ background:linear-gradient(180deg,rgba(0,217,126,.14),rgba(0,217,126,.10)); color:#a7ffda; }

/* ---------- Loading ---------- */
#loading.loading{
  text-align:center; padding:64px 20px; display:none;
}
#loading.loading.active{ display:block; animation:fadeIn .2s ease-out; }
.spinner{
  width:60px; height:60px; border-radius:50%;
  border:4px solid rgba(0,154,97,.15); border-top-color:var(--brand);
  animation:spin .8s linear infinite; margin:0 auto 12px;
}

/* ---------- eSIM Card ---------- */
#esimCard.esim-card{
  composes: card;
  display:none;
}
#esimCard.esim-card.active{ display:block; animation:slideUp .28s ease-out; }

/* Header */
.esim-header{
  position:relative; padding:36px 28px; color:#fff; text-align:center;
  background:var(--g-brand); overflow:hidden;
}
.esim-header::after{
  content:""; position:absolute; inset:-40% -20% auto -20%; height:180%;
  background:radial-gradient(500px 160px at 20% 20%, rgba(255,255,255,.18), transparent 70%),
             radial-gradient(500px 160px at 80% 10%, rgba(255,255,255,.12), transparent 70%);
  pointer-events:none;
}
.package-name{
  margin:0 0 10px; font-weight:900; letter-spacing:-.02em; font-size:34px;
  text-shadow:0 2px 16px rgba(0,0,0,.18);
}
.status-badges{ display:flex; flex-wrap:wrap; gap:10px; justify-content:center; }
.status-badge{
  display:inline-flex; align-items:center; gap:8px; padding:8px 14px; border-radius:var(--r-pill);
  background:rgba(255,255,255,.18); border:1px solid rgba(255,255,255,.28); font-weight:800; font-size:12px; letter-spacing:.05em;
  backdrop-filter:blur(6px);
}
.status-dot{ width:8px; height:8px; border-radius:50%; background:#fff; animation:blink 2s infinite; }

/* Quick Info */
.quick-info{
  display:grid; grid-template-columns:repeat(3,1fr); gap:22px; padding:28px; border-bottom:1px solid var(--line-2);
  background:var(--g-soft);
}
.info-item{text-align:center; padding:10px;}
.info-icon{
  width:52px; height:52px; margin:0 auto 10px; border-radius:14px; display:grid; place-items:center;
  background:var(--g-brand); box-shadow:0 10px 20px rgba(0,154,97,.25);
}
.info-icon svg{ width:24px; height:24px; color:#fff; }
.info-label{ font-size:11px; text-transform:uppercase; letter-spacing:.12em; color:var(--text-3); font-weight:800; margin-bottom:6px; }
.info-value{ font-size:22px; font-weight:900; letter-spacing:-.02em; color:var(--text); }

/* QR Section */
.qr-section{ padding:32px 32px 26px; text-align:center; border-bottom:1px solid var(--line-2); background:linear-gradient(180deg,rgba(0,154,97,.02),transparent 70%); }
.qr-container{ position:relative; display:inline-block; }
.qr-code{
  width:240px; height:240px; background:#fff; border-radius:22px; padding:14px;
  border:1px solid var(--line); box-shadow:var(--shadow-md); object-fit:contain;
}
.qr-blur{ filter:blur(12px); opacity:.6; pointer-events:none; }

.verify-overlay{
  position:absolute; inset:0; display:flex; flex-direction:column; align-items:center; justify-content:center;
  background:rgba(255,255,255,.92); border-radius:22px; border:1px solid var(--line);
  backdrop-filter:blur(8px); padding:18px; transition:opacity var(--t-base), visibility var(--t-base);
}
[data-theme="dark"] .verify-overlay{ background:rgba(18,28,24,.92); }
.verify-overlay.hidden{ opacity:0; visibility:hidden; pointer-events:none; }
.verify-icon{
  width:56px; height:56px; border-radius:50%; display:grid; place-items:center; margin-bottom:12px;
  background:var(--g-brand); box-shadow:0 10px 24px rgba(0,154,97,.35);
}
.verify-icon svg{ width:28px; height:28px; color:#fff; }
.verify-text{ margin:0 0 14px; color:var(--text-2); font-weight:600; }

.verify-btn{
  border:0; border-radius:var(--r-pill); padding:12px 22px; color:#fff; font-weight:900; letter-spacing:.04em;
  background:var(--g-brand); cursor:pointer; box-shadow:0 8px 22px rgba(0,154,97,.28); transition:transform var(--t-fast), box-shadow var(--t-fast);
}
.verify-btn:hover{ transform:translateY(-1px); box-shadow:0 14px 34px rgba(0,154,97,.36); }

.qr-actions{ display:none; gap:10px; justify-content:center; margin-top:18px; opacity:0; transition:opacity var(--t-base); }
.qr-actions.visible{ display:flex; opacity:1; }
.qr-action{
  display:inline-flex; align-items:center; gap:8px; padding:10px 16px; border-radius:var(--r-sm);
  background:var(--bg); border:1px solid var(--line); font-weight:800; cursor:pointer; transition:transform var(--t-fast), border var(--t-fast), background var(--t-fast);
}
.qr-action:hover{ transform:translateY(-1px); border-color:var(--brand); background:linear-gradient(180deg,rgba(0,154,97,.04),transparent 70%); }
.qr-action svg{ width:18px; height:18px; color:var(--brand); }

/* Usage Section */
.usage-section{ padding:28px; border-bottom:1px solid var(--line-2); background:var(--g-soft); }
.usage-title{ text-align:center; font-weight:900; letter-spacing:-.02em; margin:0 0 22px; }
.usage-visual{ width:min(240px,80vw); margin:0 auto 20px; position:relative; }
.usage-ring{ width:100%; height:auto; display:block; }
.ring-bg{ fill:none; stroke:var(--line); stroke-width:12; }
.ring-progress{ fill:none; stroke:url(#gradient); stroke-width:12; stroke-linecap:round; transform:rotate(-90deg); transform-origin:center; transition:stroke-dashoffset .9s cubic-bezier(.4,0,.2,1); }
.usage-center{ position:absolute; inset:0; display:grid; place-items:center; }
.usage-percent{ font-size:40px; font-weight:900; color:var(--brand); }
.usage-percent.low{ color:#ef4444; animation:lowPulse 1.5s ease infinite; }
.usage-label{ margin-top:6px; text-align:center; font-size:11px; letter-spacing:.14em; text-transform:uppercase; color:var(--text-3); font-weight:800; }

.usage-stats{
  display:grid; grid-template-columns:repeat(2,1fr); gap:14px;
  padding:18px; border-radius:var(--r-md);
  border:1px solid var(--line-2);
  background:linear-gradient(180deg,rgba(0,154,97,.03),transparent 70%);
}
.usage-stat{text-align:center;}
.stat-value{ display:block; font-weight:900; font-size:24px; letter-spacing:-.02em; color:var(--text); }
.stat-label{ font-size:11px; color:var(--text-3); text-transform:uppercase; letter-spacing:.14em; font-weight:800; }

/* Details */
.details-section{ padding:28px; background:var(--card); }
.details-grid{ display:grid; gap:12px; }
.detail-row{
  display:flex; align-items:center; justify-content:space-between; gap:20px;
  padding:14px 16px; border-radius:var(--r-sm);
  border:1px solid var(--line-2); background:linear-gradient(180deg,rgba(0,0,0,.02),transparent 70%);
  transition:border var(--t-fast), background var(--t-fast), transform var(--t-fast);
}
.detail-row:hover{ border-color:var(--brand); background:linear-gradient(180deg,rgba(0,154,97,.05),transparent 70%); transform:translateY(-1px); }
.detail-label{ font-size:12px; text-transform:uppercase; letter-spacing:.12em; color:var(--text-3); font-weight:900; }
.detail-value{ font:600 15px/1.4 ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace; color:var(--text); word-break:break-all; }

/* CTA Section */
.action-section{ padding:30px 28px 36px; text-align:center; background:var(--bg); }
.primary-btn{
  border:0; border-radius:var(--r-pill); padding:18px 36px; color:#fff; font-weight:900; letter-spacing:.04em; font-size:16px;
  background:var(--g-brand); cursor:pointer; box-shadow:0 14px 36px rgba(0,154,97,.35);
  transition:transform var(--t-fast), box-shadow var(--t-fast), filter var(--t-fast);
}
.primary-btn:hover:not(:disabled){ transform:translateY(-1px); box-shadow:0 18px 46px rgba(0,154,97,.42); }
.primary-btn:disabled{ opacity:.45; cursor:not-allowed; }
.action-info{ margin-top:12px; color:var(--text-2); font-weight:700; }
.action-info.warning{ color:#f59e0b; }
.action-info.error{ color:#ef4444; }

/* ---------- Modals ---------- */
.modal{
  position:fixed; inset:0; display:none; place-items:center; padding:20px; z-index:9999;
  background:rgba(0,0,0,.75); backdrop-filter:blur(6px); opacity:0; transition:opacity var(--t-base);
}
.modal.active{ display:grid; opacity:1; }

.modal-content{
  width:min(560px,100%); max-height:88vh; overflow:auto;
  background:var(--card); border:1px solid var(--line); border-radius:var(--r-lg); box-shadow:var(--shadow-lg);
  padding:38px 30px; position:relative; animation:slideUp .24s ease-out;
}
.modal-header{ text-align:center; margin-bottom:18px; }
.modal-title{ margin:0 0 6px; font-size:26px; font-weight:900; letter-spacing:-.02em; }
.modal-subtitle{ color:var(--text-2); font-weight:600; }

.modal-input{
  width:100%; border-radius:var(--r-sm); border:1px solid var(--line);
  padding:14px 16px; background:var(--bg); color:var(--text); font-weight:700; margin:16px 0 22px;
  transition:border var(--t-fast), box-shadow var(--t-fast);
}
.modal-input:focus{ outline:none; border-color:var(--brand); box-shadow:0 0 0 6px var(--ring); }

.modal-actions{ display:grid; grid-template-columns:1fr 1fr; gap:12px; }
.modal-btn{
  border:0; border-radius:var(--r-sm); padding:14px 16px; font-weight:900; cursor:pointer; transition:transform var(--t-fast), box-shadow var(--t-fast), opacity var(--t-fast);
}
.modal-btn.primary{ background:var(--g-brand); color:#fff; box-shadow:0 10px 24px rgba(0,154,97,.28); }
.modal-btn.primary:hover{ transform:translateY(-1px); box-shadow:0 16px 36px rgba(0,154,97,.36); }
.modal-btn.secondary{ background:linear-gradient(180deg,rgba(0,0,0,.04),transparent 70%); color:var(--text-2); border:1px solid var(--line); }
.modal-btn.secondary:hover{ opacity:.85; }

.modal-close{
  position:absolute; inset:18px 18px auto auto; width:40px; height:40px; border-radius:50%;
  border:1px solid var(--line); background:transparent; color:var(--text-2); cursor:pointer; display:grid; place-items:center;
  transition:transform var(--t-fast), background var(--t-fast), color var(--t-fast), border var(--t-fast);
}
.modal-close:hover{ transform:rotate(90deg); background:rgba(239,68,68,.12); color:#ef4444; border-color:rgba(239,68,68,.32); }

/* Topup list */
.topup-content{ max-height:80vh; overflow:auto; }
.topup-plans{ display:grid; gap:14px; margin:6px 0 4px; padding-right:4px; }
.topup-plan{
  border-radius:var(--r-md); padding:20px; text-align:center; cursor:pointer;
  border:1px solid var(--line); background:linear-gradient(180deg,rgba(0,154,97,.04),transparent 70%);
  transition:border var(--t-fast), transform var(--t-fast), box-shadow var(--t-fast);
  position:relative; overflow:hidden;
}
.topup-plan::before{
  content:""; position:absolute; inset:0; background:linear-gradient(90deg,transparent,rgba(0,154,97,.12),transparent);
  transform:translateX(-100%); transition:transform .6s ease;
}
.topup-plan:hover{ border-color:var(--brand); transform:translateY(-2px); box-shadow:0 16px 40px rgba(0,154,97,.18); }
.topup-plan:hover::before{ transform:translateX(100%); }

.topup-name{ font-weight:900; letter-spacing:-.01em; margin-bottom:6px; }
.topup-price{
  font-weight:900; font-size:30px; letter-spacing:-.02em; margin-bottom:12px;
  background:var(--g-brand); -webkit-background-clip:text; background-clip:text; -webkit-text-fill-color:transparent;
}
.topup-buy{
  width:100%; border:0; border-radius:var(--r-pill); padding:12px 16px; color:#fff; font-weight:900;
  background:var(--g-brand); cursor:pointer; box-shadow:0 10px 26px rgba(0,154,97,.28);
  transition:transform var(--t-fast), box-shadow var(--t-fast);
}
.topup-buy:hover{ transform:translateY(-1px); box-shadow:0 16px 36px rgba(0,154,97,.36); }

.modal-loading{
  position:absolute; inset:0; display:grid; place-items:center; border-radius:var(--r-lg);
  background:rgba(255,255,255,.9); opacity:0; visibility:hidden; transition:opacity var(--t-base), visibility var(--t-base);
}
[data-theme="dark"] .modal-loading{ background:rgba(12,18,16,.9); }
.modal-loading.active{ opacity:1; visibility:visible; }

/* ---------- Responsive ---------- */
@media (max-width:720px){
  .check-page{ padding:56px 16px 84px; }
  #searchCard.search-card{ padding:28px 20px; border-radius:var(--r-md); }
  #searchCard .search-title{ font-size:28px; }
  .search-sub{ font-size:14px; }
  .search-form{ grid-template-columns:1fr; border-radius:var(--r-md); padding:12px; }
  .search-input{ background:var(--bg); border:1px solid var(--line); border-radius:var(--r-sm); padding:14px 12px; }
  .search-btn{ width:100%; }

  .quick-info{ grid-template-columns:repeat(3,1fr); gap:12px; padding:20px; }
  .info-icon{ width:44px; height:44px; }
  .info-value{ font-size:18px; }
  .esim-header{ padding:28px 18px; }
  .package-name{ font-size:26px; }

  .qr-section{ padding:24px 18px; }
  .qr-code{ width:220px; height:220px; border-radius:18px; }
  .usage-section{ padding:22px 18px; }
  .usage-stats{ gap:10px; padding:14px; }
  .details-section{ padding:22px 18px; }
  .action-section{ padding:24px 18px 30px; }

  .modal-content{ width:calc(100vw - 32px); padding:28px 20px; }
}

/* ---------- Animations ---------- */
@keyframes spin{ to{ transform:rotate(360deg) } }
@keyframes fadeIn{ from{opacity:0; transform:translateY(6px)} to{opacity:1; transform:none} }
@keyframes slideUp{ from{opacity:.0; transform:translateY(14px)} to{opacity:1; transform:none} }
@keyframes lowPulse{ 0%,100%{ transform:scale(1) } 50%{ transform:scale(1.05) } }
@keyframes blink{ 0%,100%{opacity:1} 50%{opacity:.5} }
</style>

<!-- HTML -->
<div class="check-page">
  <div class="check-container">

    <!-- Search Card -->
    <div class="search-card" id="searchCard">
      <h1 class="search-title">{{ 'check.title' | t | default: 'Check Your eSIM' }}</h1>
      <p class="search-sub">{{ 'check.subtitle' | t | default: 'Enter your order number to view status, QR, usage & details.' }}</p>

      <div class="search-form" role="search">
        <input 
          type="text"
          id="orderInput"
          class="search-input"
          placeholder="{{ 'check.placeholder' | t | default: 'Enter order number' }}"
          autocomplete="off"
          aria-label="{{ 'check.placeholder' | t | default: 'Enter order number' }}"
        >
        <button id="searchBtn" class="search-btn" aria-label="Search">
          {{ 'check.search' | t | default: 'SEARCH' }}
        </button>
      </div>

      <div id="message" class="message" role="status"></div>
    </div>

    <!-- Loading -->
    <div id="loading" class="loading" aria-live="polite">
      <div class="spinner"></div>
      <p>{{ 'check.loading' | t | default: 'Loading your eSIM…' }}</p>
    </div>

    <!-- eSIM Card -->
    <div id="esimCard" class="esim-card" aria-live="polite">

      <!-- Header -->
      <div class="esim-header">
        <h2 class="package-name" id="packageName">-</h2>
        <div class="status-badges">
          <span class="status-badge" aria-live="polite">
            <span class="status-dot" aria-hidden="true"></span>
            <span id="esimStatus">-</span>
          </span>
          <span class="status-badge" id="typeBadge">
            <span id="esimType">-</span>
          </span>
        </div>
      </div>

      <!-- Quick Info -->
      <div class="quick-info">
        <div class="info-item">
          <div class="info-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
            </svg>
          </div>
          <div class="info-label">{{ 'check.total_data' | t | default: 'Total Data' }}</div>
          <div class="info-value" id="totalData">-</div>
        </div>

        <div class="info-item">
          <div class="info-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <div class="info-label">{{ 'check.validity' | t | default: 'Validity' }}</div>
          <div class="info-value" id="validity">-</div>
        </div>

        <div class="info-item">
          <div class="info-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
            </svg>
          </div>
          <div class="info-label">{{ 'check.expires' | t | default: 'Expires' }}</div>
          <div class="info-value" id="expiryDate">-</div>
        </div>
      </div>

      <!-- QR -->
      <div class="qr-section">
        <div class="qr-container">
          <img id="qrCode" class="qr-code qr-blur" src="" alt="QR Code">
          <div class="verify-overlay" id="verifyOverlay" aria-hidden="false">
            <div class="verify-icon">
              <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
              </svg>
            </div>
            <p class="verify-text">{{ 'check.verify_text' | t | default: 'Verify email to view QR code' }}</p>
            <button class="verify-btn" id="verifyBtn">{{ 'check.verify_button' | t | default: 'VERIFY EMAIL' }}</button>
          </div>
        </div>

        <div class="qr-actions" id="qrActions">
          <button class="qr-action" id="downloadBtn">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
            </svg>
            {{ 'check.download' | t | default: 'Download' }}
          </button>
          <button class="qr-action" id="manualBtn">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
            </svg>
            {{ 'check.manual' | t | default: 'Manual' }}
          </button>
        </div>
      </div>

      <!-- Usage -->
      <div class="usage-section">
        <h3 class="usage-title">{{ 'check.data_usage' | t | default: 'Data Usage' }}</h3>

        <div class="usage-visual">
          <svg class="usage-ring" viewBox="0 0 120 120" aria-hidden="true">
            <defs>
              <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="#009a61"/>
                <stop offset="100%" stop-color="#00d97e"/>
              </linearGradient>
            </defs>
            <circle cx="60" cy="60" r="50" class="ring-bg"/>
            <circle cx="60" cy="60" r="50" class="ring-progress" stroke-dasharray="314" stroke-dashoffset="314" id="progressRing"/>
          </svg>
          <div class="usage-center">
            <div class="usage-percent" id="usagePercent">0%</div>
            <div class="usage-label">{{ 'check.remaining' | t | default: 'Remaining' }}</div>
          </div>
        </div>

        <div class="usage-stats">
          <div class="usage-stat">
            <span class="stat-value" id="dataUsed">-</span>
            <span class="stat-label">{{ 'check.consumed' | t | default: 'Consumed' }}</span>
          </div>
          <div class="usage-stat">
            <span class="stat-value" id="dataLeft">-</span>
            <span class="stat-label">{{ 'check.remaining' | t | default: 'Remaining' }}</span>
          </div>
        </div>
      </div>

      <!-- Details -->
      <div class="details-section">
        <div class="details-grid">
          <div class="detail-row">
            <span class="detail-label">{{ 'check.iccid' | t | default: 'ICCID' }}</span>
            <span class="detail-value" id="iccid">-</span>
          </div>
          <div class="detail-row">
            <span class="detail-label">{{ 'check.apn' | t | default: 'APN' }}</span>
            <span class="detail-value" id="apn">-</span>
          </div>
        </div>
      </div>

      <!-- CTA -->
      <div class="action-section">
        <button id="actionBtn" class="primary-btn">{{ 'check.topup' | t | default: 'TOP UP NOW' }}</button>
        <div id="actionInfo" class="action-info"></div>
      </div>

    </div>
  </div>
</div>

<!-- Email Modal -->
<div id="emailModal" class="modal" aria-modal="true" role="dialog">
  <div class="modal-content">
    <button class="modal-close" id="closeEmail" aria-label="Close">✕</button>
    <div class="modal-header">
      <h3 class="modal-title">{{ 'check.email_title' | t | default: 'Email Verification' }}</h3>
      <p class="modal-subtitle">{{ 'check.email_subtitle' | t | default: 'Enter your email to view QR code' }}</p>
    </div>
    <input type="email" id="emailInput" class="modal-input" placeholder="{{ 'check.email_placeholder' | t | default: 'your@email.com' }}" autocomplete="email">
    <div class="modal-actions">
      <button class="modal-btn primary" id="verifyEmail">{{ 'check.verify' | t | default: 'Verify' }}</button>
      <button class="modal-btn secondary" id="cancelEmail">{{ 'check.cancel' | t | default: 'Cancel' }}</button>
    </div>
    <div class="modal-loading" id="emailLoading">
      <div class="spinner"></div>
    </div>
  </div>
</div>

<!-- Top-Up Modal -->
<div id="topupModal" class="modal" aria-modal="true" role="dialog">
  <div class="modal-content topup-content">
    <button class="modal-close" id="closeTopup" aria-label="Close">✕</button>
    <div class="modal-header">
      <h3 class="modal-title">{{ 'check.topup_title' | t | default: 'Select Top-Up Plan' }}</h3>
      <p class="modal-subtitle">{{ 'check.topup_subtitle' | t | default: 'Choose your data package' }}</p>
    </div>
    <div class="topup-plans" id="topupPlans"></div>
    <div class="modal-loading" id="topupLoading">
      <div class="spinner"></div>
    </div>
  </div>
</div>

<script>
// Check jQuery
if (typeof jQuery === 'undefined') {
  var script = document.createElement('script');
  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js';
  document.head.appendChild(script);
  script.onload = initEsimCheck;
} else {
  jQuery(document).ready(initEsimCheck);
}

function initEsimCheck() {
  const $ = jQuery;
  
  // State Management
  let currentOrder = null;
  let currentEsim = null;
  let isEmailVerified = false;
  let attempts = 0;
  const maxAttempts = 3;
  const lockDuration = 60 * 60 * 1000; // 1 hour
  
  // Initialize
  init();
  
  function init() {
    // Check lockout
    checkLockout();
    
    // URL params
    const urlParams = new URLSearchParams(window.location.search);
    const orderParam = urlParams.get('order_number');
    if (orderParam) {
      $('#orderInput').val(orderParam);
      setTimeout(() => search(), 500);
    }
    
    // Event Handlers
    $('#searchBtn').click(search);
    $('#orderInput').keypress(e => { if (e.which === 13) search(); });
    
    // Email Verification
    $('#verifyBtn').click(() => $('#emailModal').addClass('active'));
    $('#verifyEmail').click(verifyEmail);
    $('#cancelEmail, #closeEmail').click(() => {
      $('#emailModal').removeClass('active');
      $('#emailInput').val('');
      $('#emailLoading').removeClass('active');
    });
    
    // Top-Up Modal
    $('#closeTopup').click(() => {
      $('#topupModal').removeClass('active');
      $('#topupLoading').removeClass('active');
      // FIX: Show search card again when closing modal
      if (!currentEsim) {
        $('#searchCard').show();
      }
    });
    
    $('#actionBtn').click(handleAction);
    $('#downloadBtn').click(downloadQR);
    $('#manualBtn').click(showManual);
    
    // Prevent body scroll when modal is open
    $('.modal').on('wheel touchmove', function(e) {
      if ($(e.target).closest('.modal-content').length === 0) {
        e.preventDefault();
      }
    });
  }
  
  // Check lockout
  function checkLockout() {
    const lockEnd = sessionStorage.getItem('lockEnd');
    if (lockEnd && Date.now() < parseInt(lockEnd)) {
      const mins = Math.ceil((parseInt(lockEnd) - Date.now()) / 60000);
      showMessage(`{{ 'check.locked' | t | default: 'Too many attempts. Try again in %mins% minutes' }}`.replace('%mins%', mins), 'error');
      $('#searchBtn').prop('disabled', true);
      return true;
    }
    $('#searchBtn').prop('disabled', false);
    return false;
  }
  
  // Search
  function search() {
    if (checkLockout()) return;
    
    const order = $('#orderInput').val().trim();
    if (!order) {
      showMessage('{{ 'check.enter_order' | t | default: 'Please enter order number' }}', 'error');
      return;
    }
    
    currentOrder = order;
    showLoading(true);
    hideMessage();
    
    $.ajax({
      url: 'https://simbye.com/apps/topup/info/' + order,
      method: 'GET',
      headers: { 'Accept': 'application/json' },
      timeout: 15000,
      success: response => {
        showLoading(false);
        if (response?.data?.obj?.esimList?.[0]) {
          currentEsim = response.data.obj.esimList[0];
          attempts = 0;
          displayEsim();
          $('#searchCard').hide(); // Direct hide instead of class
        } else {
          handleFailedAttempt();
        }
      },
      error: () => {
        showLoading(false);
        handleFailedAttempt();
      }
    });
  }
  
  // Handle failed attempt
  function handleFailedAttempt() {
    attempts++;
    if (attempts >= maxAttempts) {
      sessionStorage.setItem('lockEnd', Date.now() + lockDuration);
      checkLockout();
    } else {
      showMessage(`{{ 'check.not_found' | t | default: 'Order not found. Attempt %attempt% of %max%' }}`
        .replace('%attempt%', attempts)
        .replace('%max%', maxAttempts), 'error');
    }
  }
  
  // Display eSIM
  function displayEsim() {
    const pkg = currentEsim.packageList?.[0] || {};
    
    // Show card
    $('#esimCard').addClass('active');
    
    // Package name
    $('#packageName').text(pkg.packageName || 'eSIM Package');
    
    // Status
    const status = getStatus();
    $('#esimStatus').text(status.label);
    
    // Type
    const type = getType();
    $('#esimType').text(type.label);
    
    // Data calculations
    const totalGB = (currentEsim.totalVolume / 1073741824).toFixed(2);
    const usedGB = (currentEsim.orderUsage / 1073741824).toFixed(2);
    const leftGB = Math.max(0, totalGB - usedGB).toFixed(2);
    const remainingPercent = Math.max(0, 100 - (currentEsim.orderUsage / currentEsim.totalVolume * 100));
    
    // Quick info
    $('#totalData').text(totalGB + ' GB');
    $('#validity').text((currentEsim.totalDuration || 0) + ' {{ 'check.days' | t | default: 'Days' }}');
    $('#expiryDate').text(formatDate(currentEsim.expiredTime));
    
    // Usage visualization
    $('#usagePercent').text(Math.round(remainingPercent) + '%');
    if (remainingPercent < 20) $('#usagePercent').addClass('low');
    
    const circumference = 2 * Math.PI * 50;
    const offset = circumference - (remainingPercent / 100) * circumference;
    $('#progressRing').css('stroke-dashoffset', offset);
    
    $('#dataUsed').text(usedGB + ' GB');
    $('#dataLeft').text(leftGB + ' GB');
    
    // Details (hide sensitive data until verified)
    $('#iccid').text(formatIccid(currentEsim.iccid));
    $('#apn').text('****'); // Hidden until verified
    
    // Hide QR actions initially
    $('#qrActions').removeClass('visible');
    
    // Action button
    updateAction(type);
    
    showMessage('{{ 'check.found' | t | default: 'eSIM found! Verify email for full details' }}', 'success');
  }
  
  // Get status
  function getStatus() {
    if (isExpired()) return { label: '{{ 'check.status_expired' | t | default: 'Expired' }}', color: 'red' };
    
    switch(currentEsim.esimStatus) {
      case 'IN_USE': return { label: '{{ 'check.status_active' | t | default: 'Active' }}', color: 'green' };
      case 'NEW': return { label: '{{ 'check.status_ready' | t | default: 'Ready' }}', color: 'yellow' };
      case 'ONBOARD': return { label: '{{ 'check.status_installed' | t | default: 'Already Installed' }}', color: 'green' };
      case 'GOT_RESOURCE': return { label: '{{ 'check.status_ready_install' | t | default: 'Ready to Install' }}', color: 'yellow' };
      case 'USEDUP': return { label: '{{ 'check.status_used' | t | default: 'Used Up' }}', color: 'red' };
      default: return { label: '{{ 'check.status_unknown' | t | default: 'Unknown' }}', color: 'gray' };
    }
  }
  
  // Get type
  function getType() {
    const pkg = currentEsim.packageList?.[0] || {};
    const slug = (pkg.slug || '').toLowerCase();
    const name = (pkg.packageName || '').toLowerCase();
    
    if (slug.includes('daily') || slug.includes('_daily')) {
      return { 
        type: 'DAILY',
        label: '{{ 'check.type_daily' | t | default: 'Daily Reset' }}',
        canTopUp: false
      };
    }
    
    if (name.includes('unlimited')) {
      return {
        type: 'UNLIMITED',
        label: '{{ 'check.type_unlimited' | t | default: 'Unlimited' }}',
        canTopUp: false
      };
    }
    
    if (isExpired()) {
      return {
        type: 'EXPIRED',
        label: '{{ 'check.type_expired' | t | default: 'Expired' }}',
        canTopUp: false
      };
    }
    
    return {
      type: 'NORMAL',
      label: '{{ 'check.type_standard' | t | default: 'Standard' }}',
      canTopUp: true
    };
  }
  
  // Update action button
  function updateAction(type) {
    const $btn = $('#actionBtn');
    const $info = $('#actionInfo');
    
    if (type.type === 'EXPIRED') {
      $btn.text('{{ 'check.buy_new' | t | default: 'BUY NEW ESIM' }}').prop('disabled', false);
      $info.text('{{ 'check.expired_info' | t | default: 'This eSIM has expired' }}').addClass('error');
      $btn.off('click').click(() => window.location.href = '/collections/all');
      
    } else if (type.type === 'DAILY' || type.type === 'UNLIMITED') {
      $btn.text('{{ 'check.not_rechargeable' | t | default: 'NOT RECHARGEABLE' }}').prop('disabled', true);
      $info.text('{{ 'check.daily_info' | t | default: 'Daily/Unlimited plans cannot be topped up' }}').addClass('warning');
      
    } else if (type.canTopUp) {
      $btn.text('{{ 'check.topup_now' | t | default: 'TOP UP NOW' }}').prop('disabled', false);
      $info.text('{{ 'check.topup_info' | t | default: 'Add more data anytime' }}').removeClass('warning error');
      $btn.off('click').click(handleAction);
    }
  }
  
  // Handle action
  function handleAction() {
    const type = getType();
    if (type.canTopUp) {
      loadTopUp();
    }
  }
  
  // Load top-up
  function loadTopUp() {
    if (!currentEsim) return;
    
    const pkg = currentEsim.packageList?.[0] || {};
    const currency = window.Shopify?.currency?.active || 'EUR';
    
    $('#topupModal').addClass('active');
    $('#topupLoading').addClass('active');
    
    $.ajax({
      url: `https://simbye.com/apps/topup/plans?esimTranNo=${currentEsim.esimTranNo}&packageCode=${pkg.packageCode}&currency=${currency}`,
      method: 'GET',
      headers: { 'Accept': 'application/json' },
      timeout: 15000,
      success: response => {
        $('#topupLoading').removeClass('active');
        if (response?.data?.length > 0) {
          displayTopUp(response.data);
        } else {
          alert('{{ 'check.no_plans' | t | default: 'No top-up plans available' }}');
          $('#topupModal').removeClass('active');
        }
      },
      error: () => {
        $('#topupLoading').removeClass('active');
        alert('{{ 'check.load_failed' | t | default: 'Failed to load plans' }}');
        $('#topupModal').removeClass('active');
      }
    });
  }
  
  // Display top-up plans
  function displayTopUp(plans) {
    let html = '';
    plans.forEach(plan => {
      html += `
        <div class="topup-plan">
          <div class="topup-name">${plan.name}</div>
          <div class="topup-price">${plan.price} ${window.Shopify?.currency?.active || 'EUR'}</div>
          <button class="topup-buy" data-variant="${plan.variant_id}" data-package="${plan.packageCode}">
            {{ 'check.buy' | t | default: 'BUY NOW' }}
          </button>
        </div>
      `;
    });
    
    $('#topupPlans').html(html);
    
    // Buy handlers
    $('.topup-buy').click(function() {
      buyTopUp($(this).data('variant'), $(this).data('package'));
    });
  }
  
  // Buy top-up
  function buyTopUp(variantId, packageCode) {
    $.post('/cart/add.js', {
      items: [{
        quantity: 1,
        id: variantId,
        properties: {
          'packageCode': packageCode,
          'esimTranNo': currentEsim.esimTranNo,
          'type': 'TOPUP'
        }
      }]
    })
    .done(() => window.location.href = '/checkout')
    .fail(() => alert('{{ 'check.cart_failed' | t | default: 'Failed to add to cart' }}'));
  }
  
  // Verify email
  function verifyEmail() {
    const email = $('#emailInput').val().trim();
    if (!email || !email.includes('@')) {
      alert('{{ 'check.enter_email' | t | default: 'Please enter valid email' }}');
      return;
    }
    
    $('#emailLoading').addClass('active');
    
    $.ajax({
      url: `https://simbye.com/apps/topup/info/${currentOrder}/${email}`,
      method: 'GET',
      headers: { 'Accept': 'application/json' },
      timeout: 15000,
      success: response => {
        $('#emailLoading').removeClass('active');
        if (response?.data?.obj?.esimList?.[0]) {
          currentEsim = response.data.obj.esimList[0];
          isEmailVerified = true;
          displayFullData();
          $('#emailModal').removeClass('active');
          $('#emailInput').val('');
        } else {
          alert('{{ 'check.verify_failed' | t | default: 'Verification failed' }}');
        }
      },
      error: () => {
        $('#emailLoading').removeClass('active');
        alert('{{ 'check.verify_failed' | t | default: 'Verification failed' }}');
      }
    });
  }
  
  // Display full data after verification
  function displayFullData() {
    // Show QR Code
    if (currentEsim.qrCodeUrl) {
      $('#qrCode').attr('src', currentEsim.qrCodeUrl).removeClass('qr-blur');
      $('#verifyOverlay').addClass('hidden');
    }
    
    // Show APN
    $('#apn').text(currentEsim.apn || 'internet');
    
    // Store shortUrl if available (for manual installation)
    if (currentEsim.shortUrl) {
      currentEsim.shortUrl = currentEsim.shortUrl;
    }
    
    // Show QR actions
    $('#qrActions').addClass('visible');
    
    showMessage('{{ 'check.verified' | t | default: 'Email verified successfully!' }}', 'success');
  }
  
  // Download QR
  function downloadQR() {
    if (!isEmailVerified) {
      $('#emailModal').addClass('active');
      return;
    }
    
    const url = $('#qrCode').attr('src');
    if (url) {
      const a = document.createElement('a');
      a.href = url;
      a.download = `esim-qr-${currentOrder}.png`;
      a.click();
    }
  }
  
  // Show manual installation
  function showManual() {
    if (!isEmailVerified) {
      $('#emailModal').addClass('active');
      return;
    }
    
    if (currentEsim?.shortUrl) {
      // Redirect to the manual installation page
      window.location.href = currentEsim.shortUrl;
    } else if (currentEsim?.ac) {
      // Fallback: Create manual installation URL if shortUrl not available
      const baseUrl = 'https://simbye.com/install/';
      const installUrl = baseUrl + currentOrder;
      window.location.href = installUrl;
    } else {
      alert('{{ 'check.manual_unavailable' | t | default: 'Please verify email first' }}');
    }
  }
  
  // Helpers
  function isExpired() {
    if (!currentEsim?.expiredTime) return false;
    return new Date(currentEsim.expiredTime) < new Date();
  }
  
  function formatDate(str) {
    if (!str) return '-';
    const options = { year: 'numeric', month: 'short', day: 'numeric' };
    return new Date(str).toLocaleDateString('en-US', options);
  }
  
  function formatIccid(str) {
    if (!str) return '-';
    // Show partial ICCID until verified
    if (!isEmailVerified) {
      return str.substring(0, 8) + '****' + str.substring(str.length - 4);
    }
    return str.replace(/(.{4})/g, '$1 ').trim();
  }
  
  function showMessage(msg, type) {
    $('#message').text(msg).removeClass().addClass('message ' + type + ' show');
    setTimeout(() => hideMessage(), 5000);
  }
  
  function hideMessage() {
    $('#message').removeClass('show');
  }
  
  function showLoading(show) {
    if (show) {
      $('#loading').addClass('active');
      $('#esimCard').removeClass('active');
    } else {
      $('#loading').removeClass('active');
    }
  }
  
  // Initialize - Add scroll prevention
  $('body').css('overflow-x', 'hidden');
  $('html').css('overflow-x', 'hidden');
  
  // Prevent all horizontal scrolling
  document.body.style.overflowX = 'hidden';
  document.documentElement.style.overflowX = 'hidden';
  document.body.style.maxWidth = '100vw';
  document.documentElement.style.maxWidth = '100vw';
}
</script>