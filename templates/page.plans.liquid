<!DOCTYPE html>
<html lang="{{ shop.locale }}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Check eSIM Status</title>
  
  <!-- jQuery LADEN - WICHTIG! -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  
<!-- templates/page.check-esim.liquid -->
<!-- SIMBYE CHECK ESIM - ENTERPRISE VERSION 2.0 -->

<!-- templates/page.check-esim.liquid -->
<!-- SIMBYE CHECK ESIM - ENTERPRISE VERSION 2.0 -->

<!-- templates/page.check-esim.liquid -->
<!-- SIMBYE CHECK ESIM - ENTERPRISE VERSION 2.0 -->

<style>
/* ================================================
   ENTERPRISE DESIGN SYSTEM V2.0
   ================================================ */

:root {
  --primary: #009a61;
  --primary-dark: #00824f;
  --primary-light: #00d97e;
  --accent: #00ff88;
  
  --text: #0a0a0a;
  --text-secondary: #4a4a4a;
  --text-muted: #888888;
  
  --bg-page: #ffffff;
  --bg-card: #ffffff;
  --bg-overlay: rgba(250, 255, 253, 0.98);
  
  --border: rgba(0, 154, 97, 0.08);
  --border-light: rgba(0, 154, 97, 0.04);
  
  --shadow-sm: 0 2px 8px rgba(0, 154, 97, 0.06);
  --shadow-md: 0 8px 24px rgba(0, 154, 97, 0.08);
  --shadow-lg: 0 16px 48px rgba(0, 154, 97, 0.12);
  --shadow-xl: 0 24px 64px rgba(0, 154, 97, 0.16);
  
  --radius-sm: 12px;
  --radius-md: 20px;
  --radius-lg: 28px;
  --radius-full: 100px;
  
  --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-fast: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

[data-theme="dark"] {
  --text: #ffffff;
  --text-secondary: #b0b0b0;
  --text-muted: #666666;
  --bg-page: #0a0a0a;
  --bg-card: #1a1a1a;
  --bg-overlay: rgba(26, 26, 26, 0.98);
  --border: rgba(255, 255, 255, 0.08);
  --border-light: rgba(255, 255, 255, 0.04);
  --primary-light: #00ff88;
}

/* CRITICAL: ABSOLUTE SCROLL PREVENTION */
html {
  overflow-x: hidden !important;
  overflow-x: clip !important;
  max-width: 100vw !important;
  width: 100% !important;
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
}

body {
  overflow-x: hidden !important;
  overflow-x: clip !important;
  max-width: 100vw !important;
  width: 100% !important;
  position: relative !important;
  margin: 0 !important;
  padding: 0 !important;
  min-height: 100vh !important;
  overflow-y: auto !important;
}

/* Wrapper for scrolling */
.check-page {
  min-height: 100vh;
  background: linear-gradient(135deg, #ffffff 0%, #f0fff8 100%);
  padding: 60px 20px;
  overflow-x: hidden !important;
  overflow-x: clip !important;
  width: 100% !important;
  max-width: 100% !important;
  position: relative;
}

/* Kill Shopify Default Styles */
.shopify-section:has(.check-page) {
  display: block !important;
  padding: 0 !important;
  margin: 0 !important;
  grid-template-columns: unset !important;
  max-width: 100% !important;
  overflow-x: hidden !important;
  overflow-x: clip !important;
  width: 100% !important;
}

[data-theme="dark"] .check-page {
  background: linear-gradient(135deg, #0a0a0a 0%, #0f1f1a 100%);
}

.check-container {
  max-width: 680px;
  margin: 0 auto;
  width: 100%;
  position: relative;
}

/* Search Card - Enterprise Style */
.search-card {
  background: var(--bg-card);
  border-radius: var(--radius-lg);
  padding: 48px;
  box-shadow: var(--shadow-xl);
  margin-bottom: 32px;
  text-align: center;
  transition: var(--transition);
  border: 1px solid var(--border-light);
  position: relative;
  overflow: hidden;
}

/* Removed green stripe */

.search-card.hidden {
  display: none !important;
}

.search-title {
  font-size: 32px;
  font-weight: 800;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: 32px;
  letter-spacing: -0.5px;
}

/* Search Form - Enterprise Style */
.search-form {
  display: flex;
  background: linear-gradient(135deg, #f8f8f8, #f0f0f0);
  border-radius: var(--radius-full);
  padding: 6px;
  border: 2px solid transparent;
  transition: var(--transition);
  box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.04);
  position: relative;
}

[data-theme="dark"] .search-form {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.02));
}

.search-form:focus-within {
  border-color: var(--primary);
  box-shadow: 0 0 0 4px rgba(0, 154, 97, 0.1), inset 0 2px 8px rgba(0, 0, 0, 0.04);
}

.search-input {
  flex: 1;
  padding: 18px 28px;
  background: transparent;
  border: none;
  outline: none;
  font-size: 16px;
  font-weight: 500;
  color: var(--text);
  letter-spacing: 0.2px;
}

.search-input::placeholder {
  color: var(--text-muted);
  font-weight: 400;
}

.search-btn {
  padding: 16px 40px;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  border: none;
  border-radius: var(--radius-full);
  font-size: 15px;
  font-weight: 700;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.2);
  white-space: nowrap;
}

.search-btn:hover:not(:disabled) {
  transform: scale(1.05);
  box-shadow: 0 6px 20px rgba(0, 154, 97, 0.3);
}

.search-btn:active:not(:disabled) {
  transform: scale(0.98);
}

.search-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  box-shadow: none;
}

/* Message Styling */
.message {
  margin-top: 20px;
  padding: 14px 20px;
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  display: none;
  animation: messageSlide 0.3s ease;
}

@keyframes messageSlide {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.message.show {
  display: block;
}

.message.error {
  background: linear-gradient(135deg, #fee2e2, #fecaca);
  color: #dc2626;
  border: 1px solid rgba(220, 38, 38, 0.2);
}

.message.success {
  background: linear-gradient(135deg, #d1fae5, #a7f3d0);
  color: #065f46;
  border: 1px solid rgba(6, 95, 70, 0.2);
}

/* Loading State */
.loading {
  display: none;
  text-align: center;
  padding: 80px;
}

.loading.active {
  display: block;
  animation: fadeIn 0.3s ease;
}

.spinner {
  width: 56px;
  height: 56px;
  border: 4px solid rgba(0, 154, 97, 0.1);
  border-top-color: var(--primary);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  margin: 0 auto 20px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Main eSIM Card - Enterprise Style */
.esim-card {
  display: none;
  background: var(--bg-card);
  border-radius: var(--radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-xl);
  animation: slideIn 0.5s ease;
  border: 1px solid var(--border-light);
  position: relative;
}

.esim-card.active {
  display: block;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* eSIM Header */
.esim-header {
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  padding: 40px;
  text-align: center;
  position: relative;
  overflow: hidden;
}

.esim-header::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
  animation: pulse 3s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 0.5; }
  50% { transform: scale(1.1); opacity: 0.8; }
}

.package-name {
  font-size: 34px; /* Increased from 30px */
  font-weight: 800;
  margin-bottom: 16px;
  letter-spacing: -0.5px;
  position: relative;
  z-index: 1;
}

.status-badges {
  display: flex;
  justify-content: center;
  gap: 12px;
  flex-wrap: wrap;
  position: relative;
  z-index: 1;
}

.status-badge {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 8px 20px;
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  border-radius: var(--radius-full);
  font-size: 13px;
  font-weight: 600;
  border: 1px solid rgba(255, 255, 255, 0.3);
}

.status-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: currentColor;
  animation: blink 2s infinite;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

/* Quick Info Grid */
.quick-info {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  padding: 32px;
  gap: 20px;
  background: linear-gradient(to bottom, rgba(0, 154, 97, 0.02), transparent);
  border-bottom: 1px solid var(--border-light);
}

.info-item {
  text-align: center;
}

.info-icon {
  width: 48px;
  height: 48px;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  border-radius: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 12px;
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.2);
}

.info-icon svg {
  width: 24px;
  height: 24px;
  color: white;
}

.info-label {
  font-size: 11px;
  text-transform: uppercase;
  color: var(--text-muted);
  letter-spacing: 0.8px;
  margin-bottom: 6px;
  font-weight: 600;
}

.info-value {
  font-size: 20px;
  font-weight: 700;
  color: var(--text);
  letter-spacing: -0.3px;
}

/* QR Section */
.qr-section {
  padding: 40px;
  text-align: center;
  border-bottom: 1px solid var(--border-light);
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.01), transparent);
  position: relative;
}

.qr-container {
  position: relative;
  display: inline-block;
  max-width: 100%;
}

.qr-code {
  width: 220px;
  height: 220px;
  border: 3px solid var(--border);
  border-radius: 24px;
  padding: 12px;
  background: white;
  box-shadow: var(--shadow-lg);
  max-width: 100%;
}

.qr-blur {
  filter: blur(12px);
  opacity: 0.5;
  pointer-events: none;
}

.verify-overlay {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: var(--bg-overlay);
  backdrop-filter: blur(12px);
  border-radius: 24px;
  padding: 24px;
  box-shadow: inset 0 0 0 1px var(--border);
}

[data-theme="dark"] .verify-overlay {
  background: rgba(26, 26, 26, 0.95);
}

.verify-overlay.hidden {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: var(--transition);
}

.verify-icon {
  width: 56px;
  height: 56px;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 16px;
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.3);
}

.verify-icon svg {
  width: 28px;
  height: 28px;
  color: white;
}

.verify-text {
  font-size: 15px;
  color: var(--text-secondary);
  margin-bottom: 20px;
  font-weight: 500;
}

.verify-btn {
  padding: 12px 32px;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  border: none;
  border-radius: var(--radius-full);
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: 0 4px 16px rgba(0, 154, 97, 0.3);
}

.verify-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 154, 97, 0.4);
}

/* QR Actions - Hide initially */
.qr-actions {
  display: none; /* Hidden by default */
  gap: 12px;
  justify-content: center;
  margin-top: 24px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.qr-actions.visible {
  display: flex;
  opacity: 1;
}

.qr-action {
  padding: 12px 24px;
  background: var(--bg-card);
  border: 2px solid var(--border);
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition);
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.qr-action:hover {
  border-color: var(--primary);
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.05), rgba(0, 217, 126, 0.05));
  transform: translateY(-2px);
}

.qr-action svg {
  width: 18px;
  height: 18px;
  color: var(--primary);
}

/* Usage Section */
.usage-section {
  padding: 40px;
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.01), transparent);
  border-bottom: 1px solid var(--border-light);
}

.usage-title {
  font-size: 20px;
  font-weight: 700;
  text-align: center;
  margin-bottom: 32px;
  color: var(--text);
  letter-spacing: -0.3px;
}

.usage-visual {
  max-width: 200px;
  margin: 0 auto 32px;
  position: relative;
}

.usage-ring {
  width: 100%;
  aspect-ratio: 1;
}

.ring-bg {
  fill: none;
  stroke: var(--border);
  stroke-width: 12;
}

.ring-progress {
  fill: none;
  stroke: url(#gradient);
  stroke-width: 12;
  stroke-linecap: round;
  transform: rotate(-90deg);
  transform-origin: center;
  transition: stroke-dashoffset 1s cubic-bezier(0.4, 0, 0.2, 1);
}

.usage-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.usage-percent {
  font-size: 40px;
  font-weight: 800;
  color: var(--primary);
  letter-spacing: -1px;
}

.usage-percent.low {
  color: #ef4444;
  animation: lowPulse 1.5s ease infinite;
}

@keyframes lowPulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

.usage-label {
  font-size: 12px;
  color: var(--text-muted);
  text-transform: uppercase;
  letter-spacing: 0.8px;
  font-weight: 600;
}

.usage-stats {
  display: flex;
  justify-content: space-around;
  padding: 24px;
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.03), rgba(0, 217, 126, 0.03));
  border-radius: var(--radius-md);
  border: 1px solid var(--border-light);
}

.usage-stat {
  text-align: center;
}

.stat-value {
  font-size: 24px;
  font-weight: 700;
  color: var(--text);
  display: block;
  letter-spacing: -0.5px;
}

.stat-label {
  font-size: 11px;
  color: var(--text-muted);
  text-transform: uppercase;
  letter-spacing: 0.8px;
  margin-top: 6px;
  font-weight: 600;
}

/* Details Section */
.details-section {
  padding: 40px;
  background: var(--bg-card);
}

.details-grid {
  display: grid;
  gap: 16px;
}

.detail-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px 20px;
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.02), transparent);
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-light);
  transition: var(--transition);
}

.detail-row:hover {
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.04), transparent);
  border-color: var(--border);
}

.detail-label {
  font-size: 13px;
  text-transform: uppercase;
  color: var(--text-muted);
  letter-spacing: 0.8px;
  font-weight: 600;
}

.detail-value {
  font-size: 15px;
  font-weight: 600;
  color: var(--text);
  word-break: break-all;
  font-family: 'SF Mono', 'Monaco', monospace;
}

/* Action Section */
.action-section {
  padding: 40px;
  text-align: center;
  background: linear-gradient(to bottom, rgba(0, 154, 97, 0.02), transparent);
}

.primary-btn {
  padding: 20px 56px;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  border: none;
  border-radius: var(--radius-full);
  font-size: 16px;
  font-weight: 700;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: 0 8px 32px rgba(0, 154, 97, 0.3);
  position: relative;
  overflow: hidden;
}

.primary-btn::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.primary-btn:hover:not(:disabled)::before {
  width: 300px;
  height: 300px;
}

.primary-btn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 12px 40px rgba(0, 154, 97, 0.4);
}

.primary-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  box-shadow: none;
}

.action-info {
  margin-top: 16px;
  font-size: 14px;
  color: var(--text-secondary);
  font-weight: 500;
}

.action-info.warning {
  color: #f59e0b;
}

.action-info.error {
  color: #ef4444;
}

/* Modals - Enterprise Style */
.modal {
  display: none;
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(8px);
  z-index: 9999;
  align-items: center;
  justify-content: center;
  padding: 20px;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.modal.active {
  display: flex;
  opacity: 1;
}

.modal-content {
  background: var(--bg-card);
  padding: 48px;
  border-radius: var(--radius-lg);
  max-width: 520px;
  width: 100%;
  box-shadow: 0 24px 64px rgba(0, 0, 0, 0.4);
  position: relative;
  animation: modalSlide 0.3s ease;
  border: 1px solid var(--border-light);
  max-height: 90vh;
  overflow-y: auto;
}

@keyframes modalSlide {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.modal-header {
  text-align: center;
  margin-bottom: 32px;
}

.modal-title {
  font-size: 26px;
  font-weight: 700;
  color: var(--text);
  margin-bottom: 8px;
  letter-spacing: -0.5px;
}

.modal-subtitle {
  color: var(--text-secondary);
  font-size: 15px;
  font-weight: 500;
}

.modal-input {
  width: 100%;
  padding: 16px 20px;
  border: 2px solid var(--border);
  border-radius: var(--radius-sm);
  font-size: 15px;
  font-weight: 500;
  margin-bottom: 24px;
  transition: var(--transition);
  background: var(--bg-card);
  color: var(--text);
}

.modal-input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 4px rgba(0, 154, 97, 0.1);
}

.modal-actions {
  display: flex;
  gap: 12px;
}

.modal-btn {
  flex: 1;
  padding: 16px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 15px;
  font-weight: 600;
  cursor: pointer;
  transition: var(--transition);
}

.modal-btn.primary {
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  box-shadow: 0 4px 16px rgba(0, 154, 97, 0.3);
}

.modal-btn.primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 154, 97, 0.4);
}

.modal-btn.secondary {
  background: #f3f4f6;
  color: var(--text-secondary);
}

[data-theme="dark"] .modal-btn.secondary {
  background: rgba(255, 255, 255, 0.1);
  color: var(--text-secondary);
}

.modal-btn.secondary:hover {
  background: #e5e7eb;
}

/* Top-Up Modal */
.topup-content {
  max-height: 80vh;
  overflow-y: auto;
}

.topup-plans {
  display: grid;
  gap: 16px;
  margin-bottom: 20px;
  max-height: 400px;
  overflow-y: auto;
  padding-right: 8px;
}

.topup-plan {
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.03), rgba(0, 217, 126, 0.03));
  border: 2px solid var(--border);
  border-radius: var(--radius-md);
  padding: 24px;
  text-align: center;
  cursor: pointer;
  transition: var(--transition);
  position: relative;
  overflow: hidden;
}

.topup-plan::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(0, 154, 97, 0.1), transparent);
  transition: left 0.5s ease;
}

.topup-plan:hover::before {
  left: 100%;
}

.topup-plan:hover {
  border-color: var(--primary);
  /* Removed transform scale */
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.15);
}

.topup-name {
  font-size: 18px;
  font-weight: 700;
  color: var(--text);
  margin-bottom: 8px;
  letter-spacing: -0.3px;
}

.topup-price {
  font-size: 32px;
  font-weight: 800;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: 16px;
  letter-spacing: -0.5px;
}

.topup-buy {
  width: 100%;
  padding: 12px;
  background: linear-gradient(135deg, var(--primary), var(--primary-light));
  color: white;
  border: none;
  border-radius: var(--radius-full);
  font-size: 14px;
  font-weight: 700;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: var(--transition);
  box-shadow: 0 4px 12px rgba(0, 154, 97, 0.2);
}

.topup-buy:hover {
  transform: scale(1.05);
  box-shadow: 0 6px 16px rgba(0, 154, 97, 0.3);
}

.modal-close {
  position: absolute;
  top: 24px;
  right: 24px;
  width: 40px;
  height: 40px;
  background: rgba(0, 0, 0, 0.05);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition);
  font-size: 20px;
  color: var(--text-secondary);
}

.modal-close:hover {
  background: rgba(239, 68, 68, 0.1);
  transform: rotate(90deg);
  color: #ef4444;
}

/* Mobile Optimizations */
@media (max-width: 640px) {
  /* CRITICAL: Force prevent horizontal scroll on EVERY element */
  *, *::before, *::after {
    max-width: 100vw !important;
  }
  
  body, html {
    overflow-x: hidden !important;
    width: 100% !important;
    position: relative !important;
  }
  
  .check-page {
    padding: 24px 16px;
    overflow: hidden !important;
    max-width: 100% !important;
    width: 100% !important;
  }
  
  .check-container {
    max-width: 100% !important;
    padding: 0 !important;
    overflow: hidden !important;
  }
  
  /* Prevent all sections from overflow */
  .search-card, .esim-card, .modal-content {
    max-width: calc(100vw - 32px) !important;
    overflow: hidden !important;
  }
  
  .search-card {
    padding: 32px 20px;
    border-radius: var(--radius-md);
  }
  
  .search-title {
    font-size: 26px;
  }
  
  /* Mobile Search Form - Improved */
  .search-form {
    flex-direction: column;
    gap: 12px;
    padding: 12px;
    border-radius: var(--radius-md);
    background: linear-gradient(135deg, #f8f8f8, #f4f4f4);
  }
  
  .search-input {
    width: 100%;
    padding: 16px 20px;
    background: white;
    border-radius: var(--radius-sm);
    border: 1px solid var(--border);
    font-size: 16px; /* Prevent zoom on iOS */
  }
  
  [data-theme="dark"] .search-input {
    background: rgba(255, 255, 255, 0.05);
  }
  
  .search-btn {
    width: 100%;
    padding: 16px;
    border-radius: var(--radius-sm);
    font-size: 16px;
  }
  
  /* Package Name Mobile */
  .package-name {
    font-size: 28px;
  }
  
  .esim-header {
    padding: 32px 24px;
  }
  
  .quick-info {
    grid-template-columns: repeat(3, 1fr);
    padding: 24px 16px;
    gap: 12px;
  }
  
  .info-icon {
    width: 40px;
    height: 40px;
  }
  
  .info-value {
    font-size: 16px;
  }
  
  .qr-section {
    padding: 32px 20px;
    overflow: hidden; /* Prevent horizontal scroll */
  }
  
  .qr-code {
    width: 220px;
    height: 220px;
    max-width: 85vw; /* Responsive to viewport */
  }
  
  .modal-content {
    padding: 32px 20px;
    margin: 20px;
    max-width: calc(100vw - 40px); /* Prevent horizontal scroll */
  }
  
  .modal-title {
    font-size: 22px;
  }
  
  .usage-stats {
    padding: 20px 16px;
  }
  
  .stat-value {
    font-size: 20px;
  }
  
  .primary-btn {
    padding: 18px 32px;
    font-size: 15px;
  }
  
  /* Prevent horizontal scroll on all sections */
  .check-container,
  .search-card,
  .esim-card,
  .esim-header,
  .quick-info,
  .qr-section,
  .usage-section,
  .details-section,
  .action-section {
    max-width: 100%;
    overflow-x: hidden;
  }
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Loading Overlay for Modals */
.modal-loading {
  position: absolute;
  inset: 0;
  background: rgba(255, 255, 255, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-lg);
  opacity: 0;
  visibility: hidden;
  transition: var(--transition);
}

[data-theme="dark"] .modal-loading {
  background: rgba(26, 26, 26, 0.9);
}

.modal-loading.active {
  opacity: 1;
  visibility: visible;
}
</style>

<!-- HTML -->
<div class="check-page">
  <div class="check-container">
    
    <!-- Search Card -->
    <div class="search-card" id="searchCard">
      <h1 class="search-title">{{ 'check.title' | t | default: 'Check Your eSIM' }}</h1>
      
      <div class="search-form">
        <input 
          type="text" 
          id="orderInput" 
          class="search-input"
          placeholder="{{ 'check.placeholder' | t | default: 'Enter order number' }}"
          autocomplete="off"
        >
        <button id="searchBtn" class="search-btn">
          {{ 'check.search' | t | default: 'SEARCH' }}
        </button>
      </div>
      
      <div id="message" class="message"></div>
    </div>
    
    <!-- Loading -->
    <div id="loading" class="loading">
      <div class="spinner"></div>
      <p>{{ 'check.loading' | t | default: 'Loading your eSIM...' }}</p>
    </div>
    
    <!-- Main eSIM Card -->
    <div id="esimCard" class="esim-card">
      
      <!-- Header -->
      <div class="esim-header">
        <h2 class="package-name" id="packageName">-</h2>
        <div class="status-badges">
          <span class="status-badge">
            <span class="status-dot"></span>
            <span id="esimStatus">-</span>
          </span>
          <span class="status-badge" id="typeBadge">
            <span id="esimType">-</span>
          </span>
        </div>
      </div>
      
      <!-- Quick Info -->
      <div class="quick-info">
        <div class="info-item">
          <div class="info-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
          </div>
          <div class="info-label">{{ 'check.total_data' | t | default: 'Total Data' }}</div>
          <div class="info-value" id="totalData">-</div>
        </div>
        
        <div class="info-item">
          <div class="info-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div class="info-label">{{ 'check.validity' | t | default: 'Validity' }}</div>
          <div class="info-value" id="validity">-</div>
        </div>
        
        <div class="info-item">
          <div class="info-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
          </div>
          <div class="info-label">{{ 'check.expires' | t | default: 'Expires' }}</div>
          <div class="info-value" id="expiryDate">-</div>
        </div>
      </div>
      
      <!-- QR Section -->
      <div class="qr-section">
        <div class="qr-container">
          <img id="qrCode" class="qr-code qr-blur" src="" alt="QR Code">
          <div class="verify-overlay" id="verifyOverlay">
            <div class="verify-icon">
              <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
              </svg>
            </div>
            <p class="verify-text">{{ 'check.verify_text' | t | default: 'Verify email to view QR code' }}</p>
            <button class="verify-btn" id="verifyBtn">
              {{ 'check.verify_button' | t | default: 'VERIFY EMAIL' }}
            </button>
          </div>
        </div>
        <div class="qr-actions" id="qrActions">
          <button class="qr-action" id="downloadBtn">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
            </svg>
            {{ 'check.download' | t | default: 'Download' }}
          </button>
          <button class="qr-action" id="manualBtn">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
            </svg>
            {{ 'check.manual' | t | default: 'Manual' }}
          </button>
        </div>
      </div>
      
      <!-- Usage Section -->
      <div class="usage-section">
        <h3 class="usage-title">{{ 'check.data_usage' | t | default: 'Data Usage' }}</h3>
        
        <div class="usage-visual">
          <svg class="usage-ring" viewBox="0 0 120 120">
            <defs>
              <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="#009a61" />
                <stop offset="100%" stop-color="#00d97e" />
              </linearGradient>
            </defs>
            <circle cx="60" cy="60" r="50" class="ring-bg" />
            <circle cx="60" cy="60" r="50" class="ring-progress" 
                    stroke-dasharray="314" 
                    stroke-dashoffset="314" 
                    id="progressRing" />
          </svg>
          <div class="usage-center">
            <div class="usage-percent" id="usagePercent">0%</div>
            <div class="usage-label">{{ 'check.remaining' | t | default: 'Remaining' }}</div>
          </div>
        </div>
        
        <div class="usage-stats">
          <div class="usage-stat">
            <span class="stat-value" id="dataUsed">-</span>
            <span class="stat-label">{{ 'check.consumed' | t | default: 'Consumed' }}</span>
          </div>
          <div class="usage-stat">
            <span class="stat-value" id="dataLeft">-</span>
            <span class="stat-label">{{ 'check.remaining' | t | default: 'Remaining' }}</span>
          </div>
        </div>
      </div>
      
      <!-- Details Section -->
      <div class="details-section">
        <div class="details-grid">
          <div class="detail-row">
            <span class="detail-label">{{ 'check.iccid' | t | default: 'ICCID' }}</span>
            <span class="detail-value" id="iccid">-</span>
          </div>
          <div class="detail-row">
            <span class="detail-label">{{ 'check.apn' | t | default: 'APN' }}</span>
            <span class="detail-value" id="apn">-</span>
          </div>
        </div>
      </div>
      
      <!-- Action Section -->
      <div class="action-section">
        <button id="actionBtn" class="primary-btn">
          {{ 'check.topup' | t | default: 'TOP UP NOW' }}
        </button>
        <div id="actionInfo" class="action-info"></div>
      </div>
      
    </div>
    
  </div>
</div>

<!-- Email Modal -->
<div id="emailModal" class="modal">
  <div class="modal-content">
    <button class="modal-close" id="closeEmail">✕</button>
    <div class="modal-header">
      <h3 class="modal-title">{{ 'check.email_title' | t | default: 'Email Verification' }}</h3>
      <p class="modal-subtitle">{{ 'check.email_subtitle' | t | default: 'Enter your email to view QR code' }}</p>
    </div>
    <input 
      type="email" 
      id="emailInput" 
      class="modal-input"
      placeholder="{{ 'check.email_placeholder' | t | default: 'your@email.com' }}"
      autocomplete="email"
    >
    <div class="modal-actions">
      <button class="modal-btn primary" id="verifyEmail">
        {{ 'check.verify' | t | default: 'Verify' }}
      </button>
      <button class="modal-btn secondary" id="cancelEmail">
        {{ 'check.cancel' | t | default: 'Cancel' }}
      </button>
    </div>
    <div class="modal-loading" id="emailLoading">
      <div class="spinner"></div>
    </div>
  </div>
</div>

<!-- Top-Up Modal -->
<div id="topupModal" class="modal">
  <div class="modal-content topup-content">
    <button class="modal-close" id="closeTopup">✕</button>
    <div class="modal-header">
      <h3 class="modal-title">{{ 'check.topup_title' | t | default: 'Select Top-Up Plan' }}</h3>
      <p class="modal-subtitle">{{ 'check.topup_subtitle' | t | default: 'Choose your data package' }}</p>
    </div>
    <div class="topup-plans" id="topupPlans">
      <!-- Plans will load here -->
    </div>
    <div class="modal-loading" id="topupLoading">
      <div class="spinner"></div>
    </div>
  </div>
</div>

<script>
// Check jQuery
if (typeof jQuery === 'undefined') {
  var script = document.createElement('script');
  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js';
  document.head.appendChild(script);
  script.onload = initEsimCheck;
} else {
  jQuery(document).ready(initEsimCheck);
}

function initEsimCheck() {
  const $ = jQuery;
  
  // State Management
  let currentOrder = null;
  let currentEsim = null;
  let isEmailVerified = false;
  let attempts = 0;
  const maxAttempts = 3;
  const lockDuration = 60 * 60 * 1000; // 1 hour
  
  // Initialize
  init();
  
  function init() {
    // Check lockout
    checkLockout();
    
    // URL params
    const urlParams = new URLSearchParams(window.location.search);
    const orderParam = urlParams.get('order_number');
    if (orderParam) {
      $('#orderInput').val(orderParam);
      setTimeout(() => search(), 500);
    }
    
    // Event Handlers
    $('#searchBtn').click(search);
    $('#orderInput').keypress(e => { if (e.which === 13) search(); });
    
    // Email Verification
    $('#verifyBtn').click(() => $('#emailModal').addClass('active'));
    $('#verifyEmail').click(verifyEmail);
    $('#cancelEmail, #closeEmail').click(() => {
      $('#emailModal').removeClass('active');
      $('#emailInput').val('');
      $('#emailLoading').removeClass('active');
    });
    
    // Top-Up Modal
    $('#closeTopup').click(() => {
      $('#topupModal').removeClass('active');
      $('#topupLoading').removeClass('active');
      // FIX: Show search card again when closing modal
      if (!currentEsim) {
        $('#searchCard').show();
      }
    });
    
    $('#actionBtn').click(handleAction);
    $('#downloadBtn').click(downloadQR);
    $('#manualBtn').click(showManual);
    
    // Prevent body scroll when modal is open
    $('.modal').on('wheel touchmove', function(e) {
      if ($(e.target).closest('.modal-content').length === 0) {
        e.preventDefault();
      }
    });
  }
  
  // Check lockout
  function checkLockout() {
    const lockEnd = sessionStorage.getItem('lockEnd');
    if (lockEnd && Date.now() < parseInt(lockEnd)) {
      const mins = Math.ceil((parseInt(lockEnd) - Date.now()) / 60000);
      showMessage(`{{ 'check.locked' | t | default: 'Too many attempts. Try again in %mins% minutes' }}`.replace('%mins%', mins), 'error');
      $('#searchBtn').prop('disabled', true);
      return true;
    }
    $('#searchBtn').prop('disabled', false);
    return false;
  }
  
  // Search
  function search() {
    if (checkLockout()) return;
    
    const order = $('#orderInput').val().trim();
    if (!order) {
      showMessage('{{ 'check.enter_order' | t | default: 'Please enter order number' }}', 'error');
      return;
    }
    
    currentOrder = order;
    showLoading(true);
    hideMessage();
    
    $.ajax({
      url: 'https://simbye.com/apps/topup/info/' + order,
      method: 'GET',
      headers: { 'Accept': 'application/json' },
      timeout: 15000,
      success: response => {
        showLoading(false);
        if (response?.data?.obj?.esimList?.[0]) {
          currentEsim = response.data.obj.esimList[0];
          attempts = 0;
          displayEsim();
          $('#searchCard').hide(); // Direct hide instead of class
        } else {
          handleFailedAttempt();
        }
      },
      error: () => {
        showLoading(false);
        handleFailedAttempt();
      }
    });
  }
  
  // Handle failed attempt
  function handleFailedAttempt() {
    attempts++;
    if (attempts >= maxAttempts) {
      sessionStorage.setItem('lockEnd', Date.now() + lockDuration);
      checkLockout();
    } else {
      showMessage(`{{ 'check.not_found' | t | default: 'Order not found. Attempt %attempt% of %max%' }}`
        .replace('%attempt%', attempts)
        .replace('%max%', maxAttempts), 'error');
    }
  }
  
  // Display eSIM
  function displayEsim() {
    const pkg = currentEsim.packageList?.[0] || {};
    
    // Show card
    $('#esimCard').addClass('active');
    
    // Package name
    $('#packageName').text(pkg.packageName || 'eSIM Package');
    
    // Status
    const status = getStatus();
    $('#esimStatus').text(status.label);
    
    // Type
    const type = getType();
    $('#esimType').text(type.label);
    
    // Data calculations
    const totalGB = (currentEsim.totalVolume / 1073741824).toFixed(2);
    const usedGB = (currentEsim.orderUsage / 1073741824).toFixed(2);
    const leftGB = Math.max(0, totalGB - usedGB).toFixed(2);
    const remainingPercent = Math.max(0, 100 - (currentEsim.orderUsage / currentEsim.totalVolume * 100));
    
    // Quick info
    $('#totalData').text(totalGB + ' GB');
    $('#validity').text((currentEsim.totalDuration || 0) + ' {{ 'check.days' | t | default: 'Days' }}');
    $('#expiryDate').text(formatDate(currentEsim.expiredTime));
    
    // Usage visualization
    $('#usagePercent').text(Math.round(remainingPercent) + '%');
    if (remainingPercent < 20) $('#usagePercent').addClass('low');
    
    const circumference = 2 * Math.PI * 50;
    const offset = circumference - (remainingPercent / 100) * circumference;
    $('#progressRing').css('stroke-dashoffset', offset);
    
    $('#dataUsed').text(usedGB + ' GB');
    $('#dataLeft').text(leftGB + ' GB');
    
    // Details (hide sensitive data until verified)
    $('#iccid').text(formatIccid(currentEsim.iccid));
    $('#apn').text('****'); // Hidden until verified
    
    // Hide QR actions initially
    $('#qrActions').removeClass('visible');
    
    // Action button
    updateAction(type);
    
    showMessage('{{ 'check.found' | t | default: 'eSIM found! Verify email for full details' }}', 'success');
  }
  
  // Get status
  function getStatus() {
    if (isExpired()) return { label: '{{ 'check.status_expired' | t | default: 'Expired' }}', color: 'red' };
    
    switch(currentEsim.esimStatus) {
      case 'IN_USE': return { label: '{{ 'check.status_active' | t | default: 'Active' }}', color: 'green' };
      case 'NEW': return { label: '{{ 'check.status_ready' | t | default: 'Ready' }}', color: 'yellow' };
      case 'ONBOARD': return { label: '{{ 'check.status_installed' | t | default: 'Already Installed' }}', color: 'green' };
      case 'GOT_RESOURCE': return { label: '{{ 'check.status_ready_install' | t | default: 'Ready to Install' }}', color: 'yellow' };
      case 'USEDUP': return { label: '{{ 'check.status_used' | t | default: 'Used Up' }}', color: 'red' };
      default: return { label: '{{ 'check.status_unknown' | t | default: 'Unknown' }}', color: 'gray' };
    }
  }
  
  // Get type
  function getType() {
    const pkg = currentEsim.packageList?.[0] || {};
    const slug = (pkg.slug || '').toLowerCase();
    const name = (pkg.packageName || '').toLowerCase();
    
    if (slug.includes('daily') || slug.includes('_daily')) {
      return { 
        type: 'DAILY',
        label: '{{ 'check.type_daily' | t | default: 'Daily Reset' }}',
        canTopUp: false
      };
    }
    
    if (name.includes('unlimited')) {
      return {
        type: 'UNLIMITED',
        label: '{{ 'check.type_unlimited' | t | default: 'Unlimited' }}',
        canTopUp: false
      };
    }
    
    if (isExpired()) {
      return {
        type: 'EXPIRED',
        label: '{{ 'check.type_expired' | t | default: 'Expired' }}',
        canTopUp: false
      };
    }
    
    return {
      type: 'NORMAL',
      label: '{{ 'check.type_standard' | t | default: 'Standard' }}',
      canTopUp: true
    };
  }
  
  // Update action button
  function updateAction(type) {
    const $btn = $('#actionBtn');
    const $info = $('#actionInfo');
    
    if (type.type === 'EXPIRED') {
      $btn.text('{{ 'check.buy_new' | t | default: 'BUY NEW ESIM' }}').prop('disabled', false);
      $info.text('{{ 'check.expired_info' | t | default: 'This eSIM has expired' }}').addClass('error');
      $btn.off('click').click(() => window.location.href = '/collections/all');
      
    } else if (type.type === 'DAILY' || type.type === 'UNLIMITED') {
      $btn.text('{{ 'check.not_rechargeable' | t | default: 'NOT RECHARGEABLE' }}').prop('disabled', true);
      $info.text('{{ 'check.daily_info' | t | default: 'Daily/Unlimited plans cannot be topped up' }}').addClass('warning');
      
    } else if (type.canTopUp) {
      $btn.text('{{ 'check.topup_now' | t | default: 'TOP UP NOW' }}').prop('disabled', false);
      $info.text('{{ 'check.topup_info' | t | default: 'Add more data anytime' }}').removeClass('warning error');
      $btn.off('click').click(handleAction);
    }
  }
  
  // Handle action
  function handleAction() {
    const type = getType();
    if (type.canTopUp) {
      loadTopUp();
    }
  }
  
  // Load top-up
  function loadTopUp() {
    if (!currentEsim) return;
    
    const pkg = currentEsim.packageList?.[0] || {};
    const currency = window.Shopify?.currency?.active || 'EUR';
    
    $('#topupModal').addClass('active');
    $('#topupLoading').addClass('active');
    
    $.ajax({
      url: `https://simbye.com/apps/topup/plans?esimTranNo=${currentEsim.esimTranNo}&packageCode=${pkg.packageCode}&currency=${currency}`,
      method: 'GET',
      headers: { 'Accept': 'application/json' },
      timeout: 15000,
      success: response => {
        $('#topupLoading').removeClass('active');
        if (response?.data?.length > 0) {
          displayTopUp(response.data);
        } else {
          alert('{{ 'check.no_plans' | t | default: 'No top-up plans available' }}');
          $('#topupModal').removeClass('active');
        }
      },
      error: () => {
        $('#topupLoading').removeClass('active');
        alert('{{ 'check.load_failed' | t | default: 'Failed to load plans' }}');
        $('#topupModal').removeClass('active');
      }
    });
  }
  
  // Display top-up plans
  function displayTopUp(plans) {
    let html = '';
    plans.forEach(plan => {
      html += `
        <div class="topup-plan">
          <div class="topup-name">${plan.name}</div>
          <div class="topup-price">${plan.price} ${window.Shopify?.currency?.active || 'EUR'}</div>
          <button class="topup-buy" data-variant="${plan.variant_id}" data-package="${plan.packageCode}">
            {{ 'check.buy' | t | default: 'BUY NOW' }}
          </button>
        </div>
      `;
    });
    
    $('#topupPlans').html(html);
    
    // Buy handlers
    $('.topup-buy').click(function() {
      buyTopUp($(this).data('variant'), $(this).data('package'));
    });
  }
  
  // Buy top-up
  function buyTopUp(variantId, packageCode) {
    $.post('/cart/add.js', {
      items: [{
        quantity: 1,
        id: variantId,
        properties: {
          'packageCode': packageCode,
          'esimTranNo': currentEsim.esimTranNo,
          'type': 'TOPUP'
        }
      }]
    })
    .done(() => window.location.href = '/checkout')
    .fail(() => alert('{{ 'check.cart_failed' | t | default: 'Failed to add to cart' }}'));
  }
  
  // Verify email
  function verifyEmail() {
    const email = $('#emailInput').val().trim();
    if (!email || !email.includes('@')) {
      alert('{{ 'check.enter_email' | t | default: 'Please enter valid email' }}');
      return;
    }
    
    $('#emailLoading').addClass('active');
    
    $.ajax({
      url: `https://simbye.com/apps/topup/info/${currentOrder}/${email}`,
      method: 'GET',
      headers: { 'Accept': 'application/json' },
      timeout: 15000,
      success: response => {
        $('#emailLoading').removeClass('active');
        if (response?.data?.obj?.esimList?.[0]) {
          currentEsim = response.data.obj.esimList[0];
          isEmailVerified = true;
          displayFullData();
          $('#emailModal').removeClass('active');
          $('#emailInput').val('');
        } else {
          alert('{{ 'check.verify_failed' | t | default: 'Verification failed' }}');
        }
      },
      error: () => {
        $('#emailLoading').removeClass('active');
        alert('{{ 'check.verify_failed' | t | default: 'Verification failed' }}');
      }
    });
  }
  
  // Display full data after verification
  function displayFullData() {
    // Show QR Code
    if (currentEsim.qrCodeUrl) {
      $('#qrCode').attr('src', currentEsim.qrCodeUrl).removeClass('qr-blur');
      $('#verifyOverlay').addClass('hidden');
    }
    
    // Show APN
    $('#apn').text(currentEsim.apn || 'internet');
    
    // Show QR actions
    $('#qrActions').addClass('visible');
    
    showMessage('{{ 'check.verified' | t | default: 'Email verified successfully!' }}', 'success');
  }
  
  // Download QR
  function downloadQR() {
    if (!isEmailVerified) {
      $('#emailModal').addClass('active');
      return;
    }
    
    const url = $('#qrCode').attr('src');
    if (url) {
      const a = document.createElement('a');
      a.href = url;
      a.download = `esim-qr-${currentOrder}.png`;
      a.click();
    }
  }
  
  // Show manual installation
  function showManual() {
    if (!isEmailVerified) {
      $('#emailModal').addClass('active');
      return;
    }
    
    // Check if we have shortUrl from response
    if (currentEsim?.shortUrl) {
      // Direct redirect to the shortUrl
      window.location.href = currentEsim.shortUrl;
    } else if (currentEsim?.ac) {
      // Fallback: Build manual URL if shortUrl not available
      const manualUrl = `/pages/manual-installation?order=${currentOrder}&ac=${encodeURIComponent(currentEsim.ac)}`;
      window.location.href = manualUrl;
    } else {
      alert('{{ 'check.manual_unavailable' | t | default: 'Please verify email first' }}');
    }
  }
  
  // Helpers
  function isExpired() {
    if (!currentEsim?.expiredTime) return false;
    return new Date(currentEsim.expiredTime) < new Date();
  }
  
  function formatDate(str) {
    if (!str) return '-';
    const options = { year: 'numeric', month: 'short', day: 'numeric' };
    return new Date(str).toLocaleDateString('en-US', options);
  }
  
  function formatIccid(str) {
    if (!str) return '-';
    // Show partial ICCID until verified
    if (!isEmailVerified) {
      return str.substring(0, 8) + '****' + str.substring(str.length - 4);
    }
    return str.replace(/(.{4})/g, '$1 ').trim();
  }
  
  function showMessage(msg, type) {
    $('#message').text(msg).removeClass().addClass('message ' + type + ' show');
    setTimeout(() => hideMessage(), 5000);
  }
  
  function hideMessage() {
    $('#message').removeClass('show');
  }
  
  function showLoading(show) {
    if (show) {
      $('#loading').addClass('active');
      $('#esimCard').removeClass('active');
    } else {
      $('#loading').removeClass('active');
    }
  }
  
  // Initialize - AGGRESSIVE scroll prevention
  function preventHorizontalScroll() {
    // CSS Prevention
    $('body').css({
      'overflow-x': 'hidden',
      'max-width': '100vw',
      'position': 'relative'
    });
    
    $('html').css({
      'overflow-x': 'hidden',
      'max-width': '100vw'
    });
    
    // JavaScript Prevention
    document.documentElement.style.overflowX = 'hidden';
    document.documentElement.style.maxWidth = '100vw';
    document.body.style.overflowX = 'hidden';
    document.body.style.maxWidth = '100vw';
    
    // Prevent touchmove horizontal
    let xStart = null;
    document.addEventListener('touchstart', function(e) {
      xStart = e.touches[0].clientX;
    }, { passive: true });
    
    document.addEventListener('touchmove', function(e) {
      if (!xStart) return;
      let xDiff = xStart - e.touches[0].clientX;
      
      // If horizontal movement detected, prevent it
      if (Math.abs(xDiff) > 0) {
        document.body.style.transform = 'translateX(0)';
        document.body.style.left = '0';
        window.scrollTo(0, window.scrollY);
      }
    }, { passive: true });
    
    // Reset on resize
    window.addEventListener('resize', function() {
      document.body.style.width = '100%';
      document.body.style.maxWidth = '100vw';
      window.scrollTo(0, window.scrollY);
    });
  }
  
  // Call prevention immediately
  preventHorizontalScroll();
}
</script>