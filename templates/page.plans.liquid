<!DOCTYPE html>
<html lang="{{ shop.locale }}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Check eSIM Status</title>
  
  <!-- jQuery LADEN - WICHTIG! -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  
  <style>
    /* SIMBYE STYLE SYSTEM */
    :root {
      --primary: #009a61;
      --primary-hover: #00824f;
      --accent: #00d97e;
      --text: #1a1a1a;
      --text-secondary: #666666;
      --bg: #f8fafc;
      --card-bg: #ffffff;
      --border: rgba(0, 0, 0, 0.08);
      --shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.06);
      --shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
      --shadow-lg: 0 12px 32px rgba(0, 154, 97, 0.15);
      --radius: 24px;
      --radius-sm: 16px;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: var(--bg);
      font-family: system-ui, -apple-system, sans-serif;
      color: var(--text);
      line-height: 1.6;
    }

    /* Container */
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 40px 20px;
    }

    /* Search Section */
    .search-section {
      background: var(--card-bg);
      border-radius: var(--radius);
      padding: 40px;
      box-shadow: var(--shadow-md);
      max-width: 600px;
      margin: 0 auto 40px;
    }

    .search-title {
      font-size: 28px;
      font-weight: 700;
      margin-bottom: 24px;
      color: var(--text);
    }

    .search-form {
      display: flex;
      gap: 12px;
    }

    .search-input {
      flex: 1;
      padding: 16px 20px;
      font-size: 16px;
      border: 2px solid var(--border);
      border-radius: var(--radius-sm);
      outline: none;
      transition: all 0.3s ease;
    }

    .search-input:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(0, 154, 97, 0.1);
    }

    .search-button {
      padding: 16px 32px;
      background: linear-gradient(135deg, var(--primary), var(--accent));
      color: white;
      border: none;
      border-radius: var(--radius-sm);
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      white-space: nowrap;
    }

    .search-button:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

    .search-button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    /* Error Message */
    .error-message {
      display: none;
      background: #fee;
      color: #c00;
      padding: 12px 16px;
      border-radius: 12px;
      margin-top: 16px;
      font-size: 14px;
    }

    .error-message.show {
      display: block;
    }

    /* Loading Spinner */
    .loading {
      display: none;
      text-align: center;
      padding: 20px;
    }

    .loading.show {
      display: block;
    }

    .spinner {
      width: 40px;
      height: 40px;
      border: 3px solid var(--border);
      border-top-color: var(--primary);
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
      margin: 0 auto;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    /* Main Content */
    .main-content {
      display: none;
      background: var(--card-bg);
      border-radius: var(--radius);
      overflow: hidden;
      box-shadow: var(--shadow-lg);
      max-width: 800px;
      margin: 0 auto;
    }

    .main-content.show {
      display: block;
      animation: fadeIn 0.5s ease;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    /* Header */
    .esim-header {
      background: linear-gradient(135deg, var(--primary), var(--accent));
      color: white;
      padding: 32px;
      text-align: center;
    }

    .esim-title {
      font-size: 32px;
      font-weight: 700;
      margin-bottom: 8px;
    }

    .esim-subtitle {
      opacity: 0.9;
      font-size: 16px;
    }

    /* QR Section */
    .qr-section {
      padding: 40px;
      text-align: center;
      background: linear-gradient(to bottom, #fff, #f8fafc);
    }

    .qr-code {
      width: 200px;
      height: 200px;
      border: 3px solid var(--border);
      border-radius: var(--radius-sm);
      box-shadow: var(--shadow-md);
      margin: 0 auto;
    }

    /* Usage Section */
    .usage-section {
      padding: 40px;
    }

    .usage-title {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 24px;
      text-align: center;
    }

    .progress-bar {
      background: #e5e7eb;
      border-radius: 12px;
      height: 32px;
      overflow: hidden;
      margin-bottom: 16px;
    }

    .progress-fill {
      height: 100%;
      background: linear-gradient(90deg, var(--primary), var(--accent));
      border-radius: 12px;
      transition: width 0.5s ease;
      display: flex;
      align-items: center;
      justify-content: flex-end;
      padding: 0 12px;
    }

    .progress-text {
      color: white;
      font-weight: 600;
      font-size: 14px;
    }

    .usage-info {
      display: flex;
      justify-content: space-between;
      color: var(--text-secondary);
    }

    /* Details Grid */
    .details-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      padding: 40px;
      background: #f8fafc;
    }

    .detail-card {
      background: white;
      padding: 24px;
      border-radius: var(--radius-sm);
      text-align: center;
      box-shadow: var(--shadow-sm);
    }

    .detail-icon {
      font-size: 32px;
      margin-bottom: 12px;
    }

    .detail-label {
      font-size: 14px;
      color: var(--text-secondary);
      margin-bottom: 8px;
    }

    .detail-value {
      font-size: 18px;
      font-weight: 600;
      color: var(--text);
    }

    /* Top Up Button */
    .topup-section {
      padding: 20px 40px 40px;
      text-align: center;
    }

    .topup-button {
      padding: 18px 48px;
      background: linear-gradient(135deg, var(--primary), var(--accent));
      color: white;
      border: none;
      border-radius: 100px;
      font-size: 18px;
      font-weight: 700;
      cursor: pointer;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      transition: all 0.3s ease;
    }

    .topup-button:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

    /* Debug Info */
    .debug-info {
      background: #f0f0f0;
      padding: 20px;
      margin-top: 20px;
      border-radius: 12px;
      font-family: monospace;
      font-size: 12px;
      display: none;
    }

    .debug-info.show {
      display: block;
    }
  </style>
</head>
<body>

<div class="container">
  <!-- Search Section -->
  <div class="search-section">
    <h1 class="search-title">Check Your eSIM Status</h1>
    
    <div class="search-form">
      <input 
        type="text" 
        id="orderNumber" 
        class="search-input"
        placeholder="Enter order number (e.g. 121233)"
      >
      <button id="searchBtn" class="search-button">Search</button>
    </div>
    
    <div id="errorMsg" class="error-message"></div>
    
    <div id="loading" class="loading">
      <div class="spinner"></div>
      <p style="margin-top: 16px; color: var(--text-secondary);">Loading...</p>
    </div>
  </div>

  <!-- Main Content (Hidden initially) -->
  <div id="mainContent" class="main-content">
    <!-- Header -->
    <div class="esim-header">
      <h2 class="esim-title" id="packageName">Loading...</h2>
      <p class="esim-subtitle">eSIM Information</p>
    </div>

    <!-- QR Code -->
    <div class="qr-section">
      <img id="qrCode" class="qr-code" src="" alt="QR Code">
    </div>

    <!-- Usage -->
    <div class="usage-section">
      <h3 class="usage-title">Data Usage</h3>
      <div class="progress-bar">
        <div id="progressBar" class="progress-fill" style="width: 0%">
          <span class="progress-text">0%</span>
        </div>
      </div>
      <div class="usage-info">
        <span>Used: <strong id="dataUsed">0 GB</strong></span>
        <span>Remaining: <strong id="dataLeft">0 GB</strong></span>
      </div>
    </div>

    <!-- Details -->
    <div class="details-grid">
      <div class="detail-card">
        <div class="detail-icon">üîë</div>
        <div class="detail-label">ICCID</div>
        <div class="detail-value" id="iccid">-</div>
      </div>
      <div class="detail-card">
        <div class="detail-icon">üìÖ</div>
        <div class="detail-label">Activation Date</div>
        <div class="detail-value" id="activationDate">-</div>
      </div>
      <div class="detail-card">
        <div class="detail-icon">üìä</div>
        <div class="detail-label">Total Data</div>
        <div class="detail-value" id="totalData">-</div>
      </div>
      <div class="detail-card">
        <div class="detail-icon">‚è≥</div>
        <div class="detail-label">Time Left</div>
        <div class="detail-value" id="timeLeft">-</div>
      </div>
    </div>

    <!-- Top Up -->
    <div class="topup-section">
      <button id="topupBtn" class="topup-button">Top Up Now</button>
    </div>
  </div>

  <!-- Debug Info -->
  <div id="debugInfo" class="debug-info">
    <strong>Debug Information:</strong>
    <div id="debugContent"></div>
  </div>
</div>

<script>
// FIXED VERSION MIT FEHLERBEHANDLUNG
$(document).ready(function() {
  console.log('‚úÖ Page loaded, jQuery version:', $.fn.jquery);
  
  // Elements
  const $orderInput = $('#orderNumber');
  const $searchBtn = $('#searchBtn');
  const $errorMsg = $('#errorMsg');
  const $loading = $('#loading');
  const $mainContent = $('#mainContent');
  const $debugInfo = $('#debugInfo');
  const $debugContent = $('#debugContent');
  
  // Check URL parameters
  const urlParams = new URLSearchParams(window.location.search);
  const orderFromUrl = urlParams.get('order_number');
  
  if (orderFromUrl) {
    console.log('üìù Found order in URL:', orderFromUrl);
    $orderInput.val(orderFromUrl);
    // Auto-search
    setTimeout(() => searchOrder(), 500);
  }
  
  // Search button click
  $searchBtn.on('click', searchOrder);
  
  // Enter key in input
  $orderInput.on('keypress', function(e) {
    if (e.which === 13) searchOrder();
  });
  
  // Main search function
  function searchOrder() {
    const orderNumber = $orderInput.val().trim();
    
    // Validation
    if (!orderNumber) {
      showError('Please enter an order number');
      return;
    }
    
    console.log('üîç Searching for order:', orderNumber);
    
    // Clear previous errors
    hideError();
    
    // Show loading
    $loading.addClass('show');
    $searchBtn.prop('disabled', true);
    $mainContent.removeClass('show');
    
    // API Call
    const apiUrl = `https://simbye.com/apps/topup/info/${orderNumber}`;
    
    // Debug info
    $debugInfo.addClass('show');
    $debugContent.html(`
      <p><strong>API URL:</strong> ${apiUrl}</p>
      <p><strong>Order Number:</strong> ${orderNumber}</p>
      <p><strong>Timestamp:</strong> ${new Date().toISOString()}</p>
    `);
    
    $.ajax({
      url: apiUrl,
      method: 'GET',
      headers: {
        'ngrok-skip-browser-warning': 'skip'
      },
      timeout: 10000, // 10 second timeout
      success: function(response) {
        console.log('‚úÖ API Response:', response);
        $debugContent.append(`<p><strong>Response:</strong> ${JSON.stringify(response, null, 2)}</p>`);
        
        // Process response
        if (response && response.data && response.data.obj && response.data.obj.esimList) {
          const esim = response.data.obj.esimList[0];
          if (esim) {
            displayEsimData(esim);
          } else {
            showError('No eSIM found for this order number');
          }
        } else {
          showError('Invalid response from server');
        }
      },
      error: function(xhr, status, error) {
        console.error('‚ùå API Error:', status, error);
        $debugContent.append(`
          <p style="color: red;"><strong>Error:</strong> ${status}</p>
          <p style="color: red;"><strong>Details:</strong> ${error}</p>
          <p style="color: red;"><strong>Response:</strong> ${xhr.responseText || 'No response'}</p>
        `);
        
        let errorMessage = 'Failed to load eSIM data. ';
        if (status === 'timeout') {
          errorMessage += 'Request timed out.';
        } else if (status === 'error') {
          errorMessage += 'Network error or API unavailable.';
        } else {
          errorMessage += status;
        }
        showError(errorMessage);
      },
      complete: function() {
        $loading.removeClass('show');
        $searchBtn.prop('disabled', false);
      }
    });
  }
  
  // Display eSIM data
  function displayEsimData(esim) {
    console.log('üìä Displaying eSIM data:', esim);
    
    const pkg = esim.packageList && esim.packageList[0] || {};
    
    // Package name
    $('#packageName').text(pkg.packageName || 'eSIM Package');
    
    // QR Code
    if (esim.qrCodeUrl) {
      $('#qrCode').attr('src', esim.qrCodeUrl);
    }
    
    // ICCID
    $('#iccid').text(esim.iccid || '-');
    
    // Activation date
    if (esim.activateTime) {
      const date = new Date(esim.activateTime);
      $('#activationDate').text(date.toLocaleDateString());
    }
    
    // Data usage
    const totalMB = (esim.totalVolume || 0) / (1024 * 1024);
    const usedMB = (esim.orderUsage || 0) / (1024 * 1024);
    const leftMB = totalMB - usedMB;
    const percentage = totalMB > 0 ? (usedMB / totalMB * 100) : 0;
    
    $('#totalData').text(formatData(totalMB));
    $('#dataUsed').text(formatData(usedMB));
    $('#dataLeft').text(formatData(leftMB));
    
    // Progress bar
    $('#progressBar').css('width', percentage + '%');
    $('#progressBar .progress-text').text(Math.round(percentage) + '%');
    
    // Time left
    if (esim.expiredTime) {
      const expired = new Date(esim.expiredTime);
      const now = new Date();
      const diff = expired - now;
      
      if (diff > 0) {
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        
        let timeText = '';
        if (days > 0) timeText += days + ' days ';
        if (hours > 0) timeText += hours + ' hours';
        $('#timeLeft').text(timeText || 'Active');
      } else {
        $('#timeLeft').text('Expired');
      }
    }
    
    // Show content
    $mainContent.addClass('show');
  }
  
  // Format data (MB to GB)
  function formatData(mb) {
    if (mb < 1024) {
      return Math.round(mb) + ' MB';
    }
    return (mb / 1024).toFixed(2) + ' GB';
  }
  
  // Error handling
  function showError(message) {
    $errorMsg.text(message).addClass('show');
  }
  
  function hideError() {
    $errorMsg.removeClass('show');
  }
  
  // Top up button
  $('#topupBtn').on('click', function() {
    alert('Top-up functionality will be implemented here');
    // Implement top-up modal here
  });
});
</script>

</body>
</html>