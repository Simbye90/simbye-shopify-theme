<!DOCTYPE html>
<html lang="{{ shop.locale }}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Check eSIM Status</title>
  
  <!-- jQuery LADEN - WICHTIG! -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  
<!-- templates/page.check-esim.liquid -->
<!-- SIMBYE CHECK ESIM - ENTERPRISE PRODUCTION VERSION FIXED -->

<style>
/* ================================================
   SIMBYE CHECK ESIM - ENTERPRISE DESIGN SYSTEM
   ================================================ */

:root {
  --check-primary: #009a61;
  --check-primary-dark: #00824f;
  --check-accent: #00d97e;
  --check-text: #1a1a1a;
  --check-text-secondary: #666666;
  --check-bg: linear-gradient(180deg, #ffffff 0%, #f8fffe 50%, #f0faf7 100%);
  --check-card-bg: #ffffff;
  --check-border: rgba(0, 0, 0, 0.06);
  --check-shadow-sm: 0 4px 12px rgba(0, 0, 0, 0.06);
  --check-shadow-md: 0 8px 24px rgba(0, 0, 0, 0.08);
  --check-shadow-lg: 0 12px 32px rgba(0, 154, 97, 0.15);
  --check-radius: 24px;
  --check-radius-sm: 16px;
  --check-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

[data-theme="dark"] {
  --check-text: #f5f5f5;
  --check-text-secondary: #999999;
  --check-bg: linear-gradient(180deg, #0a0a0a 0%, #0f0f0f 50%, #0a0a0a 100%);
  --check-card-bg: rgba(26, 26, 26, 0.95);
  --check-border: rgba(255, 255, 255, 0.08);
  --check-primary: #00d97e;
  --check-primary-dark: #009a61;
  --check-accent: #00ff88;
}

/* Kill Shopify Grid */
.shopify-section:has(.check-esim-page) {
  display: block !important;
  padding: 0 !important;
  margin: 0 !important;
  grid-template-columns: unset !important;
}

/* Main Page */
.check-esim-page {
  width: 100vw;
  margin-left: calc(-50vw + 50%);
  min-height: calc(100vh - 90px);
  background: var(--check-bg);
  padding: 60px 0;
  position: relative;
  overflow: hidden;
}

/* Container */
.check-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 40px;
  position: relative;
  z-index: 1;
}

/* Search Section */
.search-section {
  background: var(--check-card-bg);
  border-radius: var(--check-radius);
  padding: 48px;
  box-shadow: var(--check-shadow-lg);
  max-width: 650px;
  margin: 0 auto 50px;
  position: relative;
  animation: fadeInUp 0.8s ease;
  border: 2px solid var(--check-border);
  transition: var(--check-transition);
}

.search-section.hidden {
  display: none;
}

.search-header {
  text-align: center;
  margin-bottom: 40px;
}

.search-title {
  font-size: 36px;
  font-weight: 800;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: 12px;
}

.search-subtitle {
  color: var(--check-text-secondary);
  font-size: 16px;
}

/* Search Form */
.search-form {
  display: flex;
  background: #f8f8f8;
  border-radius: 100px;
  padding: 6px;
  border: 2px solid transparent;
  transition: var(--check-transition);
  position: relative;
}

[data-theme="dark"] .search-form {
  background: rgba(255, 255, 255, 0.05);
}

.search-form:focus-within {
  border-color: var(--check-primary);
  box-shadow: 0 0 0 3px rgba(0, 154, 97, 0.1);
}

.search-input {
  flex: 1;
  padding: 18px 24px;
  background: transparent;
  border: none;
  outline: none;
  font-size: 16px;
  color: var(--check-text);
  font-weight: 500;
}

.search-button {
  padding: 16px 42px;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  color: white;
  border: none;
  border-radius: 100px;
  font-size: 16px;
  font-weight: 700;
  cursor: pointer;
  transition: var(--check-transition);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  white-space: nowrap;
}

.search-button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.3);
}

.search-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Messages */
.message-box {
  margin-top: 20px;
  padding: 16px 20px;
  border-radius: var(--check-radius-sm);
  display: none;
  animation: slideIn 0.3s ease;
}

.message-box.show {
  display: block;
}

.message-box.error {
  background: #fee2e2;
  color: #dc2626;
  border: 1px solid #fca5a5;
}

.message-box.success {
  background: #d1fae5;
  color: #065f46;
  border: 1px solid #6ee7b7;
}

.message-box.warning {
  background: #fef3c7;
  color: #92400e;
  border: 1px solid #fcd34d;
}

/* Loading State */
.loading-state {
  display: none;
  text-align: center;
  padding: 60px 20px;
}

.loading-state.active {
  display: block;
  animation: fadeIn 0.3s ease;
}

.loading-spinner {
  width: 56px;
  height: 56px;
  border: 3px solid rgba(0, 154, 97, 0.1);
  border-top-color: var(--check-primary);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  margin: 0 auto 24px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Main eSIM Card */
.esim-main-card {
  display: none;
  background: var(--check-card-bg);
  border-radius: var(--check-radius);
  overflow: hidden;
  box-shadow: var(--check-shadow-lg);
  max-width: 1000px;
  margin: 0 auto;
  border: 2px solid var(--check-border);
}

.esim-main-card.active {
  display: block;
  animation: fadeInUp 0.8s ease;
}

/* eSIM Header */
.esim-header {
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  padding: 40px;
  position: relative;
  overflow: hidden;
}

.esim-header::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
  animation: subtlePulse 4s ease-in-out infinite;
}

.esim-header-content {
  position: relative;
  z-index: 1;
}

.esim-package-name {
  font-size: 32px;
  font-weight: 800;
  color: white;
  margin-bottom: 12px;
}

.esim-status-row {
  display: flex;
  align-items: center;
  gap: 20px;
  flex-wrap: wrap;
}

.status-badge {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 8px 20px;
  background: rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
  border-radius: 100px;
  color: white;
  font-size: 14px;
  font-weight: 600;
}

.status-badge.expired {
  background: rgba(239, 68, 68, 0.3);
  border: 1px solid rgba(239, 68, 68, 0.5);
}

.status-badge.active {
  background: rgba(16, 185, 129, 0.3);
  border: 1px solid rgba(16, 185, 129, 0.5);
}

.status-badge.ready {
  background: rgba(245, 158, 11, 0.3);
  border: 1px solid rgba(245, 158, 11, 0.5);
}

.status-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: currentColor;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

/* Quick Stats Grid */
.quick-stats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 24px;
  padding: 40px;
  background: linear-gradient(to bottom, var(--check-card-bg), rgba(248, 255, 254, 0.5));
}

[data-theme="dark"] .quick-stats {
  background: transparent;
}

.stat-card {
  background: var(--check-card-bg);
  padding: 24px;
  border-radius: var(--check-radius-sm);
  border: 2px solid var(--check-border);
  transition: var(--check-transition);
}

.stat-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--check-shadow-md);
}

.stat-icon {
  width: 48px;
  height: 48px;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  border-radius: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 16px;
  box-shadow: 0 6px 20px rgba(0, 154, 97, 0.25);
}

.stat-icon svg {
  width: 24px;
  height: 24px;
  color: white;
  stroke-width: 2;
}

.stat-label {
  font-size: 13px;
  text-transform: uppercase;
  color: var(--check-text-secondary);
  letter-spacing: 0.5px;
  margin-bottom: 8px;
}

.stat-value {
  font-size: 22px;
  font-weight: 700;
  color: var(--check-text);
}

.stat-value.green { color: #10b981; }
.stat-value.red { color: #ef4444; }
.stat-value.yellow { color: #f59e0b; }

/* Usage Visualization */
.usage-section {
  padding: 40px;
  background: var(--check-card-bg);
}

.usage-title {
  font-size: 24px;
  font-weight: 700;
  margin-bottom: 32px;
  text-align: center;
  color: var(--check-text);
}

.usage-ring-container {
  max-width: 300px;
  margin: 0 auto 40px;
  position: relative;
}

.usage-ring {
  width: 100%;
  aspect-ratio: 1;
  position: relative;
}

.usage-ring-bg {
  fill: none;
  stroke: #e5e7eb;
  stroke-width: 20;
}

[data-theme="dark"] .usage-ring-bg {
  stroke: rgba(255, 255, 255, 0.1);
}

.usage-ring-progress {
  fill: none;
  stroke: url(#gradient);
  stroke-width: 20;
  stroke-linecap: round;
  transform: rotate(-90deg);
  transform-origin: center;
  transition: stroke-dashoffset 1s cubic-bezier(0.4, 0, 0.2, 1);
}

.usage-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.usage-percentage {
  font-size: 48px;
  font-weight: 800;
  color: var(--check-primary);
}

.usage-percentage.low {
  color: #ef4444;
}

.usage-label {
  font-size: 14px;
  color: var(--check-text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.usage-stats {
  display: flex;
  justify-content: space-around;
  padding: 24px;
  background: rgba(0, 154, 97, 0.05);
  border-radius: var(--check-radius-sm);
}

.usage-stat {
  text-align: center;
}

.usage-stat-value {
  font-size: 24px;
  font-weight: 700;
  color: var(--check-text);
  display: block;
  margin-bottom: 4px;
}

.usage-stat-label {
  font-size: 13px;
  color: var(--check-text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Protected Content */
.protected-section {
  padding: 40px;
  background: linear-gradient(to bottom, rgba(248, 255, 254, 0.5), var(--check-card-bg));
  position: relative;
}

.protected-content {
  filter: blur(10px);
  pointer-events: none;
  user-select: none;
  opacity: 0.4;
  transition: var(--check-transition);
}

.protected-content.unlocked {
  filter: none;
  pointer-events: auto;
  user-select: auto;
  opacity: 1;
}

.verify-overlay {
  position: absolute;
  inset: 40px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border-radius: var(--check-radius);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: 2px solid var(--check-border);
  box-shadow: var(--check-shadow-lg);
  transition: var(--check-transition);
}

[data-theme="dark"] .verify-overlay {
  background: rgba(26, 26, 26, 0.95);
}

.verify-overlay.hidden {
  display: none;
}

.verify-icon {
  width: 80px;
  height: 80px;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 24px;
  box-shadow: 0 10px 30px rgba(0, 154, 97, 0.3);
}

.verify-icon svg {
  width: 40px;
  height: 40px;
  color: white;
}

.verify-title {
  font-size: 24px;
  font-weight: 700;
  color: var(--check-text);
  margin-bottom: 12px;
}

.verify-subtitle {
  color: var(--check-text-secondary);
  margin-bottom: 32px;
  text-align: center;
  max-width: 400px;
}

.verify-button {
  padding: 18px 48px;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  color: white;
  border: none;
  border-radius: 100px;
  font-size: 16px;
  font-weight: 700;
  cursor: pointer;
  transition: var(--check-transition);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.3);
}

.verify-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 32px rgba(0, 154, 97, 0.4);
}

/* QR Code Section */
.qr-container {
  text-align: center;
  padding: 40px;
}

.qr-wrapper {
  position: relative;
  display: inline-block;
}

.qr-code {
  width: 240px;
  height: 240px;
  border: 3px solid #e5e7eb;
  border-radius: var(--check-radius);
  padding: 12px;
  background: white;
  box-shadow: var(--check-shadow-lg);
}

.qr-actions {
  display: flex;
  gap: 12px;
  justify-content: center;
  margin-top: 24px;
}

.qr-action-btn {
  padding: 12px 24px;
  background: var(--check-card-bg);
  border: 2px solid var(--check-border);
  border-radius: var(--check-radius-sm);
  color: var(--check-text);
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: var(--check-transition);
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.qr-action-btn:hover {
  border-color: var(--check-primary);
  background: rgba(0, 154, 97, 0.05);
}

.qr-action-btn svg {
  width: 18px;
  height: 18px;
}

/* Technical Details */
.tech-details {
  padding: 40px;
  background: var(--check-card-bg);
}

.details-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 24px;
}

.detail-item {
  padding: 20px;
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.05), rgba(0, 217, 126, 0.05));
  border-radius: var(--check-radius-sm);
  border: 1px solid var(--check-border);
}

.detail-label {
  font-size: 12px;
  text-transform: uppercase;
  color: var(--check-text-secondary);
  letter-spacing: 0.5px;
  margin-bottom: 8px;
}

.detail-value {
  font-size: 18px;
  font-weight: 600;
  color: var(--check-text);
  word-break: break-all;
}

/* Actions Section */
.actions-section {
  padding: 40px;
  background: linear-gradient(to bottom, rgba(248, 255, 254, 0.5), var(--check-card-bg));
  text-align: center;
}

.primary-action {
  padding: 20px 60px;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  color: white;
  border: none;
  border-radius: 100px;
  font-size: 18px;
  font-weight: 700;
  cursor: pointer;
  transition: var(--check-transition);
  text-transform: uppercase;
  letter-spacing: 1px;
  box-shadow: 0 10px 30px rgba(0, 154, 97, 0.3);
  animation: subtlePulse 4s ease-in-out infinite;
}

.primary-action:hover:not(:disabled) {
  transform: translateY(-3px);
  box-shadow: 0 15px 40px rgba(0, 154, 97, 0.4);
}

.primary-action:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  animation: none;
}

.action-info {
  margin-top: 16px;
  font-size: 14px;
  color: var(--check-text-secondary);
}

.action-info.warning {
  color: #f59e0b;
  font-weight: 600;
}

.action-info.error {
  color: #ef4444;
  font-weight: 600;
}

/* Top-Up Modal */
.topup-modal {
  display: none;
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(10px);
  z-index: 9999;
  animation: fadeIn 0.3s ease;
}

.topup-modal.active {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
}

.topup-modal-content {
  background: var(--check-card-bg);
  padding: 48px;
  border-radius: var(--check-radius);
  max-width: 800px;
  width: 100%;
  max-height: 80vh;
  overflow-y: auto;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  position: relative;
}

.topup-modal-header {
  text-align: center;
  margin-bottom: 32px;
}

.topup-modal-title {
  font-size: 28px;
  font-weight: 700;
  color: var(--check-text);
  margin-bottom: 12px;
}

.topup-modal-close {
  position: absolute;
  top: 20px;
  right: 20px;
  width: 40px;
  height: 40px;
  background: rgba(0, 0, 0, 0.1);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--check-transition);
}

.topup-modal-close:hover {
  background: rgba(239, 68, 68, 0.1);
  transform: rotate(90deg);
}

.topup-modal-close svg {
  width: 20px;
  height: 20px;
  color: var(--check-text);
}

.topup-plans {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 20px;
  margin-bottom: 24px;
}

.topup-plan {
  background: linear-gradient(135deg, rgba(0, 154, 97, 0.05), rgba(0, 217, 126, 0.05));
  border: 2px solid var(--check-border);
  border-radius: var(--check-radius-sm);
  padding: 24px;
  text-align: center;
  transition: var(--check-transition);
  cursor: pointer;
}

.topup-plan:hover {
  border-color: var(--check-primary);
  transform: translateY(-4px);
  box-shadow: var(--check-shadow-md);
}

.topup-plan-name {
  font-size: 20px;
  font-weight: 700;
  color: var(--check-text);
  margin-bottom: 12px;
}

.topup-plan-price {
  font-size: 32px;
  font-weight: 800;
  color: var(--check-primary);
  margin-bottom: 16px;
}

.topup-plan-button {
  width: 100%;
  padding: 12px;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  color: white;
  border: none;
  border-radius: 100px;
  font-size: 14px;
  font-weight: 700;
  cursor: pointer;
  transition: var(--check-transition);
  text-transform: uppercase;
}

.topup-plan-button:hover {
  transform: scale(1.05);
  box-shadow: 0 8px 24px rgba(0, 154, 97, 0.3);
}

/* Email Modal */
.email-modal {
  display: none;
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(10px);
  z-index: 9999;
  animation: fadeIn 0.3s ease;
}

.email-modal.active {
  display: flex;
  align-items: center;
  justify-content: center;
}

.email-modal-content {
  background: var(--check-card-bg);
  padding: 48px;
  border-radius: var(--check-radius);
  max-width: 500px;
  width: 90%;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  position: relative;
}

.email-modal-header {
  text-align: center;
  margin-bottom: 32px;
}

.email-modal-icon {
  width: 64px;
  height: 64px;
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 20px;
}

.email-modal-icon svg {
  width: 32px;
  height: 32px;
  color: white;
}

.email-modal-title {
  font-size: 28px;
  font-weight: 700;
  color: var(--check-text);
  margin-bottom: 12px;
}

.email-modal-subtitle {
  color: var(--check-text-secondary);
  font-size: 15px;
}

.email-input {
  width: 100%;
  padding: 16px 20px;
  border: 2px solid var(--check-border);
  border-radius: var(--check-radius-sm);
  font-size: 16px;
  margin-bottom: 24px;
  transition: var(--check-transition);
}

.email-input:focus {
  outline: none;
  border-color: var(--check-primary);
  box-shadow: 0 0 0 3px rgba(0, 154, 97, 0.1);
}

.email-modal-actions {
  display: flex;
  gap: 12px;
}

.email-modal-btn {
  flex: 1;
  padding: 16px;
  border: none;
  border-radius: var(--check-radius-sm);
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: var(--check-transition);
}

.email-modal-btn.primary {
  background: linear-gradient(135deg, var(--check-primary), var(--check-accent));
  color: white;
}

.email-modal-btn.secondary {
  background: #f3f4f6;
  color: var(--check-text-secondary);
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes subtlePulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.02); }
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .check-container {
    padding: 0 20px;
  }
  
  .search-section {
    padding: 32px 24px;
    border-radius: 20px;
  }
  
  .search-title {
    font-size: 28px;
  }
  
  .search-form {
    flex-direction: column;
    padding: 8px;
    border-radius: 20px;
  }
  
  .search-button {
    width: 100%;
    margin-top: 8px;
  }
  
  .esim-header {
    padding: 32px 24px;
  }
  
  .esim-package-name {
    font-size: 24px;
  }
  
  .quick-stats {
    grid-template-columns: 1fr;
    padding: 24px;
  }
  
  .usage-ring-container {
    max-width: 250px;
  }
  
  .usage-percentage {
    font-size: 36px;
  }
  
  .details-grid {
    grid-template-columns: 1fr;
  }
  
  .primary-action {
    padding: 18px 40px;
    font-size: 16px;
  }
  
  .email-modal-content {
    padding: 32px 24px;
  }
  
  .email-modal-title {
    font-size: 24px;
  }
  
  .topup-modal-content {
    padding: 32px 24px;
  }
  
  .topup-plans {
    grid-template-columns: 1fr;
  }
  
  /* Mobile Sticky Action */
  .mobile-sticky-action {
    display: block;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 16px;
    background: var(--check-card-bg);
    box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.1);
    z-index: 100;
  }
  
  .mobile-sticky-action button {
    width: 100%;
  }
}

@media (min-width: 769px) {
  .mobile-sticky-action {
    display: none;
  }
}
</style>

<!-- Main HTML Structure -->
<div class="check-esim-page">
  <div class="check-container">
    
    <!-- Search Section -->
    <div class="search-section" id="searchSection">
      <div class="search-header">
        <h1 class="search-title">Check Your eSIM</h1>
        <p class="search-subtitle">Enter your order number to view status</p>
      </div>
      
      <div class="search-form">
        <input 
          type="text" 
          id="orderInput" 
          class="search-input"
          placeholder="Order number (e.g. 121233)"
        >
        <button id="searchBtn" class="search-button">
          SEARCH
        </button>
      </div>
      
      <div id="messageBox" class="message-box"></div>
    </div>
    
    <!-- Loading State -->
    <div id="loadingState" class="loading-state">
      <div class="loading-spinner"></div>
      <p>Loading your eSIM data...</p>
    </div>
    
    <!-- Main eSIM Card -->
    <div id="esimCard" class="esim-main-card">
      
      <!-- Header -->
      <div class="esim-header">
        <div class="esim-header-content">
          <h2 class="esim-package-name" id="packageName">Loading...</h2>
          <div class="esim-status-row">
            <div class="status-badge" id="statusBadge">
              <span class="status-dot"></span>
              <span id="statusText">Active</span>
            </div>
            <div class="status-badge" id="esimType">
              <span id="typeText">Normal</span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Quick Stats -->
      <div class="quick-stats">
        <div class="stat-card">
          <div class="stat-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
          </div>
          <div class="stat-label">Total Data</div>
          <div class="stat-value" id="totalData">0 GB</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div class="stat-label">Validity</div>
          <div class="stat-value" id="validity">0 Days</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
          </div>
          <div class="stat-label">Expires</div>
          <div class="stat-value" id="expiryDate">-</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div class="stat-label">Location</div>
          <div class="stat-value" id="location">-</div>
        </div>
      </div>
      
      <!-- Usage Visualization -->
      <div class="usage-section">
        <h3 class="usage-title">Data Usage</h3>
        
        <div class="usage-ring-container">
          <svg class="usage-ring" viewBox="0 0 200 200">
            <defs>
              <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" stop-color="#009a61" />
                <stop offset="100%" stop-color="#00d97e" />
              </linearGradient>
            </defs>
            <circle cx="100" cy="100" r="80" class="usage-ring-bg" />
            <circle cx="100" cy="100" r="80" class="usage-ring-progress" 
                    stroke-dasharray="502" 
                    stroke-dashoffset="502" 
                    id="progressRing" />
          </svg>
          <div class="usage-center">
            <div class="usage-percentage" id="usagePercent">0%</div>
            <div class="usage-label">Remaining</div>
          </div>
        </div>
        
        <div class="usage-stats">
          <div class="usage-stat">
            <span class="usage-stat-value" id="dataUsed">0 GB</span>
            <span class="usage-stat-label">Consumed</span>
          </div>
          <div class="usage-stat">
            <span class="usage-stat-value" id="dataLeft">0 GB</span>
            <span class="usage-stat-label">Remaining</span>
          </div>
        </div>
      </div>
      
      <!-- Protected Section -->
      <div class="protected-section">
        <div class="verify-overlay" id="verifyOverlay">
          <div class="verify-icon">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
          </div>
          <h3 class="verify-title">Verify Your Identity</h3>
          <p class="verify-subtitle">
            To view QR code and sensitive data, please verify your email address
          </p>
          <button class="verify-button" id="verifyBtn">
            VERIFY EMAIL
          </button>
        </div>
        
        <div class="protected-content" id="protectedContent">
          <!-- QR Code -->
          <div class="qr-container">
            <div class="qr-wrapper">
              <img id="qrCode" class="qr-code" src="" alt="QR Code">
            </div>
            <div class="qr-actions">
              <button class="qr-action-btn" id="downloadQR">
                <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                </svg>
                <span>Download</span>
              </button>
              <button class="qr-action-btn" id="shareQR">
                <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m9.032 4.026a9.001 9.001 0 01-7.432 3.901A9 9 0 015.416 17m13.168-3.026A9.001 9.001 0 0118.584 7m0 0a9 9 0 00-7.432-3.901m7.432 3.901L21 4.5M3 19.5l2.416-2.584" />
                </svg>
                <span>Share</span>
              </button>
            </div>
          </div>
          
          <!-- Technical Details -->
          <div class="tech-details">
            <div class="details-grid">
              <div class="detail-item">
                <div class="detail-label">ICCID</div>
                <div class="detail-value" id="iccid">-</div>
              </div>
              <div class="detail-item">
                <div class="detail-label">PIN</div>
                <div class="detail-value" id="pin">-</div>
              </div>
              <div class="detail-item">
                <div class="detail-label">PUK</div>
                <div class="detail-value" id="puk">-</div>
              </div>
              <div class="detail-item">
                <div class="detail-label">APN</div>
                <div class="detail-value" id="apn">-</div>
              </div>
              <div class="detail-item">
                <div class="detail-label">Network</div>
                <div class="detail-value" id="network">-</div>
              </div>
              <div class="detail-item">
                <div class="detail-label">IP Export</div>
                <div class="detail-value" id="ipExport">-</div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Actions Section -->
      <div class="actions-section">
        <button id="primaryAction" class="primary-action">
          TOP UP NOW
        </button>
        <div id="actionInfo" class="action-info"></div>
      </div>
      
    </div>
    
  </div>
</div>

<!-- Top-Up Modal -->
<div id="topupModal" class="topup-modal">
  <div class="topup-modal-content">
    <button class="topup-modal-close" id="closeTopup">
      <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
    <div class="topup-modal-header">
      <h2 class="topup-modal-title">Select Top-Up Plan</h2>
    </div>
    <div class="topup-plans" id="topupPlans">
      <!-- Plans will be loaded here -->
    </div>
  </div>
</div>

<!-- Email Verification Modal -->
<div id="emailModal" class="email-modal">
  <div class="email-modal-content">
    <div class="email-modal-header">
      <div class="email-modal-icon">
        <svg fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
        </svg>
      </div>
      <h2 class="email-modal-title">Email Verification</h2>
      <p class="email-modal-subtitle">
        Enter your email to unlock full access
      </p>
    </div>
    
    <input 
      type="email" 
      id="emailInput" 
      class="email-input"
      placeholder="your@email.com"
    >
    
    <div class="email-modal-actions">
      <button class="email-modal-btn primary" id="verifyEmailBtn">
        <span>Verify</span>
      </button>
      <button class="email-modal-btn secondary" id="cancelEmailBtn">
        <span>Cancel</span>
      </button>
    </div>
  </div>
</div>

<!-- Mobile Sticky Action (only visible on mobile) -->
<div class="mobile-sticky-action" id="mobileAction" style="display: none;">
  <button id="mobileActionBtn" class="primary-action">
    TOP UP NOW
  </button>
</div>

<script>
// Check jQuery
if (typeof jQuery === 'undefined') {
  var script = document.createElement('script');
  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js';
  document.head.appendChild(script);
  script.onload = initCheckEsim;
} else {
  jQuery(document).ready(initCheckEsim);
}

function initCheckEsim() {
  const $ = jQuery;
  
  // Global Variables
  let currentOrder = null;
  let currentEsimData = null;
  let isEmailVerified = false;
  let failedAttempts = 0;
  let maxAttempts = 3;
  let lockoutTime = 60 * 60 * 1000; // 1 hour
  
  // Initialize
  init();
  
  function init() {
    // Check lockout status
    checkLockout();
    
    // Check URL params
    const urlParams = new URLSearchParams(window.location.search);
    const orderFromUrl = urlParams.get('order_number');
    
    if (orderFromUrl) {
      $('#orderInput').val(orderFromUrl);
      setTimeout(() => searchOrder(), 500);
    }
    
    // Event Listeners
    $('#searchBtn').on('click', searchOrder);
    $('#orderInput').on('keypress', function(e) {
      if (e.which === 13) searchOrder();
    });
    $('#verifyBtn').on('click', showEmailModal);
    $('#verifyEmailBtn').on('click', verifyEmail);
    $('#cancelEmailBtn').on('click', hideEmailModal);
    $('#primaryAction').on('click', handlePrimaryAction);
    $('#mobileActionBtn').on('click', handlePrimaryAction);
    $('#downloadQR').on('click', downloadQR);
    $('#shareQR').on('click', shareQR);
    $('#closeTopup').on('click', hideTopupModal);
  }
  
  // Lockout Functions
  function checkLockout() {
    const lockoutEnd = sessionStorage.getItem('lockoutEnd');
    if (lockoutEnd && new Date().getTime() < parseInt(lockoutEnd)) {
      const remaining = Math.ceil((parseInt(lockoutEnd) - new Date().getTime()) / 1000 / 60);
      showMessage(`Too many failed attempts. Try again in ${remaining} minutes`, 'error');
      $('#searchBtn').prop('disabled', true);
      return true;
    }
    $('#searchBtn').prop('disabled', false);
    return false;
  }
  
  function setLockout() {
    const lockoutEnd = new Date().getTime() + lockoutTime;
    sessionStorage.setItem('lockoutEnd', lockoutEnd);
    checkLockout();
  }
  
  // Search Order
  function searchOrder() {
    if (checkLockout()) return;
    
    const orderNumber = $('#orderInput').val().trim();
    
    if (!orderNumber) {
      showMessage('Please enter an order number', 'warning');
      return;
    }
    
    currentOrder = orderNumber;
    hideMessage();
    showLoading(true);
    
    // API Call without email (basic data)
    $.ajax({
      url: 'https://simbye.com/apps/topup/info/' + orderNumber,
      method: 'GET',
      headers: {
        'ngrok-skip-browser-warning': 'skip',
        'Accept': 'application/json'
      },
      timeout: 10000,
      success: function(response) {
        showLoading(false);
        if (response && response.data && response.data.obj && response.data.obj.esimList && response.data.obj.esimList[0]) {
          const esim = response.data.obj.esimList[0];
          currentEsimData = esim;
          failedAttempts = 0; // Reset on success
          displayBasicData(esim);
          showMessage('eSIM found! Verify email for full access', 'success');
          // Hide search section
          $('#searchSection').slideUp();
        } else {
          failedAttempts++;
          if (failedAttempts >= maxAttempts) {
            setLockout();
            showMessage('Too many failed attempts. Locked for 1 hour', 'error');
          } else {
            showMessage(`Order not found. Attempt ${failedAttempts} of ${maxAttempts}`, 'error');
          }
        }
      },
      error: function(xhr, status, error) {
        showLoading(false);
        failedAttempts++;
        if (failedAttempts >= maxAttempts) {
          setLockout();
          showMessage('Too many failed attempts. Locked for 1 hour', 'error');
        } else {
          showMessage(`Failed to load data. Attempt ${failedAttempts} of ${maxAttempts}`, 'error');
        }
      }
    });
  }
  
  // Display Basic Data (without email verification)
  function displayBasicData(esim) {
    const pkg = esim.packageList && esim.packageList[0] || {};
    
    // Show card
    $('#esimCard').addClass('active');
    
    // Package Info
    $('#packageName').text(pkg.packageName || 'eSIM Package');
    
    // Calculate data CORRECTLY
    const totalGB = (esim.totalVolume / 1073741824).toFixed(2);
    const usedGB = (esim.orderUsage / 1073741824).toFixed(2);
    const leftGB = Math.max(0, totalGB - usedGB).toFixed(2);
    
    // Calculate remaining percentage (NOT used percentage)
    const usedPercent = esim.totalVolume > 0 ? (esim.orderUsage / esim.totalVolume) * 100 : 0;
    const remainingPercent = Math.max(0, 100 - usedPercent);
    
    // Update Stats
    $('#totalData').text(totalGB + ' GB');
    $('#validity').text((esim.totalDuration || 0) + ' Days');
    $('#expiryDate').text(formatDate(esim.expiredTime));
    $('#location').text(pkg.locationCode || '-');
    
    // Usage - show what's remaining
    $('#dataUsed').text(usedGB + ' GB');
    $('#dataLeft').text(leftGB + ' GB');
    $('#usagePercent').text(Math.round(remainingPercent) + '%');
    
    // Add color class if low
    if (remainingPercent < 20) {
      $('#usagePercent').addClass('low');
    }
    
    // Update ring progress to show remaining
    const circumference = 2 * Math.PI * 80;
    const offset = circumference - (remainingPercent / 100) * circumference;
    $('#progressRing').css('stroke-dashoffset', offset);
    
    // Detect type and status
    const esimType = detectEsimType(esim, pkg);
    const esimStatus = getEsimStatus(esim);
    
    // Update status and type badges
    updateStatusDisplay(esimStatus, esimType);
    
    // Update primary action based on type
    updatePrimaryAction(esim, esimType);
    
    // Show email verification needed
    $('#verifyOverlay').removeClass('hidden');
    $('#protectedContent').removeClass('unlocked');
  }
  
  // Detect eSIM Type - FIXED LOGIC using SLUG
  function detectEsimType(esim, pkg) {
    const slug = (pkg.slug || '').toLowerCase();
    const packageName = (pkg.packageName || '').toLowerCase();
    
    // 1. DAILY Check via SLUG (most reliable)
    if (slug.includes('daily') || slug.includes('_daily')) {
      return {
        type: 'DAILY',
        label: 'Daily Reset',
        canTopUp: false,
        info: '1GB/Day - Resets at midnight UTC'
      };
    }
    
    // 2. UNLIMITED Check
    if (packageName.includes('unlimited')) {
      return {
        type: 'UNLIMITED',
        label: 'Unlimited',
        canTopUp: false,
        info: 'No data limits'
      };
    }
    
    // 3. EXPIRED Check
    if (isExpired(esim)) {
      return {
        type: 'EXPIRED',
        label: 'Expired',
        canTopUp: false,
        info: 'This eSIM has expired'
      };
    }
    
    // 4. USEDUP Check
    if (esim.esimStatus === 'USEDUP') {
      return {
        type: 'USEDUP',
        label: 'Used Up',
        canTopUp: true, // Can still top up even if used up!
        info: '100% data consumed - Top up to continue'
      };
    }
    
    // 5. NORMAL eSIM - Always rechargeable
    return {
      type: 'NORMAL',
      label: 'Standard',
      canTopUp: true,
      info: 'Can be recharged anytime'
    };
  }
  
  // Get eSIM Status - FIXED with correct status values
  function getEsimStatus(esim) {
    // Check expired first
    if (isExpired(esim)) {
      return { 
        status: 'EXPIRED', 
        label: 'Expired',
        color: 'expired' 
      };
    }
    
    // Use actual API status values
    switch(esim.esimStatus) {
      case 'IN_USE':
        return { 
          status: 'IN_USE', 
          label: 'Active',
          color: 'active' 
        };
      case 'NEW':
        return { 
          status: 'NEW', 
          label: 'Ready',
          color: 'ready' 
        };
      case 'ONBOARD':
        return { 
          status: 'ONBOARD', 
          label: 'Installed',
          color: 'ready' 
        };
      case 'EXPIRED':
        return { 
          status: 'EXPIRED', 
          label: 'Expired',
          color: 'expired' 
        };
      case 'USEDUP':
        return { 
          status: 'USEDUP', 
          label: 'Used Up',
          color: 'expired' 
        };
      case 'GOT_RESOURCE':
        return { 
          status: 'GOT_RESOURCE', 
          label: 'Ready to Install',
          color: 'ready' 
        };
      default:
        return { 
          status: 'UNKNOWN', 
          label: 'Unknown',
          color: 'ready' 
        };
    }
  }
  
  // Update Status Display
  function updateStatusDisplay(status, type) {
    $('#statusText').text(status.label);
    $('#typeText').text(type.label);
    
    // Update badge classes
    $('#statusBadge').removeClass('active ready expired').addClass(status.color);
  }
  
  // Update Primary Action - FIXED without supportTopUpType
  function updatePrimaryAction(esim, esimType) {
    const $btn = $('#primaryAction, #mobileActionBtn');
    const $info = $('#actionInfo');
    
    // Use ONLY our logic, NOT supportTopUpType!
    if (esimType.type === 'DAILY' || esimType.type === 'UNLIMITED') {
      $btn.text('NOT RECHARGEABLE').prop('disabled', true);
      $info.text('Daily/Unlimited plans cannot be topped up').addClass('warning');
      
    } else if (esimType.type === 'EXPIRED') {
      $btn.text('BUY NEW ESIM').prop('disabled', false);
      $info.text('This eSIM has expired').addClass('error');
      $btn.off('click').on('click', function() {
        window.location.href = '/collections/all';
      });
      
    } else if (esimType.canTopUp) {
      // NORMAL or USEDUP - Can top up!
      $btn.text('TOP UP NOW').prop('disabled', false);
      $info.text('Add more data to your eSIM').removeClass('warning error');
      
    } else {
      // Fallback
      $btn.text('NOT AVAILABLE').prop('disabled', true);
      $info.text('Contact support').addClass('error');
    }
    
    // Show mobile action if scrolled
    if (window.innerWidth <= 768) {
      $(window).on('scroll', function() {
        if ($(window).scrollTop() > 500) {
          $('#mobileAction').show();
        } else {
          $('#mobileAction').hide();
        }
      });
    }
  }
  
  // Verify Email
  function verifyEmail() {
    const email = $('#emailInput').val().trim();
    
    if (!email || !validateEmail(email)) {
      alert('Please enter a valid email');
      return;
    }
    
    // API Call with email
    $.ajax({
      url: 'https://simbye.com/apps/topup/info/' + currentOrder + '/' + email,
      method: 'GET',
      headers: {
        'ngrok-skip-browser-warning': 'skip',
        'Accept': 'application/json'
      },
      timeout: 10000,
      success: function(response) {
        if (response && response.data && response.data.obj && response.data.obj.esimList) {
          const esim = response.data.obj.esimList[0];
          if (esim) {
            currentEsimData = esim;
            isEmailVerified = true;
            displayFullData(esim);
            hideEmailModal();
            showMessage('Email verified successfully!', 'success');
          }
        }
      },
      error: function() {
        alert('Email verification failed. Please try again.');
      }
    });
  }
  
  // Display Full Data (after email verification)
  function displayFullData(esim) {
    // Update with full data
    displayBasicData(esim);
    
    // Show protected content
    $('#verifyOverlay').addClass('hidden');
    $('#protectedContent').addClass('unlocked');
    
    // QR Code
    if (esim.qrCodeUrl) {
      $('#qrCode').attr('src', esim.qrCodeUrl);
    }
    
    // Technical Details
    $('#iccid').text(formatIccid(esim.iccid));
    $('#pin').text(esim.pin || '-');
    $('#puk').text(esim.puk || '-');
    $('#apn').text(esim.apn || '-');
    $('#network').text(esim.apn || '-');
    $('#ipExport').text(esim.ipExport || '-');
  }
  
  // Handle Primary Action
  function handlePrimaryAction() {
    if (!currentEsimData) return;
    
    const pkg = currentEsimData.packageList[0] || {};
    const esimType = detectEsimType(currentEsimData, pkg);
    
    if (esimType.type === 'EXPIRED') {
      // Redirect to buy new
      window.location.href = '/collections/all';
    } else if (esimType.canTopUp) {
      if (!isEmailVerified) {
        showEmailModal();
      } else {
        loadTopUpPlans(currentEsimData.esimTranNo, pkg.packageCode);
      }
    }
  }
  
  // Load Top-Up Plans - FULLY IMPLEMENTED
  function loadTopUpPlans(esimTranNo, packageCode) {
    const currency = window.Shopify?.currency?.active || 'EUR';
    
    showLoading(true);
    
    $.ajax({
      url: `https://simbye.com/apps/topup/plans?esimTranNo=${esimTranNo}&packageCode=${packageCode}&currency=${currency}`,
      method: 'GET',
      headers: {
        'ngrok-skip-browser-warning': 'skip',
        'Accept': 'application/json'
      },
      timeout: 10000,
      success: function(response) {
        showLoading(false);
        if (response && response.data && response.data.length > 0) {
          displayTopUpPlans(response.data);
        } else {
          alert('No top-up plans available for this eSIM');
        }
      },
      error: function() {
        showLoading(false);
        alert('Failed to load top-up plans. Please try again.');
      }
    });
  }
  
  // Display Top-Up Plans
  function displayTopUpPlans(plans) {
    let html = '';
    plans.forEach(plan => {
      html += `
        <div class="topup-plan">
          <div class="topup-plan-name">${plan.name}</div>
          <div class="topup-plan-price">${plan.price} ${window.Shopify?.currency?.active || 'EUR'}</div>
          <button class="topup-plan-button" 
                  data-variant="${plan.variant_id}"
                  data-package="${plan.packageCode}">
            BUY NOW
          </button>
        </div>
      `;
    });
    
    $('#topupPlans').html(html);
    $('#topupModal').addClass('active');
    
    // Add click handlers for buy buttons
    $('.topup-plan-button').on('click', function() {
      const variantId = $(this).data('variant');
      const packageCode = $(this).data('package');
      purchaseTopUp(variantId, packageCode);
    });
  }
  
  // Purchase Top-Up
  function purchaseTopUp(variantId, packageCode) {
    $.post('/cart/add.js', {
      items: [{
        quantity: 1,
        id: variantId,
        properties: {
          'packageCode': packageCode,
          'esimTranNo': currentEsimData.esimTranNo,
          'type': 'TOPUP'
        }
      }]
    })
    .done(function() {
      window.location.href = '/checkout';
    })
    .fail(function() {
      alert('Failed to add top-up to cart. Please try again.');
    });
  }
  
  // Helper Functions
  function isExpired(esim) {
    return new Date(esim.expiredTime) < new Date();
  }
  
  function formatDate(dateString) {
    if (!dateString) return '-';
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  }
  
  function formatIccid(iccid) {
    if (!iccid) return '-';
    return iccid.replace(/(.{4})/g, '$1 ').trim();
  }
  
  function validateEmail(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  }
  
  // UI Functions
  function showMessage(msg, type) {
    $('#messageBox').text(msg).removeClass().addClass('message-box ' + type + ' show');
  }
  
  function hideMessage() {
    $('#messageBox').removeClass('show');
  }
  
  function showLoading(show) {
    if (show) {
      $('#loadingState').addClass('active');
      $('#esimCard').removeClass('active');
    } else {
      $('#loadingState').removeClass('active');
    }
  }
  
  function showEmailModal() {
    $('#emailModal').addClass('active');
  }
  
  function hideEmailModal() {
    $('#emailModal').removeClass('active');
    $('#emailInput').val('');
  }
  
  function hideTopupModal() {
    $('#topupModal').removeClass('active');
  }
  
  function downloadQR() {
    const qrUrl = $('#qrCode').attr('src');
    if (qrUrl) {
      const a = document.createElement('a');
      a.href = qrUrl;
      a.download = 'esim-qr-code.png';
      a.click();
    }
  }
  
  function shareQR() {
    if (navigator.share && currentEsimData) {
      navigator.share({
        title: 'My eSIM QR Code',
        text: 'Scan this QR code to install the eSIM',
        url: currentEsimData.shortUrl || window.location.href
      });
    } else {
      alert('Share functionality not available');
    }
  }
}
</script>